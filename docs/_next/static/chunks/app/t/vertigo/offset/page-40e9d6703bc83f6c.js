(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9816],{1029:(e,n,t)=>{"use strict";t.d(n,{N:()=>i});let o={vecX:["float","vec2","vec3","vec4"]},i=(e,n)=>{let t=[],i=Array.isArray(e)?e:[e].map(e=>e in o?o[e]:e).flat();if("function"==typeof n)for(let e of i)t.push(n(e).replaceAll(/\bT\b/g,e));else for(let e of i)t.push(n.replaceAll(/\bT\b/g,e));return t.join("\n")}},14203:(e,n,t)=>{"use strict";t.d(n,{O:()=>i});var o=t(1029);let i="\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex \n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20201014 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nfloat mod289(float x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0; \n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nfloat permute(float x) {\n  return mod289(((x*34.0)+10.0)*x);\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+10.0)*x);\n}\n\nvec4 permute(vec4 x) {\n  return mod289(((x*34.0)+10.0)*x);\n}\n\nfloat taylorInvSqrt(float r) {\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\n\n\n\n\n// 2D:\n\nfloat snoise(vec2 v) {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n		+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n// 3D: \n\nfloat snoise(vec3 v)\n{ \n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n  // First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n  // Permutations\n  i = mod289(i); \n  vec4 p = permute( permute( permute( \n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n  //Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n  // Mix final noise value\n  vec4 m = max(0.5 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 105.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\n\n\n// 4D:\n\nvec4 grad4(float j, vec4 ip)\n  {\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n  vec4 p,s;\n\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n  s = vec4(lessThan(p, vec4(0.0)));\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www; \n\n  return p;\n}\n						\n// (sqrt(5) - 1)/4 = F4, used once below\n#define F4 0.309016994374947451\n\nfloat snoise(vec4 v) {\n  const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4\n                        0.276393202250021,  // 2 * G4\n                        0.414589803375032,  // 3 * G4\n                       -0.447213595499958); // -1 + 4 * G4\n\n  // First corner\n  vec4 i  = floor(v + dot(v, vec4(F4)) );\n  vec4 x0 = v -   i + dot(i, C.xxxx);\n\n  // Other corners\n\n  // Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\n  vec4 i0;\n  vec3 isX = step( x0.yzw, x0.xxx );\n  vec3 isYZ = step( x0.zww, x0.yyz );\n  //  i0.x = dot( isX, vec3( 1.0 ) );\n  i0.x = isX.x + isX.y + isX.z;\n  i0.yzw = 1.0 - isX;\n  //  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\n  i0.y += isYZ.x + isYZ.y;\n  i0.zw += 1.0 - isYZ.xy;\n  i0.z += isYZ.z;\n  i0.w += 1.0 - isYZ.z;\n\n  // i0 now contains the unique values 0,1,2,3 in each channel\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n  //  x0 = x0 - 0.0 + 0.0 * C.xxxx\n  //  x1 = x0 - i1  + 1.0 * C.xxxx\n  //  x2 = x0 - i2  + 2.0 * C.xxxx\n  //  x3 = x0 - i3  + 3.0 * C.xxxx\n  //  x4 = x0 - 1.0 + 4.0 * C.xxxx\n  vec4 x1 = x0 - i1 + C.xxxx;\n  vec4 x2 = x0 - i2 + C.yyyy;\n  vec4 x3 = x0 - i3 + C.zzzz;\n  vec4 x4 = x0 + C.wwww;\n\n  // Permutations\n  i = mod289(i); \n  float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n  vec4 j1 = permute( permute( permute( permute (\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n  // Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\n  // 7*7*6 = 294, which is close to the ring size 17*17 = 289.\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n  vec4 p0 = grad4(j0,   ip);\n  vec4 p1 = grad4(j1.x, ip);\n  vec4 p2 = grad4(j1.y, ip);\n  vec4 p3 = grad4(j1.z, ip);\n  vec4 p4 = grad4(j1.w, ip);\n\n  // Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  p4 *= taylorInvSqrt(dot(p4,p4));\n\n  // Mix contributions from the five corners\n  vec3 m0 = max(0.57 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n  vec2 m1 = max(0.57 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n  m0 = m0 * m0;\n  m1 = m1 * m1;\n  return 60.1 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n\n}\n\n\n\n\n// addons:\n// Fractal noise, based on Stefan Gustavson's Simplex noise\n".concat((0,o.N)(["vec2","vec3","vec4"],"\n  float fnoise(T p, int octaves, float persistence) {\n    float total = 0.0;           // Final noise value\n    float amplitude = 1.0;       // Initial amplitude\n    float frequency = 1.0;       // Initial frequency\n    float maxValue = 0.0;        // Used for normalization\n\n    for (int i = 0; i < octaves; i++) {\n      total += snoise(p * frequency) * amplitude;\n\n      maxValue += amplitude;   // Keep track of max amplitude\n      amplitude *= persistence; // Reduce amplitude for next octave\n      frequency *= 2.0;        // Increase frequency for next octave\n    }\n\n    // Normalize the result to stay within the range [0, 1]\n    return total / maxValue;\n  }\n\n  float fnoise(T p, int octaves) {\n    return fnoise(p, octaves, 0.5);\n  }\n\n  float fnoise(T p) {\n    return fnoise(p, 4, 0.5);\n  }\n"),"\n\nfloat snoiseFast4D(vec4 p) {\n  const float SCALAR = 0.01;\n  float a = SCALAR * dot(p.xy * 0.3, vec2(-127.1, 311.7));\n  float b = SCALAR * dot(p.zw * 0.8, vec2(269.5, -183.3));\n  float c = SCALAR * dot(p.wx * 6.0, vec2(23.14069, 2.665157));\n  float d = SCALAR * dot(p.zy * 1.3, vec2(-12.9898, 78.233));\n  return (snoise(vec2(a, b)) + snoise(vec2(d, c))) * 0.5;\n}\n\nfloat fnoiseFast4D(vec4 p, int octaves, float persistence) {\n  float total = 0.0;           // Final noise value\n  float amplitude = 1.0;       // Initial amplitude\n  float frequency = 1.0;       // Initial frequency\n  float maxValue = 0.0;        // Used for normalization\n\n  for (int i = 0; i < octaves; i++) {\n    total += snoiseFast4D(p * frequency) * amplitude;\n\n    maxValue += amplitude;   // Keep track of max amplitude\n    amplitude *= persistence; // Reduce amplitude for next octave\n    frequency *= 2.0;        // Increase frequency for next octave\n  }\n\n  // Normalize the result to stay within the range [0, 1]\n  return total / maxValue;\n}\n")},15774:(e,n,t)=>{"use strict";t.d(n,{Client:()=>I});var o=t(70691),i=t(67203),r=t(49797),a=t(99332),s=t(21667),l=t(53097),c=t(18479),x=t(77794),u=t(16465),v=t(79911),d=t(67235),f=t(7147),p=t(14203),m=t(36508),y=t(16008);class h extends u.Y{constructor(e){super(e),this.onBeforeCompile=e=>f.bI.with(e).uniforms({uTime:m.Rv.get("three").uTime,uColor2:{value:new r.Q1f("#ff9ba5")}}).varying({vWorldPosition2:"vec3"}).vertex.mainAfterAll("\n        vWorldPosition2 = (modelMatrix * vec4(transformed, 1.0)).xyz;\n      ").fragment.top(p.O).fragment.after("map_fragment","\n        float noise = fnoise(vWorldPosition2 * vec3(1.0, 1.0, 10.0) * 0.1, 2);\n        noise = fract(noise * 5.0);\n        diffuseColor.rgb = mix(diffuseColor.rgb, uColor2, noise);\n      ")}}function w(){return(0,l.yk)(function*(e){e.scene.background=new r.Q1f("#68a5d4")},[]),null}function g(){return(0,l.dB)("pointer-handler",function*(e,n){let t=d.Q.send("VERTIGO_CONTROLS").assertPayload();t.inputConfig,Object.assign(window,{controls:t});let o=(0,v.mj)(new r.eaF(new r.O3Y(.06,.01,32,96),new u.Y({color:"#f03"})),e),i=(0,v.mj)(new r.eaF(new r.WBB(.02,4),new u.Y({color:"#f03"})),e),s=new r.Pq0,l=t.dampedVertigo;yield(0,a.s)(n.domContainer,{onTap:()=>{let[e]=n.pointer.raycast(n.scene);e&&(l.ndcToScreen(n.pointer.screenPosition,s),o.position.copy(e.point),t.vertigo.focus.copy(e.point))},onChange:e=>{let{x:t,y:o}=e.position,i=new r.I9Y(t/n.domContainer.clientWidth*2-1,-(2*(o/n.domContainer.clientHeight))+1);console.log(...l.ndcToScreen(i,new r.I9Y))}}),yield n.ticker.onTick(()=>{i.position.copy(t.dampedVertigo.focus),o.rotation.copy(t.dampedVertigo.rotation)})},[]),null}function z(){return(0,l.dB)("my-scene",function*(e){(0,v.mj)(new x.u,e).regularGrid({size:100,subdivisions:[10,10,4],color:"#ffffff",opacity:[1,.3,.1]}).circle({radius:5,quality:"ultra"},{color:"#ffffff"}),(0,v.mj)(new y.XI,e),(0,v.mj)(new r.eaF(new r.O3Y(3,.5,128,512),new h),e),(0,v.mj)(new r.eaF(new r.O3Y(10,.5,128,512),new h),e),(0,v.mj)(new r.eaF(new r.rKP(1,2,128),new h),e),(0,v.mj)(new r.eaF(new r.bdM(10,10),new h),e)},[]),null}function b(e){let{size:n=100,subdivisions:t=10,...i}=e,{ref:r}=(0,c.C7)(function*(e){let o=[...e.querySelectorAll("line")],i=n/t;for(let e=0;e<=t;e++){let r=e+t+1,a=e*i-n/2;o[e].setAttribute("x1","".concat(a)),o[e].setAttribute("x2","".concat(a)),o[e].setAttribute("y1","".concat(-n/2)),o[e].setAttribute("y2","".concat(n/2)),o[r].setAttribute("x1","".concat(-n/2)),o[r].setAttribute("x2","".concat(n/2)),o[r].setAttribute("y1","".concat(a)),o[r].setAttribute("y2","".concat(a))}},"always");return(0,o.jsx)("g",{ref:r,...i,children:Array.from({length:(t+1)*2},(e,n)=>(0,o.jsx)("line",{},n))})}function C(){let[e,n]=(0,i.useState)(100),{ref:t}=(0,c.C7)(function*(e){let t=(t,o)=>{e.setAttribute("width","".concat(t)),e.setAttribute("height","".concat(o));let i=t/2,r=o/2;e.setAttribute("viewBox","-".concat(i," -").concat(r," ").concat(t," ").concat(o));let a=Math.min(t,o),[,s,l]=e.querySelectorAll("circle");s.setAttribute("cx","".concat(3*a/10)),s.setAttribute("cy","".concat(-2*a/10)),l.setAttribute("cx","".concat(-3*a/10)),l.setAttribute("cy","".concat(a/10)),n(a)};yield(0,s.G)(window,{onSize:e=>{let{size:n}=e;t(n.x,n.y)}})},[]);return(0,o.jsx)("svg",{ref:t,xmlns:"http://www.w3.org/2000/svg",style:{pointerEvents:"none"},children:(0,o.jsxs)("g",{fill:"none",stroke:"#ffff00",strokeWidth:.75,children:[(0,o.jsx)("circle",{r:10}),(0,o.jsx)("circle",{r:10}),(0,o.jsx)("circle",{r:10}),(0,o.jsx)(b,{size:e})]})})}function P(){let{ref:e}=(0,c.C7)(function*(e){let n=e.querySelector("#screenOffset"),t=d.Q.send("VERTIGO_CONTROLS").assertPayload();yield m.Rv.get("three").onTick(()=>{n.textContent=t.vertigo.screenOffset.toArray().slice(0,2).join(", ")})},"always");return(0,o.jsxs)("div",{ref:e,className:"p-4 text-[#ff0] flex flex-col items-start gap-1",children:[(0,o.jsxs)("h1",{className:"text-3xl font-bold",children:["Vertigo Offset",(0,o.jsx)("br",{}),"Size: 10",(0,o.jsx)("br",{}),"Screen Offset: [",(0,o.jsx)("span",{id:"screenOffset",children:"3, 2"}),"]"]}),(0,o.jsx)("p",{children:"When the subject is not at the center..."}),(0,o.jsx)("button",{className:"border border-[#ff0] rounded px-2 py-1 mt-2 text-[#ff0]",onClick:()=>{let e=d.Q.send("VERTIGO_CONTROLS").assertPayload();e.vertigo.perspective=+(1!==e.vertigo.perspective)},children:"Toggle perspective"}),(0,o.jsx)("button",{className:"border border-[#ff0] rounded px-2 py-1 mt-2 text-[#ff0]",onClick:()=>{d.Q.send("VERTIGO_CONTROLS").assertPayload().vertigo.screenOffset.set(3,2,0)},children:"[3, 2]"}),(0,o.jsx)("button",{className:"border border-[#ff0] rounded px-2 py-1 mt-2 text-[#ff0]",onClick:()=>{d.Q.send("VERTIGO_CONTROLS").assertPayload().vertigo.screenOffset.set(0,0,0)},children:"[0, 0]"}),(0,o.jsx)("button",{className:"border border-[#ff0] rounded px-2 py-1 mt-2 text-[#ff0]",onClick:()=>{d.Q.send("VERTIGO_CONTROLS").assertPayload().vertigo.screenOffset.set(-3,-1,0)},children:"[-3, -1]"})]})}function I(){return(0,o.jsxs)(l.uB,{vertigoControls:{size:10,inputConfig:{wheel:"zoom"}},children:[(0,o.jsx)("div",{className:"layer thru flex flex-col items-start justify-start",children:(0,o.jsx)(P,{})}),(0,o.jsx)(w,{}),(0,o.jsx)(z,{}),(0,o.jsx)(g,{}),(0,o.jsx)(C,{})]})}},16008:(e,n,t)=>{"use strict";t.d(n,{Bn:()=>u,KJ:()=>s,XI:()=>f});var o=t(63126),i=t(49797),r=t(55551),a=t(38921),s=function(e){return e[e.BOX=0]="BOX",e[e.POSITIVE_X=1]="POSITIVE_X",e[e.NEGATIVE_X=2]="NEGATIVE_X",e[e.POSITIVE_Y=3]="POSITIVE_Y",e[e.NEGATIVE_Y=4]="NEGATIVE_Y",e[e.POSITIVE_Z=5]="POSITIVE_Z",e[e.NEGATIVE_Z=6]="NEGATIVE_Z",e}(s||{});function l(e,n){let t=new i.THS(new Int8Array(e.attributes.position.count).fill(n),1);e.setAttribute("aPartId",t)}function c(e,n,t){let o=new i.qFE(.2,.6000000000000001,e,t,!0).rotateZ(Math.PI).translate(0,.53,0),r=Array.from({length:n},(e,t)=>{let o=t/(n-1);return new i.I9Y(.2*o,-.05*(1-o**2))}),s=new i.nzx(r,e).rotateZ(Math.PI).translate(0,.2*3/2+.53,0);return(0,a.pP)([o,s],!1)}function x(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"low",n="high"===e?(0,a.ec)(new r.j(.3,.3,.3,4,.05)):new i.iNn(.3,.3,.3);l(n,0);let t="high"===e?c(32,8,5):c(6,2,1);l(t,3);let o=t.clone().rotateX(Math.PI);l(o,4);let s=t.clone().rotateZ(-Math.PI/2);l(s,1);let x=t.clone().rotateZ(Math.PI/2);l(x,2);let u=t.clone().rotateX(Math.PI/2);l(u,5);let v=t.clone().rotateX(-Math.PI/2);return l(v,6),[n,s,x,t,o,u,v]}let u={defaultColor:"white",xColor:"#eb1640",yColor:"#00ffb7",zColor:"#3b80e7",hoverColor:"#fffc47"};function v(e){let{defaultColor:n,xColor:t,yColor:o,zColor:r,hoverColor:a}={...u,...e},s=new i.Q1f(n),l=new i.Q1f(t),c=new i.Q1f(o),x=new i.Q1f(r),v=new i.Q1f(a),d={uSunPosition:{value:new i.Pq0(.5,.7,.3)},uLuminosity:{value:.66},uColors:{value:[s,l,s,c,s,x,s]},uHoverColor:{value:v},uOpacity:{value:[1,1,1,1,1,1,1]},uHoverOpacity:{value:[0,0,0,0,0,0,0]}};return new i.BKk({uniforms:d,vertexShader:"\nuniform vec3 uColors[7];\nuniform float uOpacity[7];\nuniform vec3 uHoverColor;\nuniform float uHoverOpacity[7];\n\nattribute float aPartId;\n\nvarying vec3 vWorldNormal;\nvarying vec3 vPosition;\nvarying vec3 vColor;\nvarying float vOpacity;\nvarying float vHoverOpacity;\n\nvoid main() {\n  vWorldNormal = mat3(modelMatrix) * normal;\n  vPosition = position;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  vColor = uColors[int(aPartId)];\n  vOpacity = uOpacity[int(aPartId)];\n  vHoverOpacity = uHoverOpacity[int(aPartId)];\n}\n",fragmentShader:"\nvarying vec3 vWorldNormal;\nvarying vec3 vPosition;\nvarying vec3 vColor;\nvarying float vOpacity;\nvarying float vHoverOpacity;\n\nuniform vec3 uSunPosition;\nuniform float uLuminosity;\nuniform vec3 uHoverColor;\n\nfloat clamp01(float x) {\n  return x < 0.0 ? 0.0 : x > 1.0 ? 1.0 : x;\n}\n\nfloat inverseLerp(float a, float b, float x) {\n  return clamp01((x - a) / (b - a));\n}\n\nvoid main() {\n  vec3 lightDirection = normalize(uSunPosition);\n  float light = dot(vWorldNormal, lightDirection) * 0.5 + 0.5;\n  light = pow(light, 2.0);\n  \n  float minLuminosity = max(pow(vHoverOpacity, 1.0 / 3.0) * 0.85, uLuminosity);\n  light = mix(minLuminosity, 1.0, light);\n\n  vec3 color = vColor;\n  color = mix(color, uHoverColor, vHoverOpacity);\n  gl_FragColor = vec4(color * light, vOpacity);\n}\n",transparent:!0})}let d=new i.tBo;class f extends i.YJl{getHovered(){return this.internal.hovered}getPressed(){return this.internal.pressed}widgetUpdate(e,n,t){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/60,{lowMesh:a,material:s}=this.parts,l=new i.Pq0;t.getWorldDirection(l);let c=this.matrixWorld.elements,x=new i.Pq0(c[0],c[1],c[2]),u=new i.Pq0(c[4],c[5],c[6]),v=new i.Pq0(c[8],c[9],c[10]);{let e=s.uniforms.uOpacity.value,n=Math.abs(l.dot(x)),t=Math.abs(l.dot(u)),i=Math.abs(l.dot(v));e[1]=e[2]=(0,o.calculateExponentialDecay)(e[1],n<.98?1.05:-.05,1e-4,r),e[3]=e[4]=(0,o.calculateExponentialDecay)(e[3],t<.98?1.05:-.05,1e-4,r),e[5]=e[6]=(0,o.calculateExponentialDecay)(e[5],i<.98?1.05:-.05,1e-4,r)}{let e=s.uniforms.uHoverOpacity.value,n=+(0===this.internal.hovered),t=+(1===this.internal.hovered),i=+(2===this.internal.hovered),a=+(3===this.internal.hovered),l=+(4===this.internal.hovered),c=+(5===this.internal.hovered),x=+(6===this.internal.hovered);e[0]=(0,o.calculateExponentialDecay)(e[0],n,1e-4,r),e[1]=(0,o.calculateExponentialDecay)(e[1],t,1e-4,r),e[2]=(0,o.calculateExponentialDecay)(e[2],i,1e-4,r),e[3]=(0,o.calculateExponentialDecay)(e[3],a,1e-4,r),e[4]=(0,o.calculateExponentialDecay)(e[4],l,1e-4,r),e[5]=(0,o.calculateExponentialDecay)(e[5],c,1e-4,r),e[6]=(0,o.calculateExponentialDecay)(e[6],x,1e-4,r)}d.setFromCamera(e,t);let[f]=d.intersectObject(a,!0).map(e=>{let n=3*e.faceIndex;return a.geometry.groups.findIndex(e=>e.start<=n&&n<e.start+e.count)}).filter(e=>s.uniforms.uOpacity.value[e]>.5);n&&!1===this.internal.pointerDown&&(this.internal.pointerDown=!0,this.internal.pointerDownPosition.copy(e),this.internal.pressed=null!=f?f:null),n&&!1===this.internal.dragging&&this.internal.pointerDownPosition.distanceTo(e)>.01&&(this.internal.dragging=!0),!1===n&&this.internal.pointerDown&&(this.internal.pointerDown=!1,this.internal.dragging=!1,this.internal.pressed=null);let p=this.internal.dragging?null:null!=f?f:null;this.internal.hovered,this.internal.hovered=p}constructor(e){super(),this.internal={pointerPosition:new i.I9Y,pointerDownPosition:new i.I9Y,pointerDown:!1,dragging:!1,hovered:null,pressed:null};let n=v(null==e?void 0:e.material),t=x("high").map((e,t)=>{let o=new i.eaF(e,n);return o.name="vertigo-widget-mesh-".concat(t),this.add(o),o}),o=new i.eaF(function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];let o=x(...n);return(0,a.pP)(o,!0)}("low"),v(null==e?void 0:e.material));o.material.transparent=!1,o.name="vertigo-widget-low-mesh",o.visible=!1,this.add(o),this.parts={material:n,meshes:t,lowMesh:o}}}},16465:(e,n,t)=>{"use strict";t.d(n,{Y:()=>a});var o=t(49797),i=t(7147);let r={shadowColor:"#808080",luminosity:1,rampPower:1,onBeforeCompile:void 0};class a extends o.V9B{constructor(e){let{rampPower:n,shadowColor:t,luminosity:a,onBeforeCompile:s,...l}={...r,...e},c={uSunPosition:{value:new o.Pq0(.5,.7,.3)},uShadowColor:{value:new o.Q1f(t)},uRampPower:{value:n},uLuminosity:{value:a}};super(l),this.onBeforeCompile=e=>{i.bI.with(e).uniforms(c).varying({vWorldNormal:"vec3"}).vertex.mainAfterAll("\n          vWorldNormal = mat3(modelMatrix) * normal;\n          #ifdef USE_INSTANCING\n            vWorldNormal = mat3(instanceMatrix) * vWorldNormal;\n          #endif\n        ").fragment.after("map_fragment","\n          vec3 normal = normalize(vWorldNormal);\n          vec3 lightDirection = normalize(uSunPosition);\n          float light = dot(normal, lightDirection) * 0.5 + 0.5;\n          light = pow(light, uRampPower);\n          diffuseColor.rgb *= mix(uShadowColor * uLuminosity, vec3(1.0), light);\n        "),null==s||s(e)},this.sunPosition=c.uSunPosition.value}}},21667:(e,n,t)=>{"use strict";t.d(n,{G:()=>a});let o=new WeakMap,i=(e=>()=>{let n=o.get(e);if(void 0===n){let n=e();return o.set(e,n),n}return n})(()=>{let e=new WeakMap;return{resizeObserver:new ResizeObserver(n=>{for(let t of n){let n=e.get(t.target);if(n)for(let e of n)e(t)}}),resizeObserverMap:e}});class r{get width(){return this.size.x}get height(){return this.size.y}get aspect(){return this.size.x/this.size.y}constructor(e,n){this.element=e,this.size=n}}function a(e,n){let{onSize:t}=function(e){if("function"==typeof e)return{onSize:e};let{onSize:n=()=>{}}=null!=e?e:{};return{onSize:n}}(n),o=new DOMPoint(0,0);if(e instanceof Window){let n=()=>{o.x=window.innerWidth,o.y=window.innerHeight,t(new r(e,o))};return e.addEventListener("resize",n),n(),{destroy:()=>{e.removeEventListener("resize",n)}}}{var a;let{resizeObserver:n,resizeObserverMap:s}=i();n.observe(e);let l=null!=(a=s.get(e))?a:new Set,c=n=>{o.x=n.contentRect.width,o.y=n.contentRect.height,t(new r(e,o))};return s.set(e,l),l.add(c),{destroy:()=>{let t=s.get(e);if(!t)throw Error("Wtf??? No callbacks found for element");t.delete(c),0===t.size&&(s.delete(e),n.unobserve(e))}}}}},55551:(e,n,t)=>{"use strict";t.d(n,{j:()=>a});var o=t(49797);let i=new o.Pq0;function r(e,n,t,o,r,a){let s=2*Math.PI*r/4,l=Math.max(a-2*r,0),c=Math.PI/4;i.copy(n),i[o]=0,i.normalize();let x=.5*s/(s+l),u=1-i.angleTo(e)/c;return 1===Math.sign(i[t])?u*x:l/(s+l)+x+x*(1-u)}class a extends o.iNn{constructor(e=1,n=1,t=1,i=2,a=.1){if(i=2*i+1,a=Math.min(e/2,n/2,t/2,a),super(1,1,1,i,i,i),1===i)return;let s=this.toNonIndexed();this.index=null,this.attributes.position=s.attributes.position,this.attributes.normal=s.attributes.normal,this.attributes.uv=s.attributes.uv;let l=new o.Pq0,c=new o.Pq0,x=new o.Pq0(e,n,t).divideScalar(2).subScalar(a),u=this.attributes.position.array,v=this.attributes.normal.array,d=this.attributes.uv.array,f=u.length/6,p=new o.Pq0,m=.5/i;for(let o=0,i=0;o<u.length;o+=3,i+=2)switch(l.fromArray(u,o),c.copy(l),c.x-=Math.sign(c.x)*m,c.y-=Math.sign(c.y)*m,c.z-=Math.sign(c.z)*m,c.normalize(),u[o+0]=x.x*Math.sign(l.x)+c.x*a,u[o+1]=x.y*Math.sign(l.y)+c.y*a,u[o+2]=x.z*Math.sign(l.z)+c.z*a,v[o+0]=c.x,v[o+1]=c.y,v[o+2]=c.z,Math.floor(o/f)){case 0:p.set(1,0,0),d[i+0]=r(p,c,"z","y",a,t),d[i+1]=1-r(p,c,"y","z",a,n);break;case 1:p.set(-1,0,0),d[i+0]=1-r(p,c,"z","y",a,t),d[i+1]=1-r(p,c,"y","z",a,n);break;case 2:p.set(0,1,0),d[i+0]=1-r(p,c,"x","z",a,e),d[i+1]=r(p,c,"z","x",a,t);break;case 3:p.set(0,-1,0),d[i+0]=1-r(p,c,"x","z",a,e),d[i+1]=1-r(p,c,"z","x",a,t);break;case 4:p.set(0,0,1),d[i+0]=1-r(p,c,"x","y",a,e),d[i+1]=1-r(p,c,"y","x",a,n);break;case 5:p.set(0,0,-1),d[i+0]=r(p,c,"x","y",a,e),d[i+1]=1-r(p,c,"y","x",a,n)}}}},66620:(e,n,t)=>{"use strict";t.d(n,{_:()=>r});var o=t(89868),i=t(44138);function r(e,n){var t=(0,i._)(e,n,"update");return(0,o._)(e,t)}},99555:(e,n,t)=>{Promise.resolve().then(t.bind(t,15774))}},e=>{var n=n=>e(e.s=n);e.O(0,[5611,7190,6564,7962,9635,8921,7953,4512,7775,7436,146,6726,3445,9332,3414,9717,1763,2143,3097,1319,6852,7358],()=>n(99555)),_N_E=e.O()}]);