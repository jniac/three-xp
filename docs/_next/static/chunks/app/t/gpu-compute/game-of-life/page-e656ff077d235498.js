(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7396],{55289:(e,u,n)=>{Promise.resolve().then(n.bind(n,71555))},66620:(e,u,n)=>{"use strict";n.d(u,{_:()=>v});var t=n(89868),r=n(44138);function v(e,u){var n=(0,r._)(e,u,"update");return(0,t._)(e,n)}},71555:(e,u,n)=>{"use strict";n.d(u,{PageClient:()=>m});var t=n(70691),r=n(49797),v=n(99332),s=n(33540),a=n(59813);class i extends a.q{constructor(e){super(e),this.enableGlslLib("glsl_utils"),this.shaders({initial:{fragmentColor:"\n          vec2 uv = vUv;\n          float r = step(0.9, hash(uv));\n          float g = step(0.9, hash(uv + vec2(1.0, 0.0)));\n          float b = step(0.9, hash(uv + vec2(0.0, 1.0)));\n          gl_FragColor = vec4(r, g, b, 1.0);\n        "},update:{fragmentTop:"\n          // Conway's Game of Life rules\n          float gameOfLife(float current, float sum) {\n            if (current > 0.5) {\n              if (sum < 1.5 || sum > 3.5) {\n                return 0.0; // Cell dies\n              } else {\n                return 1.0; // Cell lives\n              }\n            } else {\n              if (sum == 3.0) {\n                return 1.0; // Cell becomes alive\n              }\n            }\n            return current;\n          }\n          ",fragmentColor:'\n          vec2 uv = vUv;\n          vec2 uv0 = uv + vec2(0.0, 1.0) / uTextureSize;\n          vec2 uv1 = uv + vec2(1.0, 1.0) / uTextureSize;\n          vec2 uv2 = uv + vec2(1.0, 0.0) / uTextureSize;\n          vec2 uv3 = uv + vec2(1.0, -1.0) / uTextureSize;\n          vec2 uv4 = uv + vec2(0.0, -1.0) / uTextureSize;\n          vec2 uv5 = uv + vec2(-1.0, -1.0) / uTextureSize;\n          vec2 uv6 = uv + vec2(-1.0, 0.0) / uTextureSize;\n          vec2 uv7 = uv + vec2(-1.0, 1.0) / uTextureSize;\n          vec3 sum =\n            texture2D(uTexture, uv0).rgb +\n            texture2D(uTexture, uv1).rgb +\n            texture2D(uTexture, uv2).rgb +\n            texture2D(uTexture, uv3).rgb +\n            texture2D(uTexture, uv4).rgb +\n            texture2D(uTexture, uv5).rgb +\n            texture2D(uTexture, uv6).rgb +\n            texture2D(uTexture, uv7).rgb;\n    \n          vec3 current = texture2D(uTexture, uv).rgb;\n          vec3 next = vec3(\n            gameOfLife(current.r, sum.r),\n            gameOfLife(current.g, sum.g),\n            gameOfLife(current.b, sum.b));\n          \n          // Add some random "glitches" based on time and position\n          vec3 uvt = vec3(uv, uTime);\n          vec3 extra = vec3(\n            step(0.995, hash(uvt.xyz)), \n            step(0.995, hash(uvt.yzx)), \n            step(0.995, hash(uvt.zxy)));\n    \n          gl_FragColor.rgb = max(next, extra);\n        '}})}}var l=n(77794),c=n(79911),o=n(36508);function x(){let e=(0,s.Fw)();return(0,s.dB)("my-scene",function*(u){e.pipeline.basicPasses.fxaa.enabled=!1;let n=(0,c.mj)(new r.eaF(new r.bdM,new r.V9B),u);n.scale.setScalar(10),(0,c.mj)(new l.u,u).regularGrid({size:10,subdivisions:[2,5],opacity:[1,.25]}).onTop();let t=new i({size:256}).initialize(e.renderer),s=!0;yield(0,o.xy)("three",{timeInterval:.1},e=>{n.material.map=t.currentTexture(),n.material.needsUpdate=!0,s&&t.update(e.deltaTime)}),yield(0,v.s)(document.body,{onTap:()=>{s=!s}})},[]),null}function m(){return(0,t.jsxs)(s.uB,{vertigoControls:{size:9,frame:"cover",eventTarget:"canvas"},children:[(0,t.jsx)("div",{className:"layer thru flex flex-col p-12",children:(0,t.jsx)("h1",{className:"text-4xl font-bold",children:"GPU Compute - Game of Life Demo"})}),(0,t.jsx)(x,{})]})}}},e=>{var u=u=>e(e.s=u);e.O(0,[5611,7190,6564,7962,9635,8921,7953,4512,7775,7436,146,487,3445,9332,3414,9717,1763,2143,3540,9813,1319,6852,7358],()=>u(55289)),_N_E=e.O()}]);