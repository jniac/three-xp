(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4349],{1029:(e,n,t)=>{"use strict";t.d(n,{N:()=>a});let r={vecX:["float","vec2","vec3","vec4"]},a=(e,n)=>{let t=[],a=Array.isArray(e)?e:[e].map(e=>e in r?r[e]:e).flat();if("function"==typeof n)for(let e of a)t.push(n(e).replaceAll(/\bT\b/g,e));else for(let e of a)t.push(n.replaceAll(/\bT\b/g,e));return t.join("\n")}},3905:(e,n,t)=>{"use strict";t.d(n,{Main:()=>j});var r=t(70691),a=t(84306),o=t(49797),i=t(72598),l=t(22641);let c=new o.mrM({color:"white",transparent:!0,depthTest:!1}),f={circle:(()=>{let e=new o.LoY,n=Array.from({length:81},(e,n)=>{let t=n/80*Math.PI*2;return new o.Pq0(Math.cos(t),Math.sin(t),0)});return e.setFromPoints(n),e})(),box2:(()=>{let e=new o.LoY,n=[new o.Pq0(-.5,-.5,0),new o.Pq0(.5,-.5,0),new o.Pq0(.5,.5,0),new o.Pq0(-.5,.5,0),new o.Pq0(-.5,-.5,0)];return e.setFromPoints(n),e})()};class s extends o.YJl{setupUniforms(e,n){let{value:t}=e,{value:r}=n;t.copy(this.matrixWorld),t.invert()}init(e){this.props=e,this.renderOrder=1}setup(){}set(e){Object.assign(this.props,e),this.setup()}}let d={radius:2,falloff:1};class u extends s{get radius(){return this.props.radius}set radius(e){this.props.radius=e,this.setup()}get falloff(){return this.props.falloff}set falloff(e){this.props.falloff=e,this.setup()}setupUniforms(e,n){super.setupUniforms(e,n);let{radius:t,falloff:r}=this.props;n.value.set(t,r,0,0)}setup(){let{circle0:e,circle1:n}=this.parts,{radius:t,falloff:r}=this.props;e.scale.setScalar(t),n.scale.setScalar(t+r)}constructor(e){super(),this.parts={circle0:new o.N1A(f.circle,c),circle1:new o.N1A(f.circle,c)},this.init({...d,...e}),this.add(this.parts.circle0),this.add(this.parts.circle1),this.setup()}}u.glsl="\n    struct CircleFalloff {\n      mat4 matrix;\n      float radius;\n      float falloff;\n    };\n    float falloff(CircleFalloff falloff, vec3 p) {\n      p = (falloff.matrix * vec4(p, 1.0)).xyz;\n      float d = length(p);\n      return 1.0 - (d - falloff.radius) / falloff.falloff;\n    }\n  ";let p={width:1,height:1,falloff:1};class v extends s{setupUniforms(e,n){super.setupUniforms(e,n);let{width:t,height:r,falloff:a}=this.props;n.value.set(t,r,a,0)}setup(){let{box0:e,box1:n}=this.parts,{width:t,height:r,falloff:a}=this.props;e.scale.set(t,r,1),n.scale.set(t+2*a,r+2*a,1)}constructor(e){super(),this.parts={box0:new o.N1A(f.box2,c),box1:new o.N1A(f.box2,c)},this.init({...p,...e}),this.add(this.parts.box0),this.add(this.parts.box1),this.setup()}}v.glsl="\n    struct ManhattanBox2Falloff {\n      mat4 matrix;\n      float width;\n      float height;\n      float falloff;\n    };\n    float falloff(ManhattanBox2Falloff falloff, vec3 p) {\n      p = (falloff.matrix * vec4(p, 1.0)).xyz;\n      float x = abs(p.x) - falloff.width * 0.5;\n      float y = abs(p.y) - falloff.height * 0.5;\n      return 1.0 - max(x, y) / falloff.falloff;\n    }\n  ";var m=t(60041),h=t(66851),x=t(87381),g=t(71895),F=t(22899),_=t(8144),w=t(72612),y=t(79285);function b(e){let{r:n,g:t,b:r}=new o.Q1f(e);return"vec3(".concat(n.toFixed(3),", ").concat(t.toFixed(3),", ").concat(r.toFixed(3),")")}let A={grid:[16,16]},C=new o.bdM(1,1,1,1),E=new o.V9B({side:o.$EB,transparent:!0}),D={uRadiusScalar:new o.nc$(.9),uCircleMat:new o.nc$(new o.kn4().identity()),uCircleProps:new o.nc$(new o.IUQ(1,2,0,0)),uBox0Mat:new o.nc$(new o.kn4().identity()),uBox0Props:new o.nc$(new o.IUQ(1,1,0,0))};E.onBeforeCompile=e=>m.b.with(e).defines({USE_UV:""}).uniforms(D).varying({vCenter:"vec3",vWorldPosition2:"vec3"}).vertex.mainAfterAll("\n    vWorldPosition2 = (modelMatrix * instanceMatrix * vec4(transformed, 1.0)).xyz;\n    vCenter = (modelMatrix * instanceMatrix[3]).xyz;\n  ").fragment.top(_.H,g.D,F.I).fragment.top(u.glsl,v.glsl).fragment.after("color_fragment","\n    CircleFalloff circle = CircleFalloff(uCircleMat, uCircleProps.x, uCircleProps.y);\n    ManhattanBox2Falloff box = ManhattanBox2Falloff(uBox0Mat, uBox0Props.x, uBox0Props.y, uBox0Props.z);\n    float d = 0.0;\n    d += clamp01(falloff(box, vWorldPosition2));\n    d += clamp01(falloff(circle, vWorldPosition2));\n    diffuseColor.rgb = mix(".concat(b("#c2e1ff"),", ").concat(b("#d80773"),", easeInOut3(clamp01(d)));\n  ")).fragment.after("alphamap_fragment","\n    float scalar = 1.0 / uRadiusScalar / mix(1.0, 0.25, easeInOut3(clamp01(d)));\n    float alpha = smoothstep(1.0, 0.99, length(vUv - 0.5) * scalar / 0.5);\n\n    if (alpha < 0.01) discard;\n\n    diffuseColor.a *= alpha;\n  ");class B extends o.ZLX{onTick(e){for(let e of Object.values(this.falloffs))e.visible=this.falloffsAreVisible;let{box0:n,circle:t}=this.falloffs;t.falloff=(0,y.lerp)(.1,4,e.sin01Time({frequency:.15})),t.radius=(0,y.lerp)(1,5,e.sin01Time({frequency:.1,phase:.5})),t.setupUniforms(D.uCircleMat,D.uCircleProps),n.rotation.z+=.1*e.deltaTime,n.set({width:8,falloff:(0,y.lerp)(.5,6,e.sin01Time({frequency:.15}))}),n.setupUniforms(D.uBox0Mat,D.uBox0Props)}constructor(e){var n;let{x:t,y:r}=(0,l.wX)(null!=(n=null==e?void 0:e.grid)?n:A.grid);for(let n of(super(C,E,t*r),this.internal={grid:new o.I9Y},this.falloffsAreVisible=!0,this.falloffs={circle:(0,x.mj)(new u,{parent:this,position:[-3,-2,0]}),box0:(0,x.mj)(new v({}),{parent:this,position:[3,2,0]})},this.props={...A,...e},(0,w.loop2)(t,r)))this.setMatrixAt(n.i,(0,h.w)({x:n.x-t/2,y:n.y-r/2}))}}function*k(e){e.scene.background=new o.Q1f("#1c54e0"),e.ticker.set({activeDuration:30}),e.useOrbitControls();let n=new B;e.scene.add(n),yield()=>n.removeFromParent(),yield(0,i.s)(document.body,{onTap(){n.falloffsAreVisible=!n.falloffsAreVisible}})}function P(){return(0,a.yk)(k),null}function j(){return(0,r.jsx)("div",{className:"absolute-through",children:(0,r.jsx)(a.uB,{children:(0,r.jsx)(P,{})})})}},8144:(e,n,t)=>{"use strict";t.d(n,{H:()=>o});var r=t(65927),a=t(1029);let o="\n  ".concat(r.S,"\n\n  float sin01(float x) {\n    return 0.5 + 0.5 * sin(x * 6.283185307179586);\n  }\n\n  vec2 scaleAround(vec2 p, vec2 c, float s) {\n    return c + (p - c) / s;\n  }\n\n  // Same as mix, but clamped.\n  ").concat((0,a.N)("vecX","\n    T lerp(in T a, in T b, in float x) {\n      return mix(a, b, clamp01(x));\n    }\n  "),"\n\n  float inverseLerpUnclamped(in float a, in float b, float x) {\n    return (x - a) / (b - a);\n  }\n\n  float inverseLerp(in float a, in float b, float x) {\n    return clamp01((x - a) / (b - a));\n  }\n\n  float threshold(in float x, in float thresholdValue) {\n    return x < thresholdValue ? 0. : 1.;\n  }\n\n  float threshold(in float x, in float thresholdValue, in float width) {\n    return width < 1e-9 \n      ? (x < thresholdValue ? 0. : 1.)\n      : clamp01((x - thresholdValue + width * .5) / width);\n  }\n\n  mat3 extractRotation(mat4 matrix) {\n    return mat3(matrix[0].xyz, matrix[1].xyz, matrix[2].xyz);\n  }\n\n  vec2 rotate(vec2 p, float a) {\n    float c = cos(a);\n    float s = sin(a);\n    float x = c * p.x + s * p.y;\n    float y = -s * p.x + c * p.y;\n    return vec2(x, y);\n  }\n\n  vec2 rotateAround(vec2 p, float a, vec2 c) {\n    return c + rotate(p - c, a);\n  }\n\n  vec2 rotateScaleAround(vec2 p, float a, float s, vec2 c) {\n    return c + rotate((p - c) / s, a);\n  }\n  \n  float positiveModulo(float x) {\n    x = mod(x, 1.0);\n    return x < 0.0 ? x + 1.0 : x;\n  }\n\n  float positiveModulo(float x, float modulo) {\n    x = mod(x, modulo);\n    return x < 0.0 ? x + modulo : x;\n  }\n\n  // Limit a value to a maximum that the function tends to reach when x -> âˆž\n  // https://www.desmos.com/calculator/0vewkbnscu\n  float limited(float x, float maxValue) {\n    return x <= 0.0 ? x : maxValue * x / (maxValue + x);\n  }\n\n  // https://www.desmos.com/calculator/0vewkbnscu\n  float limited(float x, float minValue, float maxValue) {\n    float d = maxValue - minValue;\n    float xd = x - minValue;\n    return x <= minValue ? x : minValue + d * xd / (d + xd);\n  }\n\n  float sqLength(in vec2 p) {\n    return p.x * p.x + p.y * p.y;\n  }\n\n  float sqLength(in vec3 p) {\n    return p.x * p.x + p.y * p.y + p.z * p.z;\n  }\n\n  float pcurve(float x, float a, float b) {\n    float k = pow(a + b, a + b) / (pow(a, a) * pow(b, b));\n    return k * pow(x, a) * pow(1.0 - x, b);\n  }\n\n  float hash(vec3 p) {\n    return fract(sin(dot(p, vec3(12.9898, 78.233, 45.164))) * 43758.5453);\n  }\n\n  ").concat((0,a.N)("vecX","\n    T min3(in T a, in T b, in T c) {\n      return min(min(a, b), c);\n    }\n  "),"\n\n  ").concat((0,a.N)("vecX","\n    T min4(in T a, in T b, in T c, in T d) {\n      return min(min(a, b), min(c, d));\n    }\n  "),"\n")},22899:(e,n,t)=>{"use strict";t.d(n,{I:()=>o});var r=t(65927);let a=["linear"];for(let e=1;e<=10;e++)a.push("easeIn".concat(e)),a.push("easeOut".concat(e)),a.push("easeInOut".concat(e)),a.push("easeOutIn".concat(e));let o="\n#ifndef GLSL_EASING\n#define GLSL_EASING\n\n".concat(r.S,"\n\nfloat easePow1(float x) {\n  return x;\n}\n\nfloat easePow2(float x) {\n  return x * x;\n}\n\nfloat easePow3(float x) {\n  return x * x * x;\n}\n\nfloat easePow4(float x) {\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow5(float x) {\n  float x0 = x;\n  x *= x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow6(float x) {\n  x *= x * x;\n  return x *= x;\n}\n\nfloat easePow7(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow8(float x) {\n  x *= x;\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow9(float x) {\n  x *= x * x;\n  return x *= x * x;\n}\n\nfloat easePow10(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x * x;\n  return x0 * x;\n}\n\nfloat linear(float x) {\n  return clamp01(x);\n}\n\n").concat(Array.from({length:10},(e,n)=>{let t=n+1;return"\n\nfloat easeIn".concat(t," (float x) {\n  return easePow").concat(t,"(clamp01(x));\n}\nfloat easeOut").concat(t," (float x) {\n  return 1.0 - easePow").concat(t,"(clamp01(1.0 - x));\n}\nfloat easeInOut").concat(t," (float x) {\n  return x < 0.5 \n    ? 0.5 * easePow").concat(t,"(2.0 * x) \n    : 1.0 - 0.5 * easePow").concat(t,"(2.0 * (1.0 - x));\n}\nfloat easeOutIn").concat(t," (float x) {\n  return x < 0.5\n    ? 0.5 * (1.0 - easePow").concat(t,"(1.0 - x * 2.0))\n    : 1.0 - 0.5 * (1.0 - easePow").concat(t,"(2.0 * x - 1.0));\n}\n\n").trim()}).join("\n\n"),"\n\n\n// https://www.desmos.com/calculator/mqou4lf9zc?lang=fr\nfloat easeInOut(float x, float p, float i) {\n  return  x <= 0.0 ? 0.0 :\n          x >= 1.0 ? 1.0 :\n          x <= i ? 1.0 / pow(i, p - 1.0) * pow(x, p) :\n          1.0 - 1.0 / pow(1.0 - i, p - 1.0) * pow(1.0 - x, p);\n}\n\n// https://www.desmos.com/calculator/nrjlezusdv\nfloat easeInThenOut(float x, float p) {\n  return 1.0 - pow(abs(2.0 * x - 1.0), p);\n}\n\n#endif\n")},39787:(e,n,t)=>{"use strict";function r(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];for(let e of n.flat(2))"destroy"in e?e.destroy():e()}t.d(n,{e:()=>a,z:()=>r});class a{collect(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];for(let e of n)if(e)if(Symbol.iterator in e)for(let n of e)n&&this.destroyables.push(n);else this.destroyables.push(e)}constructor(){this.destroyables=[],this.destroy=()=>{r(this.destroyables),this.destroyables=[]}}}},60041:(e,n,t)=>{"use strict";t.d(n,{b:()=>F,e:()=>w});var r=t(888),a=t(30158);let o=["common","uv_pars_vertex","displacementmap_pars_vertex","color_pars_vertex","fog_pars_vertex","normal_pars_vertex","morphtarget_pars_vertex","skinning_pars_vertex","shadowmap_pars_vertex","logdepthbuf_pars_vertex","clipping_planes_pars_vertex","uv_vertex","color_vertex","morphcolor_vertex","beginnormal_vertex","morphnormal_vertex","skinbase_vertex","skinnormal_vertex","defaultnormal_vertex","normal_vertex","begin_vertex","morphtarget_vertex","skinning_vertex","displacementmap_vertex","project_vertex","logdepthbuf_vertex","clipping_planes_vertex","worldpos_vertex","shadowmap_vertex","fog_vertex","common","packing","dithering_pars_fragment","color_pars_fragment","uv_pars_fragment","map_pars_fragment","alphamap_pars_fragment","alphatest_pars_fragment","alphahash_pars_fragment","aomap_pars_fragment","lightmap_pars_fragment","emissivemap_pars_fragment","iridescence_fragment","cube_uv_reflection_fragment","envmap_common_pars_fragment","envmap_physical_pars_fragment","fog_pars_fragment","lights_pars_begin","normal_pars_fragment","lights_physical_pars_fragment","transmission_pars_fragment","shadowmap_pars_fragment","bumpmap_pars_fragment","normalmap_pars_fragment","clearcoat_pars_fragment","iridescence_pars_fragment","roughnessmap_pars_fragment","metalnessmap_pars_fragment","logdepthbuf_pars_fragment","clipping_planes_pars_fragment","clipping_planes_fragment","logdepthbuf_fragment","map_fragment","color_fragment","alphamap_fragment","alphatest_fragment","alphahash_fragment","roughnessmap_fragment","metalnessmap_fragment","normal_fragment_begin","normal_fragment_maps","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","emissivemap_fragment","lights_physical_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","aomap_fragment","transmission_fragment","opaque_fragment","tonemapping_fragment","colorspace_fragment","fog_fragment","premultiplied_alpha_fragment","dithering_fragment"];var i=t(49797),l=t(85795);class c{static from(e,n){if(n instanceof l.Observable){if("number"==typeof n.value)return new c(e,n);throw Error("Observable value must be a number")}let t=typeof n;return"object"===t&&(n.constructor===Object||n instanceof i.nc$)&&"value"in n?new c(e,n):"string"===t?new c(e,{value:new i.Q1f(n)}):new c(e,{value:n})}get value(){return this.target.value}computeDeclaration(){let e=this.name,n=this.target.value,t="";if(n instanceof Float32Array)return"uniform float ".concat(e,"[").concat(n.length,"];");if(Array.isArray(n)&&(t="[".concat(n.length,"]"),n=n[0]),"number"==typeof n)return"uniform float ".concat(e).concat(t,";");if(n.isVector2)return"uniform vec2 ".concat(e).concat(t,";");if(n.isVector3||n.isColor)return"uniform vec3 ".concat(e).concat(t,";");if(n.isVector4||n.isQuaternion)return"uniform vec4 ".concat(e).concat(t,";");if(n.isMatrix3)return"uniform mat3 ".concat(e).concat(t,";");if(n.isMatrix4)return"uniform mat4 ".concat(e).concat(t,";");if(n.isTexture)if(n.isCubeTexture)return"uniform samplerCube ".concat(e).concat(t,";");else return"uniform sampler2D ".concat(e).concat(t,";");throw console.log("unhandled value:",n),Error('unhandled value: "'.concat(null==n?void 0:n.constructor.name,'"'))}constructor(e,n){this.name=e,this.target=n}}function f(){let e=(0,r._)(["","s*",""],["","\\s*",""]);return f=function(){return e},e}let s=null,d=e=>(s=e,F),u="// ShaderForge (injected code) ->",p="// <- ShaderForge",v=e=>"".concat(u,"\n").concat(e.trim(),"\n").concat(p),m=e=>{let n=e=>e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),t=RegExp(String.raw(f(),n(p),n(u)),"g");return e.replaceAll(t,"")};class h{getPattern(e){let{throwError:n=!0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t="#include <".concat(e,">"),r=this.type;if(n&&!1===s[r].includes(t))throw Error('"'.concat(t,'" is not present in the shader template program.'));return{pattern:t,type:r}}replace(e,n){if(e instanceof RegExp){let{type:t}=this;s[t]=s[t].replace(e,v(n))}else{let{type:t,pattern:r}=this.getPattern(e),a=v(n);s[t]=s[t].replace(r,a)}return F}inject(e,n,t){let{type:r,pattern:a}=this.getPattern(n),o="after"===e?"".concat(a,"\n").concat(v(t)):"".concat(v(t),"\n").concat(a);return s[r]=s[r].replace(a,o),F}injectTokenComments(){for(let e of o){let{type:n,pattern:t}=this.getPattern(e,{throwError:!1});s[n]=s[n].replace(t,"\n        ".concat(t,"\n        // ShaderForge TOKEN: ").concat(e,"\n      "))}return F}header(e){let n=this.type;return s[n]="".concat(e,"\n").concat(s[n]),F}before(e,n){return this.inject("before",e,n)}after(e,n){return this.inject("after",e,n)}top(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];return s[this.type]=s[this.type].replace("void main() {","\n      ".concat(v(n.join("\n\n")),"\n      void main() {\n    ")),F}mainBeforeAll(e){return s[this.type]=s[this.type].replace("void main() {","void main() {\n        ".concat(v(e))),F}mainAfterAll(e){return s[this.type]=s[this.type].replace(/}\s*$/,"\n      ".concat(v(e),"\n    }")),F}uniforms(e){if("string"==typeof e)this.top(e);else{let n=[];for(let[t,r]of Object.entries(e)){let e=c.from(t,r);n.push(e.computeDeclaration())}this.top(n.join("\n")),function(e){for(let[n,t]of Object.entries(e)){let e=c.from(n,t);if(n in s.uniforms){if(e.value!==s.uniforms[n].value)throw Error("Shader redefinition! (Uniform values are not equal)")}else s.uniforms[n]=e}}(e)}return F}clean(){return s[this.type]=m(s[this.type]),F}printFinalCode(){return console.log(s[this.type].replace(/#include <(.*)>/g,(e,n)=>{let t=a.ShaderChunk[n];if(!t)throw Error('Shader chunk "'.concat(n,'" not found'));return t})),F}constructor(e){this.type=e}}let x=new h("fragmentShader"),g=new h("vertexShader"),F=Object.assign(function(e){return e&&d(e),F},{shaderName:function(e){return s.shaderName="".concat(e," (ShaderForge)"),F},defines:function(e){return s.defines?Object.assign(s.defines,e):s.defines=e,F},uniforms:function(e){return g.uniforms(e),x.uniforms(e),F},varying:function(e){let n="";if("string"==typeof e)n=e;else{let t=[];for(let[n,r]of Object.entries(e))t.push("varying ".concat(r," ").concat(n,";"));n=t.join("\n")}return g.top(n),x.top(n),F},top:function(e){return g.top(e),x.top(e),F},vertex:g,fragment:x,header:function(e){return x.header(e),g.header(e),F},clean:function(){return x.clean(),g.clean(),F},with:d,wrap:(e,n)=>(e.onBeforeCompile=e=>{s=e},e)}),_=new i.Q1f;function w(e){let{r:n,g:t,b:r}=_.set(e);return"vec3(".concat(n.toFixed(3),", ").concat(t.toFixed(3),", ").concat(r.toFixed(3),")")}},65927:(e,n,t)=>{"use strict";t.d(n,{S:()=>r});let r="\n#ifndef GLSL_BASIC\n#define GLSL_BASIC\n\nfloat clamp01(float x) {\n  return x < 0.0 ? 0.0 : x > 1.0 ? 1.0 : x;\n}\n\n#endif\n"},66851:(e,n,t)=>{"use strict";t.d(n,{_:()=>c,w:()=>i});var r=t(49797),a=t(22641);let o=new r.kn4;function i(e){return(0,a.vl)(e,o)}let l=new r.Q1f;function c(e){return l.set(e)}},71895:(e,n,t)=>{"use strict";t.d(n,{D:()=>r});let r="\n  // #F0F8FF\n  #define aliceblue vec3(240.0 / 255.0, 248.0 / 255.0, 255.0 / 255.0) \n  // #FAEBD7\n  #define antiquewhite vec3(250.0 / 255.0, 235.0 / 255.0, 215.0 / 255.0) \n  // #00FFFF\n  #define aqua vec3(0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #7FFFD4\n  #define aquamarine vec3(127.0 / 255.0, 255.0 / 255.0, 212.0 / 255.0) \n  // #F0FFFF\n  #define azure vec3(240.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #F5F5DC\n  #define beige vec3(245.0 / 255.0, 245.0 / 255.0, 220.0 / 255.0) \n  // #FFE4C4\n  #define bisque vec3(255.0 / 255.0, 228.0 / 255.0, 196.0 / 255.0) \n  // #000000\n  #define black vec3(0.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #FFEBCD\n  #define blanchedalmond vec3(255.0 / 255.0, 235.0 / 255.0, 205.0 / 255.0) \n  // #0000FF\n  #define blue vec3(0.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0) \n  // #8A2BE2\n  #define blueviolet vec3(138.0 / 255.0, 43.0 / 255.0, 226.0 / 255.0) \n  // #A52A2A\n  #define brown vec3(165.0 / 255.0, 42.0 / 255.0, 42.0 / 255.0) \n  // #DEB887\n  #define burlywood vec3(222.0 / 255.0, 184.0 / 255.0, 135.0 / 255.0) \n  // #5F9EA0\n  #define cadetblue vec3(95.0 / 255.0, 158.0 / 255.0, 160.0 / 255.0) \n  // #7FFF00\n  #define chartreuse vec3(127.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0) \n  // #D2691E\n  #define chocolate vec3(210.0 / 255.0, 105.0 / 255.0, 30.0 / 255.0) \n  // #FF7F50\n  #define coral vec3(255.0 / 255.0, 127.0 / 255.0, 80.0 / 255.0) \n  // #6495ED\n  #define cornflowerblue vec3(100.0 / 255.0, 149.0 / 255.0, 237.0 / 255.0) \n  // #FFF8DC\n  #define cornsilk vec3(255.0 / 255.0, 248.0 / 255.0, 220.0 / 255.0) \n  // #DC143C\n  #define crimson vec3(220.0 / 255.0, 20.0 / 255.0, 60.0 / 255.0) \n  // #00FFFF\n  #define cyan vec3(0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #00008B\n  #define darkblue vec3(0.0 / 255.0, 0.0 / 255.0, 139.0 / 255.0) \n  // #008B8B\n  #define darkcyan vec3(0.0 / 255.0, 139.0 / 255.0, 139.0 / 255.0) \n  // #B8860B\n  #define darkgoldenrod vec3(184.0 / 255.0, 134.0 / 255.0, 11.0 / 255.0) \n  // #A9A9A9\n  #define darkgray vec3(169.0 / 255.0, 169.0 / 255.0, 169.0 / 255.0) \n  // #A9A9A9\n  #define darkgrey vec3(169.0 / 255.0, 169.0 / 255.0, 169.0 / 255.0) \n  // #006400\n  #define darkgreen vec3(0.0 / 255.0, 100.0 / 255.0, 0.0 / 255.0) \n  // #BDB76B\n  #define darkkhaki vec3(189.0 / 255.0, 183.0 / 255.0, 107.0 / 255.0) \n  // #8B008B\n  #define darkmagenta vec3(139.0 / 255.0, 0.0 / 255.0, 139.0 / 255.0) \n  // #556B2F\n  #define darkolivegreen vec3(85.0 / 255.0, 107.0 / 255.0, 47.0 / 255.0) \n  // #FF8C00\n  #define darkorange vec3(255.0 / 255.0, 140.0 / 255.0, 0.0 / 255.0) \n  // #9932CC\n  #define darkorchid vec3(153.0 / 255.0, 50.0 / 255.0, 204.0 / 255.0) \n  // #8B0000\n  #define darkred vec3(139.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #E9967A\n  #define darksalmon vec3(233.0 / 255.0, 150.0 / 255.0, 122.0 / 255.0) \n  // #8FBC8F\n  #define darkseagreen vec3(143.0 / 255.0, 188.0 / 255.0, 143.0 / 255.0) \n  // #483D8B\n  #define darkslateblue vec3(72.0 / 255.0, 61.0 / 255.0, 139.0 / 255.0) \n  // #2F4F4F\n  #define darkslategray vec3(47.0 / 255.0, 79.0 / 255.0, 79.0 / 255.0) \n  // #2F4F4F\n  #define darkslategrey vec3(47.0 / 255.0, 79.0 / 255.0, 79.0 / 255.0) \n  // #00CED1\n  #define darkturquoise vec3(0.0 / 255.0, 206.0 / 255.0, 209.0 / 255.0) \n  // #9400D3\n  #define darkviolet vec3(148.0 / 255.0, 0.0 / 255.0, 211.0 / 255.0) \n  // #FF1493\n  #define deeppink vec3(255.0 / 255.0, 20.0 / 255.0, 147.0 / 255.0) \n  // #00BFFF\n  #define deepskyblue vec3(0.0 / 255.0, 191.0 / 255.0, 255.0 / 255.0) \n  // #696969\n  #define dimgray vec3(105.0 / 255.0, 105.0 / 255.0, 105.0 / 255.0) \n  // #696969\n  #define dimgrey vec3(105.0 / 255.0, 105.0 / 255.0, 105.0 / 255.0) \n  // #1E90FF\n  #define dodgerblue vec3(30.0 / 255.0, 144.0 / 255.0, 255.0 / 255.0) \n  // #B22222\n  #define firebrick vec3(178.0 / 255.0, 34.0 / 255.0, 34.0 / 255.0) \n  // #FFFAF0\n  #define floralwhite vec3(255.0 / 255.0, 250.0 / 255.0, 240.0 / 255.0) \n  // #228B22\n  #define forestgreen vec3(34.0 / 255.0, 139.0 / 255.0, 34.0 / 255.0) \n  // #FF00FF\n  #define fuchsia vec3(255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0) \n  // #DCDCDC\n  #define gainsboro vec3(220.0 / 255.0, 220.0 / 255.0, 220.0 / 255.0) \n  // #F8F8FF\n  #define ghostwhite vec3(248.0 / 255.0, 248.0 / 255.0, 255.0 / 255.0) \n  // #FFD700\n  #define gold vec3(255.0 / 255.0, 215.0 / 255.0, 0.0 / 255.0) \n  // #DAA520\n  #define goldenrod vec3(218.0 / 255.0, 165.0 / 255.0, 32.0 / 255.0) \n  // #808080\n  #define gray vec3(128.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #808080\n  #define grey vec3(128.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #008000\n  #define green vec3(0.0 / 255.0, 128.0 / 255.0, 0.0 / 255.0) \n  // #ADFF2F\n  #define greenyellow vec3(173.0 / 255.0, 255.0 / 255.0, 47.0 / 255.0) \n  // #F0FFF0\n  #define honeydew vec3(240.0 / 255.0, 255.0 / 255.0, 240.0 / 255.0) \n  // #FF69B4\n  #define hotpink vec3(255.0 / 255.0, 105.0 / 255.0, 180.0 / 255.0) \n  // #CD5C5C\n  #define indianred vec3(205.0 / 255.0, 92.0 / 255.0, 92.0 / 255.0) \n  // #4B0082\n  #define indigo vec3(75.0 / 255.0, 0.0 / 255.0, 130.0 / 255.0) \n  // #FFFFF0\n  #define ivory vec3(255.0 / 255.0, 255.0 / 255.0, 240.0 / 255.0) \n  // #F0E68C\n  #define khaki vec3(240.0 / 255.0, 230.0 / 255.0, 140.0 / 255.0) \n  // #E6E6FA\n  #define lavender vec3(230.0 / 255.0, 230.0 / 255.0, 250.0 / 255.0) \n  // #FFF0F5\n  #define lavenderblush vec3(255.0 / 255.0, 240.0 / 255.0, 245.0 / 255.0) \n  // #7CFC00\n  #define lawngreen vec3(124.0 / 255.0, 252.0 / 255.0, 0.0 / 255.0) \n  // #FFFACD\n  #define lemonchiffon vec3(255.0 / 255.0, 250.0 / 255.0, 205.0 / 255.0) \n  // #ADD8E6\n  #define lightblue vec3(173.0 / 255.0, 216.0 / 255.0, 230.0 / 255.0) \n  // #F08080\n  #define lightcoral vec3(240.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #E0FFFF\n  #define lightcyan vec3(224.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #FAFAD2\n  #define lightgoldenrodyellow vec3(250.0 / 255.0, 250.0 / 255.0, 210.0 / 255.0) \n  // #D3D3D3\n  #define lightgray vec3(211.0 / 255.0, 211.0 / 255.0, 211.0 / 255.0) \n  // #D3D3D3\n  #define lightgrey vec3(211.0 / 255.0, 211.0 / 255.0, 211.0 / 255.0) \n  // #90EE90\n  #define lightgreen vec3(144.0 / 255.0, 238.0 / 255.0, 144.0 / 255.0) \n  // #FFB6C1\n  #define lightpink vec3(255.0 / 255.0, 182.0 / 255.0, 193.0 / 255.0) \n  // #FFA07A\n  #define lightsalmon vec3(255.0 / 255.0, 160.0 / 255.0, 122.0 / 255.0) \n  // #20B2AA\n  #define lightseagreen vec3(32.0 / 255.0, 178.0 / 255.0, 170.0 / 255.0) \n  // #87CEFA\n  #define lightskyblue vec3(135.0 / 255.0, 206.0 / 255.0, 250.0 / 255.0) \n  // #778899\n  #define lightslategray vec3(119.0 / 255.0, 136.0 / 255.0, 153.0 / 255.0) \n  // #778899\n  #define lightslategrey vec3(119.0 / 255.0, 136.0 / 255.0, 153.0 / 255.0) \n  // #B0C4DE\n  #define lightsteelblue vec3(176.0 / 255.0, 196.0 / 255.0, 222.0 / 255.0) \n  // #FFFFE0\n  #define lightyellow vec3(255.0 / 255.0, 255.0 / 255.0, 224.0 / 255.0) \n  // #00FF00\n  #define lime vec3(0.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0) \n  // #32CD32\n  #define limegreen vec3(50.0 / 255.0, 205.0 / 255.0, 50.0 / 255.0) \n  // #FAF0E6\n  #define linen vec3(250.0 / 255.0, 240.0 / 255.0, 230.0 / 255.0) \n  // #FF00FF\n  #define magenta vec3(255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0) \n  // #800000\n  #define maroon vec3(128.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #66CDAA\n  #define mediumaquamarine vec3(102.0 / 255.0, 205.0 / 255.0, 170.0 / 255.0) \n  // #0000CD\n  #define mediumblue vec3(0.0 / 255.0, 0.0 / 255.0, 205.0 / 255.0) \n  // #BA55D3\n  #define mediumorchid vec3(186.0 / 255.0, 85.0 / 255.0, 211.0 / 255.0) \n  // #9370DB\n  #define mediumpurple vec3(147.0 / 255.0, 112.0 / 255.0, 219.0 / 255.0) \n  // #3CB371\n  #define mediumseagreen vec3(60.0 / 255.0, 179.0 / 255.0, 113.0 / 255.0) \n  // #7B68EE\n  #define mediumslateblue vec3(123.0 / 255.0, 104.0 / 255.0, 238.0 / 255.0) \n  // #00FA9A\n  #define mediumspringgreen vec3(0.0 / 255.0, 250.0 / 255.0, 154.0 / 255.0) \n  // #48D1CC\n  #define mediumturquoise vec3(72.0 / 255.0, 209.0 / 255.0, 204.0 / 255.0) \n  // #C71585\n  #define mediumvioletred vec3(199.0 / 255.0, 21.0 / 255.0, 133.0 / 255.0) \n  // #191970\n  #define midnightblue vec3(25.0 / 255.0, 25.0 / 255.0, 112.0 / 255.0) \n  // #F5FFFA\n  #define mintcream vec3(245.0 / 255.0, 255.0 / 255.0, 250.0 / 255.0) \n  // #FFE4E1\n  #define mistyrose vec3(255.0 / 255.0, 228.0 / 255.0, 225.0 / 255.0) \n  // #FFE4B5\n  #define moccasin vec3(255.0 / 255.0, 228.0 / 255.0, 181.0 / 255.0) \n  // #FFDEAD\n  #define navajowhite vec3(255.0 / 255.0, 222.0 / 255.0, 173.0 / 255.0) \n  // #000080\n  #define navy vec3(0.0 / 255.0, 0.0 / 255.0, 128.0 / 255.0) \n  // #FDF5E6\n  #define oldlace vec3(253.0 / 255.0, 245.0 / 255.0, 230.0 / 255.0) \n  // #808000\n  #define olive vec3(128.0 / 255.0, 128.0 / 255.0, 0.0 / 255.0) \n  // #6B8E23\n  #define olivedrab vec3(107.0 / 255.0, 142.0 / 255.0, 35.0 / 255.0) \n  // #FFA500\n  #define orange vec3(255.0 / 255.0, 165.0 / 255.0, 0.0 / 255.0) \n  // #FF4500\n  #define orangered vec3(255.0 / 255.0, 69.0 / 255.0, 0.0 / 255.0) \n  // #DA70D6\n  #define orchid vec3(218.0 / 255.0, 112.0 / 255.0, 214.0 / 255.0) \n  // #EEE8AA\n  #define palegoldenrod vec3(238.0 / 255.0, 232.0 / 255.0, 170.0 / 255.0) \n  // #98FB98\n  #define palegreen vec3(152.0 / 255.0, 251.0 / 255.0, 152.0 / 255.0) \n  // #AFEEEE\n  #define paleturquoise vec3(175.0 / 255.0, 238.0 / 255.0, 238.0 / 255.0) \n  // #DB7093\n  #define palevioletred vec3(219.0 / 255.0, 112.0 / 255.0, 147.0 / 255.0) \n  // #FFEFD5\n  #define papayawhip vec3(255.0 / 255.0, 239.0 / 255.0, 213.0 / 255.0) \n  // #FFDAB9\n  #define peachpuff vec3(255.0 / 255.0, 218.0 / 255.0, 185.0 / 255.0) \n  // #CD853F\n  #define peru vec3(205.0 / 255.0, 133.0 / 255.0, 63.0 / 255.0) \n  // #FFC0CB\n  #define pink vec3(255.0 / 255.0, 192.0 / 255.0, 203.0 / 255.0) \n  // #DDA0DD\n  #define plum vec3(221.0 / 255.0, 160.0 / 255.0, 221.0 / 255.0) \n  // #B0E0E6\n  #define powderblue vec3(176.0 / 255.0, 224.0 / 255.0, 230.0 / 255.0) \n  // #800080\n  #define purple vec3(128.0 / 255.0, 0.0 / 255.0, 128.0 / 255.0) \n  // #663399\n  #define rebeccapurple vec3(102.0 / 255.0, 51.0 / 255.0, 153.0 / 255.0) \n  // #FF0000\n  #define red vec3(255.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #BC8F8F\n  #define rosybrown vec3(188.0 / 255.0, 143.0 / 255.0, 143.0 / 255.0) \n  // #4169E1\n  #define royalblue vec3(65.0 / 255.0, 105.0 / 255.0, 225.0 / 255.0) \n  // #8B4513\n  #define saddlebrown vec3(139.0 / 255.0, 69.0 / 255.0, 19.0 / 255.0) \n  // #FA8072\n  #define salmon vec3(250.0 / 255.0, 128.0 / 255.0, 114.0 / 255.0) \n  // #F4A460\n  #define sandybrown vec3(244.0 / 255.0, 164.0 / 255.0, 96.0 / 255.0) \n  // #2E8B57\n  #define seagreen vec3(46.0 / 255.0, 139.0 / 255.0, 87.0 / 255.0) \n  // #FFF5EE\n  #define seashell vec3(255.0 / 255.0, 245.0 / 255.0, 238.0 / 255.0) \n  // #A0522D\n  #define sienna vec3(160.0 / 255.0, 82.0 / 255.0, 45.0 / 255.0) \n  // #C0C0C0\n  #define silver vec3(192.0 / 255.0, 192.0 / 255.0, 192.0 / 255.0) \n  // #87CEEB\n  #define skyblue vec3(135.0 / 255.0, 206.0 / 255.0, 235.0 / 255.0) \n  // #6A5ACD\n  #define slateblue vec3(106.0 / 255.0, 90.0 / 255.0, 205.0 / 255.0) \n  // #708090\n  #define slategray vec3(112.0 / 255.0, 128.0 / 255.0, 144.0 / 255.0) \n  // #708090\n  #define slategrey vec3(112.0 / 255.0, 128.0 / 255.0, 144.0 / 255.0) \n  // #FFFAFA\n  #define snow vec3(255.0 / 255.0, 250.0 / 255.0, 250.0 / 255.0) \n  // #00FF7F\n  #define springgreen vec3(0.0 / 255.0, 255.0 / 255.0, 127.0 / 255.0) \n  // #4682B4\n  #define steelblue vec3(70.0 / 255.0, 130.0 / 255.0, 180.0 / 255.0) \n  // #D2B48C\n  #define tan_color vec3(210.0 / 255.0, 180.0 / 255.0, 140.0 / 255.0) \n  // #008080\n  #define teal vec3(0.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #D8BFD8\n  #define thistle vec3(216.0 / 255.0, 191.0 / 255.0, 216.0 / 255.0) \n  // #FF6347\n  #define tomato vec3(255.0 / 255.0, 99.0 / 255.0, 71.0 / 255.0) \n  // #40E0D0\n  #define turquoise vec3(64.0 / 255.0, 224.0 / 255.0, 208.0 / 255.0) \n  // #EE82EE\n  #define violet vec3(238.0 / 255.0, 130.0 / 255.0, 238.0 / 255.0) \n  // #F5DEB3\n  #define wheat vec3(245.0 / 255.0, 222.0 / 255.0, 179.0 / 255.0) \n  // #FFFFFF\n  #define white vec3(255.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #F5F5F5\n  #define whitesmoke vec3(245.0 / 255.0, 245.0 / 255.0, 245.0 / 255.0) \n  // #FFFF00\n  #define yellow vec3(255.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0) \n  // #9ACD32\n  #define yellowgreen vec3(154.0 / 255.0, 205.0 / 255.0, 50.0 / 255.0) \n"},72612:(e,n,t)=>{"use strict";function*r(e){let n=0,t={get i(){return n},get t(){return n/e},get p(){return n/(e-1)},get size(){return e},clone(){return{...this}}};for(n=0;n<e;n++)yield t}function a(e,n){let t=[];for(let a of r(e)){let e=a.clone();t.push(n?n(e):e)}return t}function*o(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];let r=0,a=0;2===n.length?(r=n[0],a=n[1]):Array.isArray(n[0])?(r=n[0][0],a=n[0][1]):(r=n[0].x,a=n[0].y);let o=0,i=0,l=0,c={get i(){return o},get x(){return i},get y(){return l},get tx(){return i/r},get ty(){return l/a},get px(){return i/(r-1)},get py(){return l/(a-1)},get sizeX(){return r},get sizeY(){return a},clone(){return{...this}}};for(l=0;l<a;l++)for(i=0;i<r;i++)yield c,o++}function i(){let e;for(var n=arguments.length,t=Array(n),r=0;r<n;r++)t[r]=arguments[r];let a=0,i=0;"number"==typeof t[0]?(a=t[0],i=t[1],e=t[2]):(Array.isArray(t[0])?(a=t[0][0],i=t[0][1]):(a=t[0].x,i=t[0].y),e=t[1]);let l=[];for(let n of o(a,i)){let t=n.clone();l.push(e?e(t):t)}return l}function*l(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];let r=0,a=0,o=0;3===n.length?(r=n[0],a=n[1],o=n[2]):Array.isArray(n[0])?(r=n[0][0],a=n[0][1],o=n[0][2]):(r=n[0].x,a=n[0].y,o=n[0].z);let i=0,l=0,c=0,f=0,s={get i(){return i},get x(){return l},get y(){return c},get z(){return f},get tx(){return l/r},get ty(){return c/a},get tz(){return f/o},get px(){return l/(r-1)},get py(){return c/(a-1)},get pz(){return f/(o-1)},clone(){return{...this}}};for(f=0;f<o;f++)for(c=0;c<a;c++)for(l=0;l<r;l++)yield s,i++}function c(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];let r=[];for(let e of l(...n))r.push(e.clone());return r}t.r(n),t.d(n,{loop:()=>r,loop2:()=>o,loop2Array:()=>i,loop3:()=>l,loop3Array:()=>c,loopArray:()=>a})},77186:(e,n,t)=>{Promise.resolve().then(t.bind(t,3905))},87381:(e,n,t)=>{"use strict";t.d(n,{$z:()=>function* e(n,t){let{includeSelf:r}={...c,...t};for(let t of(r&&(yield n),n.children))yield*e(t,{includeSelf:!0})},DN:()=>i,mj:()=>o,rd:()=>l});var r=t(61567),a=t(90927);function o(e,n,t){return n&&((0,r.Th)(n)?n.add(e):(0,a.N)(e,n)),null==t||t(e),e}let i=o;function l(e,n){let t=n;for(;t.parent;){if(t.parent===e)return!0;t=t.parent}return!1}let c={includeSelf:!1}},90927:(e,n,t)=>{"use strict";t.d(n,{N:()=>c});var r=t(49797),a=t(22641);new r.Pq0(0,0,0),new r.O9p(0,0,0,"XYZ"),new r.Pq0(1,1,1);let o={x:0,y:0,z:0,rotationX:0,rotationY:0,rotationZ:0,rotationOrder:"XYZ",rotationUnit:"rad",scaleX:1,scaleY:1,scaleZ:1,scaleScalar:1,pivot:void 0,visible:void 0,name:void 0,parent:void 0,userData:void 0},i=new r.dwI,l=new r.Pq0;function c(e,n){let{x:t,y:c,z:f,position:s=new r.Pq0(t,c,f),rotationX:d,rotationY:u,rotationZ:p,rotationOrder:v,rotationUnit:m,rotation:h,scaleX:x,scaleY:g,scaleZ:F,scaleScalar:_,scale:w=new r.Pq0(x,g,F).multiplyScalar(_),pivot:y,visible:b,name:A,parent:C,userData:E}={...o,...n};return(0,a.jj)(s,e.position),(0,a.if)(null!=h?h:[d,u,p,v,m],e.rotation),(0,a.jj)(w,e.scale),void 0!==y&&(e.updateMatrix(),i.setFromMatrix4(e.matrix),(0,a.jj)(y,l).applyMatrix3(i),e.position.sub(l)),void 0!==b&&(e.visible=b),void 0!==A&&(e.name=A),void 0!==C&&C!==e.parent&&(null===C?e.removeFromParent():C.add(e)),void 0!==E&&Object.assign(e.userData,E),e}}},e=>{var n=n=>e(e.s=n);e.O(0,[2193,5611,7190,7223,9635,8921,4957,7775,16,9547,4638,6726,2598,7373,5795,4266,7558,1319,6852,7358],()=>n(77186)),_N_E=e.O()}]);