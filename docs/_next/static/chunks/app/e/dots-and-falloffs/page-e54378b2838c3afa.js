(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4349],{1029:(e,n,t)=>{"use strict";t.d(n,{N:()=>r});let a={vecX:["float","vec2","vec3","vec4"]},r=(e,n)=>{let t=[],r=Array.isArray(e)?e:[e].map(e=>e in a?a[e]:e).flat();if("function"==typeof n)for(let e of r)t.push(n(e).replaceAll(/\bT\b/g,e));else for(let e of r)t.push(n.replaceAll(/\bT\b/g,e));return t.join("\n")}},3293:(e,n,t)=>{"use strict";t.d(n,{_:()=>f,w:()=>o});var a=t(49797),r=t(94065);let l=new a.kn4;function o(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l;return null===e?(n.elements.fill(0),n):(0,r.vl)(e,n)}let i=new a.Q1f;function f(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i;return"random"===e?(n.setHex(Math.floor(0x1000000*Math.random())),n):("string"==typeof e&&e.startsWith("#")&&(9===e.length&&(e=e.slice(0,7)),5===e.length&&(e=e.slice(0,4))),n.set(e))}},8144:(e,n,t)=>{"use strict";t.d(n,{H:()=>l});var a=t(65927),r=t(1029);let l="\n".concat(a.S,"\n\n#ifndef GLSL_UTILS\n#define GLSL_UTILS\n\nfloat sin01(float x) {\n  return 0.5 + 0.5 * sin(x * 6.283185307179586);\n}\n\nvec2 scaleAround(vec2 p, vec2 c, float s) {\n  return c + (p - c) / s;\n}\n\n// Same as mix, but clamped.\n").concat((0,r.N)("vecX","\n  T lerp(in T a, in T b, in float x) {\n    return mix(a, b, clamp01(x));\n  }\n"),"\n\nfloat inverseLerpUnclamped(in float a, in float b, float x) {\n  return (x - a) / (b - a);\n}\n\nfloat inverseLerp(in float a, in float b, float x) {\n  return clamp01((x - a) / (b - a));\n}\n\nfloat remap(in float x, in float a, in float b, in float c, in float d) {\n  return c + (d - c) * inverseLerp(a, b, x);\n}\n\n// Remap from [-1, 1] to [0, 1]\nfloat remap1101(in float x) {\n  return clamp01(0.5 + 0.5 * x);\n}\n\n").concat((0,r.N)("vecX","\n  T oneMinus(in T x) {\n    return 1.0 - x;\n  }\n"),"\n\n// Returns x^p, but handles negative x values correctly.\nfloat spow(in float x, in float p) {\n  return x >= 0.0 ? pow(x, p) : -pow(-x, p);\n}\n\nfloat threshold(in float x, in float thresholdValue) {\n  return x < thresholdValue ? 0. : 1.;\n}\n\nfloat threshold(in float x, in float thresholdValue, in float width) {\n  return width < 1e-9 \n    ? (x < thresholdValue ? 0. : 1.)\n    : clamp01((x - thresholdValue + width * .5) / width);\n}\n\nmat3 extractRotation(mat4 matrix) {\n  return mat3(matrix[0].xyz, matrix[1].xyz, matrix[2].xyz);\n}\n\nvec2 rotate(vec2 p, float a) {\n  float c = cos(a);\n  float s = sin(a);\n  float x = c * p.x + s * p.y;\n  float y = -s * p.x + c * p.y;\n  return vec2(x, y);\n}\n\nvec2 rotateAround(vec2 p, float a, vec2 c) {\n  return c + rotate(p - c, a);\n}\n\nvec2 rotateScaleAround(vec2 p, float a, float s, vec2 c) {\n  return c + rotate((p - c) / s, a);\n}\n\nfloat positiveModulo(float x) {\n  x = mod(x, 1.0);\n  return x < 0.0 ? x + 1.0 : x;\n}\n\n// Modulo that keeps the result in the range [0, modulo]\nfloat positiveModulo(float x, float modulo) {\n  x = mod(x, modulo);\n  return x < 0.0 ? x + modulo : x;\n}\n\n// Modulo that keeps the result in the range [-m/2, m/2]\nfloat middleModulo(float x, float modulo) {\n  x = mod(x, modulo);\n  return x < -modulo / 2.0 ? x + modulo : x > modulo / 2.0 ? x - modulo : x;\n}\n\n// Limit a value to a maximum that the function tends to reach when x -> ∞\n// https://www.desmos.com/calculator/0vewkbnscu\nfloat limited(float x, float maxValue) {\n  return x <= 0.0 ? x : maxValue * x / (maxValue + x);\n}\n\n// Symmetric version of limited\n// \n// Limit a value to a maximum that the function tends to reach when x -> ∞\n// and a minimum (-maximum) that the function tends to reach when x -> -∞\n// https://www.desmos.com/calculator/0vewkbnscu\nfloat slimited(float x, float maxValue) {\n  return x <= 0.0\n    ? -limited(-x, maxValue)\n    : limited(x, maxValue);\n}\n\n// https://www.desmos.com/calculator/0vewkbnscu\nfloat limited(float x, float minValue, float maxValue) {\n  float d = maxValue - minValue;\n  float xd = x - minValue;\n  return x <= minValue ? x : minValue + d * xd / (d + xd);\n}\n\n// Symmetric version of limited\nfloat slimited(float x, float minValue, float maxValue) {\n  return x <= 0.0\n    ? -limited(-x, maxValue, minValue)\n    : limited(x, minValue, maxValue);\n}\n\nfloat sqLength(in vec2 p) {\n  return p.x * p.x + p.y * p.y;\n}\n\nfloat sqLength(in vec3 p) {\n  return p.x * p.x + p.y * p.y + p.z * p.z;\n}\n\nfloat pcurve(float x, float a, float b) {\n  float k = pow(a + b, a + b) / (pow(a, a) * pow(b, b));\n  return k * pow(x, a) * pow(1.0 - x, b);\n}\n\nfloat hash(float p) {\n  return fract(sin(p * 12.9898) * 43758.5453);\n}\n\nfloat hash(vec2 p) {\n  return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat hash(vec3 p) {\n  return fract(sin(dot(p, vec3(12.9898, 78.233, 45.164))) * 43758.5453);\n}\n\nfloat hash(vec4 p) {\n  return fract(sin(dot(p, vec4(12.9898, 78.233, 45.164, 94.673))) * 43758.5453);\n}\n\nvec2 hash2(float p) {\n  return vec2(hash(p), hash(p + 1.0));\n}\n\nvec2 hash2(vec2 p) {\n  return vec2(hash(p.x), hash(p.y));\n}\n\nvec2 hash2(vec3 p) {\n  return vec2(hash(p.xy), hash(p.yz));\n}\n\nvec2 hash2(vec4 p) {\n  return vec2(hash(p.xyz), hash(p.yzw));\n}\n\nvec3 hash3(float p) {\n  return vec3(hash2(p),  hash(p + 2.0));\n}\n\nvec3 hash3(vec2 p) {\n  return vec3(hash2(p), hash(p));\n}\n\nvec3 hash3(vec3 p) {\n  return vec3(hash(p.x), hash(p.y), hash(p.z));\n}\n\nvec3 hash3(vec4 p) {\n  return vec3(hash(p.xy), hash(p.yz), hash(p.zw));\n}\n\nfloat hash_alt(float p) {\n  return fract(sin(p * 127.1) * 311.7);\n}\n\nfloat hash_alt(vec2 p) {\n  return fract(sin(dot(p, vec2(127.1, 311.7))) * 269.5);\n}\n\nfloat hash_alt(vec3 p) {\n  return fract(sin(dot(p, vec3(127.1, 311.7, 74.7))) * 269.5);\n}\n\nfloat hash_alt(vec4 p) {\n  return fract(sin(dot(p, vec4(127.1, 311.7, 74.7, 113.5))) * 269.5);\n}\n\n").concat((0,r.N)("vecX","\n  T min3(in T a, in T b, in T c) {\n    return min(min(a, b), c);\n  }\n"),"\n\n").concat((0,r.N)("vecX","\n  T min4(in T a, in T b, in T c, in T d) {\n    return min(min(a, b), min(c, d));\n  }\n"),"\n\n#endif // GLSL_UTILS\n")},22899:(e,n,t)=>{"use strict";t.d(n,{I:()=>l});var a=t(65927);let r=["linear"];for(let e=1;e<=10;e++)r.push("easeIn".concat(e)),r.push("easeOut".concat(e)),r.push("easeInOut".concat(e)),r.push("easeOutIn".concat(e));let l="\n#ifndef GLSL_EASING\n#define GLSL_EASING\n\n".concat(a.S,"\n\nfloat easePow1(float x) {\n  return x;\n}\n\nfloat easePow2(float x) {\n  return x * x;\n}\n\nfloat easePow3(float x) {\n  return x * x * x;\n}\n\nfloat easePow4(float x) {\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow5(float x) {\n  float x0 = x;\n  x *= x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow6(float x) {\n  x *= x * x;\n  return x *= x;\n}\n\nfloat easePow7(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow8(float x) {\n  x *= x;\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow9(float x) {\n  x *= x * x;\n  return x *= x * x;\n}\n\nfloat easePow10(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x * x;\n  return x0 * x;\n}\n\nfloat linear(float x) {\n  return clamp01(x);\n}\n\n").concat(Array.from({length:10},(e,n)=>{let t=n+1;return"\n\n  float easeIn".concat(t," (float x) {\n    return easePow").concat(t,"(clamp01(x));\n  }\n  float easeOut").concat(t," (float x) {\n    return 1.0 - easePow").concat(t,"(clamp01(1.0 - x));\n  }\n  float easeInOut").concat(t," (float x) {\n    return x < 0.5 \n      ? 0.5 * easePow").concat(t,"(2.0 * x) \n      : 1.0 - 0.5 * easePow").concat(t,"(2.0 * (1.0 - x));\n  }\n  float easeOutIn").concat(t," (float x) {\n    return x < 0.5\n      ? 0.5 * (1.0 - easePow").concat(t,"(1.0 - x * 2.0))\n      : 1.0 - 0.5 * (1.0 - easePow").concat(t,"(2.0 * x - 1.0));\n  }\n\n").trim()}).join("\n\n"),"\n\n\n// https://www.desmos.com/calculator/mqou4lf9zc?lang=fr\nfloat easeInOut(float x, float p, float i) {\n  return  x <= 0.0 ? 0.0 :\n          x >= 1.0 ? 1.0 :\n          x <= i ? 1.0 / pow(i, p - 1.0) * pow(x, p) :\n          1.0 - 1.0 / pow(1.0 - i, p - 1.0) * pow(1.0 - x, p);\n}\n\n// https://www.desmos.com/calculator/nrjlezusdv\nfloat easeInThenOut(float x, float p) {\n  return 1.0 - pow(abs(2.0 * x - 1.0), p);\n}\n\n#endif\n")},63106:(e,n,t)=>{"use strict";function a(e,n){return"*"===n||("string"==typeof n?n===e:n instanceof RegExp?n.test(e):"function"==typeof n&&n(e))}t.d(n,{a:()=>i});let r={preventDefault:!1,strictTarget:void 0},l={key:"*",keyCaseInsensitive:!0,code:"*",noModifiers:!1,modifiers:"",phase:"down"},o=0;function i(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];let i=o++,[f,c,s]=1===n.length?[document.body,{},n[0]]:2===n.length?[n[0],{},n[1]]:n,{preventDefault:d}={...r,...c},u=null,v=e=>{var n;if((null!=(n=c.strictTarget)?!!n:f===document.body)&&e.target!==f)return;"keydown"===e.type&&(u=e);let{ctrlKey:t=!1,altKey:r=!1,shiftKey:o=!1,metaKey:v=!1}=null!=u?u:{},p={id:i,event:e,downEvent:u,modifiers:{ctrl:t,alt:r,shift:o,meta:v}};for(let n=0,i=s.length;n<i;n++){let[i,f]=s[n],{key:c,keyCaseInsensitive:x,code:h,noModifiers:m,modifiers:F,phase:g="down"}=function(e){let n="string"==typeof e?{...l,key:e}:{...l,...e};return n.keyCaseInsensitive&&"string"==typeof n.key&&(n.key=n.key.toLowerCase()),n}(i);switch(e.type){case"keydown":if("down"!==g)continue;break;case"keyup":if("up"!==g)continue}Object.values({key:a(x?e.key.toLowerCase():e.key,c),code:a(e.code,h),noModifiers:!m||!1===t&&!1===r&&!1===o&&!1===v,modifiers:function(e,n){let{ctrlKey:t,altKey:a,shiftKey:r,metaKey:l}=e;if("function"==typeof n)return n({ctrl:t,alt:a,shift:r,meta:l});let{ctrl:o=!1,alt:i=!1,shift:f=!1,meta:c=!1}=Object.fromEntries(n.split("-").map(e=>[e,!0]));return o===t&&i===a&&f===r&&c===l}(u,F)}).every(Boolean)&&(d&&e.preventDefault(),f(p))}};return f.addEventListener("keydown",v,{passive:!1}),f.addEventListener("keyup",v,{passive:!1}),{destroy:()=>{f.removeEventListener("keydown",v),f.removeEventListener("keyup",v)}}}},65927:(e,n,t)=>{"use strict";t.d(n,{S:()=>a});let a="\n#ifndef GLSL_BASIC\n#define GLSL_BASIC\n\nfloat clamp01(float x) {\n  return x < 0.0 ? 0.0 : x > 1.0 ? 1.0 : x;\n}\n\nvec2 clamp01(vec2 x) {\n  return vec2(clamp01(x.x), clamp01(x.y));\n}\n\nvec3 clamp01(vec3 x) {\n  return vec3(clamp01(x.x), clamp01(x.y), clamp01(x.z));\n}\n\nvec4 clamp01(vec4 x) {\n  return vec4(clamp01(x.x), clamp01(x.y), clamp01(x.z), clamp01(x.w));\n}\n\n#endif\n"},71895:(e,n,t)=>{"use strict";t.d(n,{D:()=>a});let a="\n  // #F0F8FF\n  #define aliceblue vec3(240.0 / 255.0, 248.0 / 255.0, 255.0 / 255.0) \n  // #FAEBD7\n  #define antiquewhite vec3(250.0 / 255.0, 235.0 / 255.0, 215.0 / 255.0) \n  // #00FFFF\n  #define aqua vec3(0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #7FFFD4\n  #define aquamarine vec3(127.0 / 255.0, 255.0 / 255.0, 212.0 / 255.0) \n  // #F0FFFF\n  #define azure vec3(240.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #F5F5DC\n  #define beige vec3(245.0 / 255.0, 245.0 / 255.0, 220.0 / 255.0) \n  // #FFE4C4\n  #define bisque vec3(255.0 / 255.0, 228.0 / 255.0, 196.0 / 255.0) \n  // #000000\n  #define black vec3(0.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #FFEBCD\n  #define blanchedalmond vec3(255.0 / 255.0, 235.0 / 255.0, 205.0 / 255.0) \n  // #0000FF\n  #define blue vec3(0.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0) \n  // #8A2BE2\n  #define blueviolet vec3(138.0 / 255.0, 43.0 / 255.0, 226.0 / 255.0) \n  // #A52A2A\n  #define brown vec3(165.0 / 255.0, 42.0 / 255.0, 42.0 / 255.0) \n  // #DEB887\n  #define burlywood vec3(222.0 / 255.0, 184.0 / 255.0, 135.0 / 255.0) \n  // #5F9EA0\n  #define cadetblue vec3(95.0 / 255.0, 158.0 / 255.0, 160.0 / 255.0) \n  // #7FFF00\n  #define chartreuse vec3(127.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0) \n  // #D2691E\n  #define chocolate vec3(210.0 / 255.0, 105.0 / 255.0, 30.0 / 255.0) \n  // #FF7F50\n  #define coral vec3(255.0 / 255.0, 127.0 / 255.0, 80.0 / 255.0) \n  // #6495ED\n  #define cornflowerblue vec3(100.0 / 255.0, 149.0 / 255.0, 237.0 / 255.0) \n  // #FFF8DC\n  #define cornsilk vec3(255.0 / 255.0, 248.0 / 255.0, 220.0 / 255.0) \n  // #DC143C\n  #define crimson vec3(220.0 / 255.0, 20.0 / 255.0, 60.0 / 255.0) \n  // #00FFFF\n  #define cyan vec3(0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #00008B\n  #define darkblue vec3(0.0 / 255.0, 0.0 / 255.0, 139.0 / 255.0) \n  // #008B8B\n  #define darkcyan vec3(0.0 / 255.0, 139.0 / 255.0, 139.0 / 255.0) \n  // #B8860B\n  #define darkgoldenrod vec3(184.0 / 255.0, 134.0 / 255.0, 11.0 / 255.0) \n  // #A9A9A9\n  #define darkgray vec3(169.0 / 255.0, 169.0 / 255.0, 169.0 / 255.0) \n  // #A9A9A9\n  #define darkgrey vec3(169.0 / 255.0, 169.0 / 255.0, 169.0 / 255.0) \n  // #006400\n  #define darkgreen vec3(0.0 / 255.0, 100.0 / 255.0, 0.0 / 255.0) \n  // #BDB76B\n  #define darkkhaki vec3(189.0 / 255.0, 183.0 / 255.0, 107.0 / 255.0) \n  // #8B008B\n  #define darkmagenta vec3(139.0 / 255.0, 0.0 / 255.0, 139.0 / 255.0) \n  // #556B2F\n  #define darkolivegreen vec3(85.0 / 255.0, 107.0 / 255.0, 47.0 / 255.0) \n  // #FF8C00\n  #define darkorange vec3(255.0 / 255.0, 140.0 / 255.0, 0.0 / 255.0) \n  // #9932CC\n  #define darkorchid vec3(153.0 / 255.0, 50.0 / 255.0, 204.0 / 255.0) \n  // #8B0000\n  #define darkred vec3(139.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #E9967A\n  #define darksalmon vec3(233.0 / 255.0, 150.0 / 255.0, 122.0 / 255.0) \n  // #8FBC8F\n  #define darkseagreen vec3(143.0 / 255.0, 188.0 / 255.0, 143.0 / 255.0) \n  // #483D8B\n  #define darkslateblue vec3(72.0 / 255.0, 61.0 / 255.0, 139.0 / 255.0) \n  // #2F4F4F\n  #define darkslategray vec3(47.0 / 255.0, 79.0 / 255.0, 79.0 / 255.0) \n  // #2F4F4F\n  #define darkslategrey vec3(47.0 / 255.0, 79.0 / 255.0, 79.0 / 255.0) \n  // #00CED1\n  #define darkturquoise vec3(0.0 / 255.0, 206.0 / 255.0, 209.0 / 255.0) \n  // #9400D3\n  #define darkviolet vec3(148.0 / 255.0, 0.0 / 255.0, 211.0 / 255.0) \n  // #FF1493\n  #define deeppink vec3(255.0 / 255.0, 20.0 / 255.0, 147.0 / 255.0) \n  // #00BFFF\n  #define deepskyblue vec3(0.0 / 255.0, 191.0 / 255.0, 255.0 / 255.0) \n  // #696969\n  #define dimgray vec3(105.0 / 255.0, 105.0 / 255.0, 105.0 / 255.0) \n  // #696969\n  #define dimgrey vec3(105.0 / 255.0, 105.0 / 255.0, 105.0 / 255.0) \n  // #1E90FF\n  #define dodgerblue vec3(30.0 / 255.0, 144.0 / 255.0, 255.0 / 255.0) \n  // #B22222\n  #define firebrick vec3(178.0 / 255.0, 34.0 / 255.0, 34.0 / 255.0) \n  // #FFFAF0\n  #define floralwhite vec3(255.0 / 255.0, 250.0 / 255.0, 240.0 / 255.0) \n  // #228B22\n  #define forestgreen vec3(34.0 / 255.0, 139.0 / 255.0, 34.0 / 255.0) \n  // #FF00FF\n  #define fuchsia vec3(255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0) \n  // #DCDCDC\n  #define gainsboro vec3(220.0 / 255.0, 220.0 / 255.0, 220.0 / 255.0) \n  // #F8F8FF\n  #define ghostwhite vec3(248.0 / 255.0, 248.0 / 255.0, 255.0 / 255.0) \n  // #FFD700\n  #define gold vec3(255.0 / 255.0, 215.0 / 255.0, 0.0 / 255.0) \n  // #DAA520\n  #define goldenrod vec3(218.0 / 255.0, 165.0 / 255.0, 32.0 / 255.0) \n  // #808080\n  #define gray vec3(128.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #808080\n  #define grey vec3(128.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #008000\n  #define green vec3(0.0 / 255.0, 128.0 / 255.0, 0.0 / 255.0) \n  // #ADFF2F\n  #define greenyellow vec3(173.0 / 255.0, 255.0 / 255.0, 47.0 / 255.0) \n  // #F0FFF0\n  #define honeydew vec3(240.0 / 255.0, 255.0 / 255.0, 240.0 / 255.0) \n  // #FF69B4\n  #define hotpink vec3(255.0 / 255.0, 105.0 / 255.0, 180.0 / 255.0) \n  // #CD5C5C\n  #define indianred vec3(205.0 / 255.0, 92.0 / 255.0, 92.0 / 255.0) \n  // #4B0082\n  #define indigo vec3(75.0 / 255.0, 0.0 / 255.0, 130.0 / 255.0) \n  // #FFFFF0\n  #define ivory vec3(255.0 / 255.0, 255.0 / 255.0, 240.0 / 255.0) \n  // #F0E68C\n  #define khaki vec3(240.0 / 255.0, 230.0 / 255.0, 140.0 / 255.0) \n  // #E6E6FA\n  #define lavender vec3(230.0 / 255.0, 230.0 / 255.0, 250.0 / 255.0) \n  // #FFF0F5\n  #define lavenderblush vec3(255.0 / 255.0, 240.0 / 255.0, 245.0 / 255.0) \n  // #7CFC00\n  #define lawngreen vec3(124.0 / 255.0, 252.0 / 255.0, 0.0 / 255.0) \n  // #FFFACD\n  #define lemonchiffon vec3(255.0 / 255.0, 250.0 / 255.0, 205.0 / 255.0) \n  // #ADD8E6\n  #define lightblue vec3(173.0 / 255.0, 216.0 / 255.0, 230.0 / 255.0) \n  // #F08080\n  #define lightcoral vec3(240.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #E0FFFF\n  #define lightcyan vec3(224.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #FAFAD2\n  #define lightgoldenrodyellow vec3(250.0 / 255.0, 250.0 / 255.0, 210.0 / 255.0) \n  // #D3D3D3\n  #define lightgray vec3(211.0 / 255.0, 211.0 / 255.0, 211.0 / 255.0) \n  // #D3D3D3\n  #define lightgrey vec3(211.0 / 255.0, 211.0 / 255.0, 211.0 / 255.0) \n  // #90EE90\n  #define lightgreen vec3(144.0 / 255.0, 238.0 / 255.0, 144.0 / 255.0) \n  // #FFB6C1\n  #define lightpink vec3(255.0 / 255.0, 182.0 / 255.0, 193.0 / 255.0) \n  // #FFA07A\n  #define lightsalmon vec3(255.0 / 255.0, 160.0 / 255.0, 122.0 / 255.0) \n  // #20B2AA\n  #define lightseagreen vec3(32.0 / 255.0, 178.0 / 255.0, 170.0 / 255.0) \n  // #87CEFA\n  #define lightskyblue vec3(135.0 / 255.0, 206.0 / 255.0, 250.0 / 255.0) \n  // #778899\n  #define lightslategray vec3(119.0 / 255.0, 136.0 / 255.0, 153.0 / 255.0) \n  // #778899\n  #define lightslategrey vec3(119.0 / 255.0, 136.0 / 255.0, 153.0 / 255.0) \n  // #B0C4DE\n  #define lightsteelblue vec3(176.0 / 255.0, 196.0 / 255.0, 222.0 / 255.0) \n  // #FFFFE0\n  #define lightyellow vec3(255.0 / 255.0, 255.0 / 255.0, 224.0 / 255.0) \n  // #00FF00\n  #define lime vec3(0.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0) \n  // #32CD32\n  #define limegreen vec3(50.0 / 255.0, 205.0 / 255.0, 50.0 / 255.0) \n  // #FAF0E6\n  #define linen vec3(250.0 / 255.0, 240.0 / 255.0, 230.0 / 255.0) \n  // #FF00FF\n  #define magenta vec3(255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0) \n  // #800000\n  #define maroon vec3(128.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #66CDAA\n  #define mediumaquamarine vec3(102.0 / 255.0, 205.0 / 255.0, 170.0 / 255.0) \n  // #0000CD\n  #define mediumblue vec3(0.0 / 255.0, 0.0 / 255.0, 205.0 / 255.0) \n  // #BA55D3\n  #define mediumorchid vec3(186.0 / 255.0, 85.0 / 255.0, 211.0 / 255.0) \n  // #9370DB\n  #define mediumpurple vec3(147.0 / 255.0, 112.0 / 255.0, 219.0 / 255.0) \n  // #3CB371\n  #define mediumseagreen vec3(60.0 / 255.0, 179.0 / 255.0, 113.0 / 255.0) \n  // #7B68EE\n  #define mediumslateblue vec3(123.0 / 255.0, 104.0 / 255.0, 238.0 / 255.0) \n  // #00FA9A\n  #define mediumspringgreen vec3(0.0 / 255.0, 250.0 / 255.0, 154.0 / 255.0) \n  // #48D1CC\n  #define mediumturquoise vec3(72.0 / 255.0, 209.0 / 255.0, 204.0 / 255.0) \n  // #C71585\n  #define mediumvioletred vec3(199.0 / 255.0, 21.0 / 255.0, 133.0 / 255.0) \n  // #191970\n  #define midnightblue vec3(25.0 / 255.0, 25.0 / 255.0, 112.0 / 255.0) \n  // #F5FFFA\n  #define mintcream vec3(245.0 / 255.0, 255.0 / 255.0, 250.0 / 255.0) \n  // #FFE4E1\n  #define mistyrose vec3(255.0 / 255.0, 228.0 / 255.0, 225.0 / 255.0) \n  // #FFE4B5\n  #define moccasin vec3(255.0 / 255.0, 228.0 / 255.0, 181.0 / 255.0) \n  // #FFDEAD\n  #define navajowhite vec3(255.0 / 255.0, 222.0 / 255.0, 173.0 / 255.0) \n  // #000080\n  #define navy vec3(0.0 / 255.0, 0.0 / 255.0, 128.0 / 255.0) \n  // #FDF5E6\n  #define oldlace vec3(253.0 / 255.0, 245.0 / 255.0, 230.0 / 255.0) \n  // #808000\n  #define olive vec3(128.0 / 255.0, 128.0 / 255.0, 0.0 / 255.0) \n  // #6B8E23\n  #define olivedrab vec3(107.0 / 255.0, 142.0 / 255.0, 35.0 / 255.0) \n  // #FFA500\n  #define orange vec3(255.0 / 255.0, 165.0 / 255.0, 0.0 / 255.0) \n  // #FF4500\n  #define orangered vec3(255.0 / 255.0, 69.0 / 255.0, 0.0 / 255.0) \n  // #DA70D6\n  #define orchid vec3(218.0 / 255.0, 112.0 / 255.0, 214.0 / 255.0) \n  // #EEE8AA\n  #define palegoldenrod vec3(238.0 / 255.0, 232.0 / 255.0, 170.0 / 255.0) \n  // #98FB98\n  #define palegreen vec3(152.0 / 255.0, 251.0 / 255.0, 152.0 / 255.0) \n  // #AFEEEE\n  #define paleturquoise vec3(175.0 / 255.0, 238.0 / 255.0, 238.0 / 255.0) \n  // #DB7093\n  #define palevioletred vec3(219.0 / 255.0, 112.0 / 255.0, 147.0 / 255.0) \n  // #FFEFD5\n  #define papayawhip vec3(255.0 / 255.0, 239.0 / 255.0, 213.0 / 255.0) \n  // #FFDAB9\n  #define peachpuff vec3(255.0 / 255.0, 218.0 / 255.0, 185.0 / 255.0) \n  // #CD853F\n  #define peru vec3(205.0 / 255.0, 133.0 / 255.0, 63.0 / 255.0) \n  // #FFC0CB\n  #define pink vec3(255.0 / 255.0, 192.0 / 255.0, 203.0 / 255.0) \n  // #DDA0DD\n  #define plum vec3(221.0 / 255.0, 160.0 / 255.0, 221.0 / 255.0) \n  // #B0E0E6\n  #define powderblue vec3(176.0 / 255.0, 224.0 / 255.0, 230.0 / 255.0) \n  // #800080\n  #define purple vec3(128.0 / 255.0, 0.0 / 255.0, 128.0 / 255.0) \n  // #663399\n  #define rebeccapurple vec3(102.0 / 255.0, 51.0 / 255.0, 153.0 / 255.0) \n  // #FF0000\n  #define red vec3(255.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #BC8F8F\n  #define rosybrown vec3(188.0 / 255.0, 143.0 / 255.0, 143.0 / 255.0) \n  // #4169E1\n  #define royalblue vec3(65.0 / 255.0, 105.0 / 255.0, 225.0 / 255.0) \n  // #8B4513\n  #define saddlebrown vec3(139.0 / 255.0, 69.0 / 255.0, 19.0 / 255.0) \n  // #FA8072\n  #define salmon vec3(250.0 / 255.0, 128.0 / 255.0, 114.0 / 255.0) \n  // #F4A460\n  #define sandybrown vec3(244.0 / 255.0, 164.0 / 255.0, 96.0 / 255.0) \n  // #2E8B57\n  #define seagreen vec3(46.0 / 255.0, 139.0 / 255.0, 87.0 / 255.0) \n  // #FFF5EE\n  #define seashell vec3(255.0 / 255.0, 245.0 / 255.0, 238.0 / 255.0) \n  // #A0522D\n  #define sienna vec3(160.0 / 255.0, 82.0 / 255.0, 45.0 / 255.0) \n  // #C0C0C0\n  #define silver vec3(192.0 / 255.0, 192.0 / 255.0, 192.0 / 255.0) \n  // #87CEEB\n  #define skyblue vec3(135.0 / 255.0, 206.0 / 255.0, 235.0 / 255.0) \n  // #6A5ACD\n  #define slateblue vec3(106.0 / 255.0, 90.0 / 255.0, 205.0 / 255.0) \n  // #708090\n  #define slategray vec3(112.0 / 255.0, 128.0 / 255.0, 144.0 / 255.0) \n  // #708090\n  #define slategrey vec3(112.0 / 255.0, 128.0 / 255.0, 144.0 / 255.0) \n  // #FFFAFA\n  #define snow vec3(255.0 / 255.0, 250.0 / 255.0, 250.0 / 255.0) \n  // #00FF7F\n  #define springgreen vec3(0.0 / 255.0, 255.0 / 255.0, 127.0 / 255.0) \n  // #4682B4\n  #define steelblue vec3(70.0 / 255.0, 130.0 / 255.0, 180.0 / 255.0) \n  // #D2B48C\n  #define tan_color vec3(210.0 / 255.0, 180.0 / 255.0, 140.0 / 255.0) \n  // #008080\n  #define teal vec3(0.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #D8BFD8\n  #define thistle vec3(216.0 / 255.0, 191.0 / 255.0, 216.0 / 255.0) \n  // #FF6347\n  #define tomato vec3(255.0 / 255.0, 99.0 / 255.0, 71.0 / 255.0) \n  // #40E0D0\n  #define turquoise vec3(64.0 / 255.0, 224.0 / 255.0, 208.0 / 255.0) \n  // #EE82EE\n  #define violet vec3(238.0 / 255.0, 130.0 / 255.0, 238.0 / 255.0) \n  // #F5DEB3\n  #define wheat vec3(245.0 / 255.0, 222.0 / 255.0, 179.0 / 255.0) \n  // #FFFFFF\n  #define white vec3(255.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #F5F5F5\n  #define whitesmoke vec3(245.0 / 255.0, 245.0 / 255.0, 245.0 / 255.0) \n  // #FFFF00\n  #define yellow vec3(255.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0) \n  // #9ACD32\n  #define yellowgreen vec3(154.0 / 255.0, 205.0 / 255.0, 50.0 / 255.0) \n"},72612:(e,n,t)=>{"use strict";function*a(e){let n=0,t={get i(){return n},get t(){return n/e},get p(){return n/(e-1)},get size(){return e},clone(){return{...this}}};for(n=0;n<e;n++)yield t}function r(e,n){let t=[];for(let r of a(e)){let e=r.clone();t.push(n?n(e):e)}return t}function*l(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];let a=0,r=0;2===n.length?(a=n[0],r=n[1]):Array.isArray(n[0])?(a=n[0][0],r=n[0][1]):(a=n[0].x,r=n[0].y);let l=0,o=0,i=0,f={get i(){return l},get x(){return o},get y(){return i},get tx(){return o/a},get ty(){return i/r},get px(){return o/(a-1)},get py(){return i/(r-1)},get sizeX(){return a},get sizeY(){return r},clone(){return{...this}}};for(i=0;i<r;i++)for(o=0;o<a;o++)yield f,l++}function o(){let e;for(var n=arguments.length,t=Array(n),a=0;a<n;a++)t[a]=arguments[a];let r=0,o=0;"number"==typeof t[0]?(r=t[0],o=t[1],e=t[2]):(Array.isArray(t[0])?(r=t[0][0],o=t[0][1]):(r=t[0].x,o=t[0].y),e=t[1]);let i=[];for(let n of l(r,o)){let t=n.clone();i.push(e?e(t):t)}return i}function*i(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];let a=0,r=0,l=0;3===n.length?(a=n[0],r=n[1],l=n[2]):Array.isArray(n[0])?(a=n[0][0],r=n[0][1],l=n[0][2]):(a=n[0].x,r=n[0].y,l=n[0].z);let o=0,i=0,f=0,c=0,s={get i(){return o},get x(){return i},get y(){return f},get z(){return c},get tx(){return i/a},get ty(){return f/r},get tz(){return c/l},get px(){return i/(a-1)},get py(){return f/(r-1)},get pz(){return c/(l-1)},clone(){return{...this}}};for(c=0;c<l;c++)for(f=0;f<r;f++)for(i=0;i<a;i++)yield s,o++}function f(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];let a=[];for(let e of i(...n))a.push(e.clone());return a}t.r(n),t.d(n,{loop:()=>a,loop2:()=>l,loop2Array:()=>o,loop3:()=>i,loop3Array:()=>f,loopArray:()=>r})},77186:(e,n,t)=>{Promise.resolve().then(t.bind(t,84059))},84059:(e,n,t)=>{"use strict";t.d(n,{Main:()=>M});var a=t(70691),r=t(84306),l=t(49797),o=t(99332),i=t(94065);let f=new l.mrM({color:"white",transparent:!0,depthTest:!1}),c={circle:(()=>{let e=new l.LoY,n=Array.from({length:81},(e,n)=>{let t=n/80*Math.PI*2;return new l.Pq0(Math.cos(t),Math.sin(t),0)});return e.setFromPoints(n),e})(),box2:(()=>{let e=new l.LoY,n=[new l.Pq0(-.5,-.5,0),new l.Pq0(.5,-.5,0),new l.Pq0(.5,.5,0),new l.Pq0(-.5,.5,0),new l.Pq0(-.5,-.5,0)];return e.setFromPoints(n),e})()};class s extends l.YJl{setupUniforms(e,n){let{value:t}=e,{value:a}=n;t.copy(this.matrixWorld),t.invert()}init(e){this.props=e,this.renderOrder=1}setup(){}set(e){Object.assign(this.props,e),this.setup()}}let d={radius:2,falloff:1};class u extends s{get radius(){return this.props.radius}set radius(e){this.props.radius=e,this.setup()}get falloff(){return this.props.falloff}set falloff(e){this.props.falloff=e,this.setup()}setupUniforms(e,n){super.setupUniforms(e,n);let{radius:t,falloff:a}=this.props;n.value.set(t,a,0,0)}setup(){let{circle0:e,circle1:n}=this.parts,{radius:t,falloff:a}=this.props;e.scale.setScalar(t),n.scale.setScalar(t+a)}constructor(e){super(),this.parts={circle0:new l.N1A(c.circle,f),circle1:new l.N1A(c.circle,f)},this.init({...d,...e}),this.add(this.parts.circle0),this.add(this.parts.circle1),this.setup()}}u.glsl="\n    struct CircleFalloff {\n      mat4 matrix;\n      float radius;\n      float falloff;\n    };\n    float falloff(CircleFalloff falloff, vec3 p) {\n      p = (falloff.matrix * vec4(p, 1.0)).xyz;\n      float d = length(p);\n      return 1.0 - (d - falloff.radius) / falloff.falloff;\n    }\n  ";let v={width:1,height:1,falloff:1};class p extends s{setupUniforms(e,n){super.setupUniforms(e,n);let{width:t,height:a,falloff:r}=this.props;n.value.set(t,a,r,0)}setup(){let{box0:e,box1:n}=this.parts,{width:t,height:a,falloff:r}=this.props;e.scale.set(t,a,1),n.scale.set(t+2*r,a+2*r,1)}constructor(e){super(),this.parts={box0:new l.N1A(c.box2,f),box1:new l.N1A(c.box2,f)},this.init({...v,...e}),this.add(this.parts.box0),this.add(this.parts.box1),this.setup()}}p.glsl="\n    struct ManhattanBox2Falloff {\n      mat4 matrix;\n      float width;\n      float height;\n      float falloff;\n    };\n    float falloff(ManhattanBox2Falloff falloff, vec3 p) {\n      p = (falloff.matrix * vec4(p, 1.0)).xyz;\n      float x = abs(p.x) - falloff.width * 0.5;\n      float y = abs(p.y) - falloff.height * 0.5;\n      return 1.0 - max(x, y) / falloff.falloff;\n    }\n  ";var x=t(7147),h=t(3293),m=t(79911),F=t(71895),g=t(22899),y=t(8144),w=t(72612),b=t(79285);function A(e){let{r:n,g:t,b:a}=new l.Q1f(e);return"vec3(".concat(n.toFixed(3),", ").concat(t.toFixed(3),", ").concat(a.toFixed(3),")")}let k={grid:[16,16]},C=new l.bdM(1,1,1,1),E=new l.V9B({side:l.$EB,transparent:!0}),B={uRadiusScalar:new l.nc$(.9),uCircleMat:new l.nc$(new l.kn4().identity()),uCircleProps:new l.nc$(new l.IUQ(1,2,0,0)),uBox0Mat:new l.nc$(new l.kn4().identity()),uBox0Props:new l.nc$(new l.IUQ(1,1,0,0))};E.onBeforeCompile=e=>x.bI.with(e).defines({USE_UV:""}).uniforms(B).varying({vCenter:"vec3",vWorldPosition2:"vec3"}).vertex.mainAfterAll("\n    vWorldPosition2 = (modelMatrix * instanceMatrix * vec4(transformed, 1.0)).xyz;\n    vCenter = (modelMatrix * instanceMatrix[3]).xyz;\n  ").fragment.top(y.H,F.D,g.I).fragment.top(u.glsl,p.glsl).fragment.after("color_fragment","\n    CircleFalloff circle = CircleFalloff(uCircleMat, uCircleProps.x, uCircleProps.y);\n    ManhattanBox2Falloff box = ManhattanBox2Falloff(uBox0Mat, uBox0Props.x, uBox0Props.y, uBox0Props.z);\n    float d = 0.0;\n    d += clamp01(falloff(box, vWorldPosition2));\n    d += clamp01(falloff(circle, vWorldPosition2));\n    diffuseColor.rgb = mix(".concat(A("#c2e1ff"),", ").concat(A("#d80773"),", easeInOut3(clamp01(d)));\n  ")).fragment.after("alphamap_fragment","\n    float scalar = 1.0 / uRadiusScalar / mix(1.0, 0.25, easeInOut3(clamp01(d)));\n    float alpha = smoothstep(1.0, 0.99, length(vUv - 0.5) * scalar / 0.5);\n\n    if (alpha < 0.01) discard;\n\n    diffuseColor.a *= alpha;\n  ");class D extends l.ZLX{onTick(e){for(let e of Object.values(this.falloffs))e.visible=this.falloffsAreVisible;let{box0:n,circle:t}=this.falloffs;t.falloff=(0,b.lerp)(.1,4,e.sin01Time({frequency:.15})),t.radius=(0,b.lerp)(1,5,e.sin01Time({frequency:.1,phase:.5})),t.setupUniforms(B.uCircleMat,B.uCircleProps),n.rotation.z+=.1*e.deltaTime,n.set({width:8,falloff:(0,b.lerp)(.5,6,e.sin01Time({frequency:.15}))}),n.setupUniforms(B.uBox0Mat,B.uBox0Props)}constructor(e){var n;let{x:t,y:a}=(0,i.wX)(null!=(n=null==e?void 0:e.grid)?n:k.grid);for(let n of(super(C,E,t*a),this.internal={grid:new l.I9Y},this.falloffsAreVisible=!0,this.falloffs={circle:(0,m.mj)(new u,{parent:this,position:[-3,-2,0]}),box0:(0,m.mj)(new p({}),{parent:this,position:[3,2,0]})},this.props={...k,...e},(0,w.loop2)(t,a)))this.setMatrixAt(n.i,(0,h.w)({x:n.x-t/2,y:n.y-a/2}))}}function*P(e){e.scene.background=new l.Q1f("#1c54e0"),e.ticker.set({activeDuration:30}),e.useOrbitControls();let n=new D;e.scene.add(n),yield()=>n.removeFromParent(),yield(0,o.s)(document.body,{onTap(){n.falloffsAreVisible=!n.falloffsAreVisible}})}function L(){return(0,r.yk)(P),null}function M(){return(0,a.jsx)("div",{className:"absolute-through",children:(0,a.jsx)(r.uB,{children:(0,a.jsx)(L,{})})})}}},e=>{var n=n=>e(e.s=n);e.O(0,[2193,5611,7190,7962,9635,8921,4512,7775,7436,7706,146,487,3445,9332,3414,2143,2206,7558,1319,6852,7358],()=>n(77186)),_N_E=e.O()}]);