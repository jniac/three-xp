(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3181],{22899:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var a=n(65927);let r=["linear"];for(let e=1;e<=10;e++)r.push("easeIn".concat(e)),r.push("easeOut".concat(e)),r.push("easeInOut".concat(e)),r.push("easeOutIn".concat(e));let o="\n#ifndef GLSL_EASING\n#define GLSL_EASING\n\n".concat(a.S,"\n\nfloat easePow1(float x) {\n  return x;\n}\n\nfloat easePow2(float x) {\n  return x * x;\n}\n\nfloat easePow3(float x) {\n  return x * x * x;\n}\n\nfloat easePow4(float x) {\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow5(float x) {\n  float x0 = x;\n  x *= x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow6(float x) {\n  x *= x * x;\n  return x *= x;\n}\n\nfloat easePow7(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow8(float x) {\n  x *= x;\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow9(float x) {\n  x *= x * x;\n  return x *= x * x;\n}\n\nfloat easePow10(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x * x;\n  return x0 * x;\n}\n\nfloat linear(float x) {\n  return clamp01(x);\n}\n\n").concat(Array.from({length:10},(e,t)=>{let n=t+1;return"\n\n  float easeIn".concat(n," (float x) {\n    return easePow").concat(n,"(clamp01(x));\n  }\n  float easeOut").concat(n," (float x) {\n    return 1.0 - easePow").concat(n,"(clamp01(1.0 - x));\n  }\n  float easeInOut").concat(n," (float x) {\n    return x < 0.5 \n      ? 0.5 * easePow").concat(n,"(2.0 * x) \n      : 1.0 - 0.5 * easePow").concat(n,"(2.0 * (1.0 - x));\n  }\n  float easeOutIn").concat(n," (float x) {\n    return x < 0.5\n      ? 0.5 * (1.0 - easePow").concat(n,"(1.0 - x * 2.0))\n      : 1.0 - 0.5 * (1.0 - easePow").concat(n,"(2.0 * x - 1.0));\n  }\n\n").trim()}).join("\n\n"),"\n\n\n// https://www.desmos.com/calculator/mqou4lf9zc?lang=fr\nfloat easeInOut(float x, float p, float i) {\n  return  x <= 0.0 ? 0.0 :\n          x >= 1.0 ? 1.0 :\n          x <= i ? 1.0 / pow(i, p - 1.0) * pow(x, p) :\n          1.0 - 1.0 / pow(1.0 - i, p - 1.0) * pow(1.0 - x, p);\n}\n\n// https://www.desmos.com/calculator/nrjlezusdv\nfloat easeInThenOut(float x, float p) {\n  return 1.0 - pow(abs(2.0 * x - 1.0), p);\n}\n\n#endif\n")},28010:(e,t,n)=>{Promise.resolve().then(n.bind(n,35204))},35204:(e,t,n)=>{"use strict";n.d(t,{ClientPage:()=>b});var a=n(70691),r=n(53097),o=n(79911),l=n(77794),i=n(49797),s=n(79782),c=n(38921),u=n(31763),f=n(61572),x=n(7147),v=n(73446),d=n(55227),h=n(8144),m=n(79285),p=n(67235),C=n(33589);function w(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:512,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:512,a=new Blob([e],{type:"image/svg+xml"}),r=URL.createObjectURL(a),o=new Image,l=document.createElement("canvas");l.width=t,l.height=n;let s=l.getContext("2d"),c=new i.GYF(new Uint8Array(64).fill(255),4,4);c.generateMipmaps=!0,c.minFilter=i.NZq,c.magFilter=i.k6q;let u=(0,C.F)(c);return o.onload=()=>{s.transform(1,0,0,-1,0,n),s.drawImage(o,0,0,t,n),URL.revokeObjectURL(r),u.image={data:s.getImageData(0,0,t,n).data,width:t,height:n},u.needsUpdate=!0,u.resolve()},o.onerror=e=>{u.reject(e)},o.src=r,u}function g(e,t,n){return null!=n||(n=new i.I9Y),e>1?(n.x=t,n.y=t/e):(n.x=t*e,n.y=t),n}class L extends i.YJl{initialize(e){let t=new i.I9Y,n=g(1,100),a=new f.S({size:n,viscosity:.995}).initialize(e.renderer),r=(0,o.mj)(new i.eaF(new i.bdM,new i.V9B),this),l={uViewportSize:{value:new i.I9Y},uWater:{value:a.currentTexture()},uImageFill:{value:this.imageFill},uImageStroke:{value:this.imageStroke}};r.material.onBeforeCompile=e=>x.bI.with(e).uniforms(l).defines({USE_UV:""}).fragment.top(h.H,d.M,v.x).fragment.after("map_fragment","\n        float aspect = uViewportSize.x / uViewportSize.y;\n        vec2 imageUv = (vUv - 0.5) / vec2(1.0, aspect) + 0.5;\n        vec4 stroke = texture2D(uImageStroke, imageUv);\n        vec4 fill = texture2D(uImageFill, imageUv);\n        float inside = mix(0.0, 1.0, max(stroke.a, fill.a));\n        vec4 water = texture2D(uWater, vUv + 0.05 * inside);\n\n        Vec3Ramp r = ramp(0.5 + spow(water.r * 0.1, 4.0) * 0.2, ".concat((0,x.eR)("#eadc73ff"),", ").concat((0,x.eR)("#000000"),", ").concat((0,x.eR)("#71ebcaff"),");\n        diffuseColor.rgb = mix(r.a, r.b, r.t);\n        diffuseColor.rgb = screenBlending(diffuseColor.rgb, clamp01(vec3(stroke.a) * pow(abs(water.r) * 0.2, 8.0) * 0.05));\n        diffuseColor.a = 1.0;\n      "));let s=p.Q.send(u.n).assertPayload();return e.onTick({frameDelay:2},o=>{let{realSize:i}=s.dampedVertigo.state;l.uViewportSize.value.set(i.width,i.height);let c=e.pointer.intersectPlane("xy");c.intersected&&t.set((0,m.inverseLerp)(-i.width/2,i.width/2,c.point.x),(0,m.inverseLerp)(-i.height/2,i.height/2,c.point.y)),g(i.x/i.y,100,n),a.setSize(n),a.pointer(t.x,t.y,5,+!!e.pointer.buttonDown()),a.update(o.deltaTime),l.uWater.value=a.currentTexture(),r.scale.set(i.width,i.height,1)}),this}constructor(){super(),this.name="home-text";let e=new s.c().parse('\n<svg width="1024" height="1024" viewBox="0 0 1024 1024" fill="none" xmlns="http://www.w3.org/2000/svg">\n  \x3c!-- <rect width="1024" height="1024" fill="white"/> --\x3e\n  <path d="M367.754 307.467C380.688 307.467 392.47 309.693 403.093 314.154H403.094C413.95 318.625 422.58 325.655 428.97 335.239C435.585 344.634 438.87 356.88 438.87 371.934V376.233H396.387V372.884C396.387 363.693 393.778 356.549 388.616 351.387L388.603 351.373C383.653 346.011 376.622 343.3 367.437 343.3C357.796 343.3 350.432 345.501 345.275 349.833L345.266 349.841C340.107 353.968 337.537 359.313 337.537 365.917C337.537 372.143 339.4 377.074 343.09 380.764C346.833 384.506 351.732 387.639 357.805 390.152H357.806C364.121 392.678 371.07 395.1 378.653 397.418C386.27 399.534 393.78 402.073 401.185 405.034L402.609 405.603C409.684 408.499 416.109 412.236 421.883 416.813L422.479 417.258C428.602 421.895 433.519 427.931 437.231 435.354L437.586 436.062C441.196 443.43 442.986 452.673 442.986 463.767C442.986 480.505 439.703 494.015 433.09 504.255L433.088 504.259C426.485 514.27 417.324 521.616 405.624 526.296L405.625 526.297C394.154 530.97 380.893 533.3 365.854 533.3C352.488 533.3 340.069 530.754 328.601 525.657C317.12 520.555 307.864 513.003 300.844 503.004L300.842 503C293.807 492.768 290.304 480.209 290.304 465.351V461.509L290.311 461.468C290.519 460.216 290.62 459.19 290.62 458.384V457.884H333.736V458.384C333.736 458.532 333.704 458.808 333.652 459.167C333.6 459.534 333.522 460.025 333.42 460.64V463.45C333.42 473.689 336.446 481.895 342.463 488.119C348.469 494.332 356.876 497.467 367.754 497.467C379.952 497.467 388.323 494.833 393.035 489.712C397.819 484.301 400.187 478.506 400.187 472.316C400.186 465.015 398.311 459.23 394.607 454.909C390.865 450.543 385.864 446.995 379.588 444.275L379.578 444.271L379.569 444.267C373.474 441.324 366.637 438.694 359.058 436.378L359.054 436.377C351.654 434.051 344.149 431.409 336.539 428.449C328.9 425.478 321.894 421.658 315.524 416.986L315.517 416.981L315.51 416.976C309.325 412.071 304.319 405.784 300.489 398.124C296.644 390.433 294.736 380.638 294.736 368.767C294.736 354.961 298.137 343.552 304.973 334.58C311.785 325.428 320.726 318.619 331.783 314.153L331.786 314.152C343.037 309.695 355.028 307.467 367.754 307.467ZM514.83 311.267V459.65C514.83 472.033 517.769 481.395 523.568 487.815C529.364 494.232 537.555 497.467 548.214 497.467C558.873 497.467 567.064 494.232 572.859 487.815L572.865 487.809C578.872 481.388 581.914 472.029 581.914 459.65V311.267H623.447V460.917C623.447 484.656 616.768 502.752 603.336 515.118L603.333 515.121C589.917 527.26 571.522 533.3 548.214 533.3C524.905 533.3 506.511 527.26 493.095 515.121L493.089 515.115C479.87 502.749 473.297 484.653 473.297 460.917V311.267H514.83ZM78.2471 311.267L78.3525 311.626L123.847 466.75H124.363L169.226 311.628L169.33 311.267H209.964L209.768 311.912L143.584 529.146L143.476 529.5H101.885L101.777 529.146L35.5938 311.912L35.3975 311.267H78.2471ZM266.116 311.267V529.5H224.583V311.267H266.116ZM759.414 311.267L759.525 311.613L829.509 528.847L829.719 529.5H787.182L787.072 529.148L773.882 486.75H694.504L681.628 529.146L681.521 529.5H641.196L641.407 528.847L711.391 311.613L711.502 311.267H759.414ZM889.318 311.267V490.5H981.152V529.5H847.785V311.267H889.318ZM733.971 349.616C733.812 350.513 733.575 351.859 733.259 353.653L733.258 353.659C732.623 357.045 731.777 361.063 730.721 365.711C729.875 370.358 728.922 374.382 727.86 377.778L727.861 377.779L705.892 449.65H762.493L740.838 377.777L740.834 377.768C739.776 373.959 738.719 369.728 737.662 365.077C736.606 360.431 735.76 356.521 735.126 353.349L735.122 353.33L735.12 353.312C734.909 351.624 734.751 350.356 734.646 349.512C734.602 349.164 734.568 348.888 734.542 348.684H734.136C734.097 348.905 734.041 349.216 733.971 349.616Z" stroke="black"/>\n  <path d="M596.198 502.467C611.464 502.467 625.158 505.436 637.269 511.385C649.399 517.344 658.972 526.602 665.984 539.14C673.005 551.693 676.498 567.829 676.498 587.517V588.017H634.015V587.517C634.015 570.684 630.435 558.374 623.375 550.483L623.366 550.474L623.748 550.15L623.366 550.473C616.501 542.359 607.46 538.3 596.198 538.3C581.378 538.3 570.357 544.441 563.062 556.738L563.06 556.742C555.736 568.878 552.048 585.77 552.048 607.467V623.3C552.048 644.993 555.84 661.989 563.373 674.337L563.728 674.898C571.23 686.609 582.451 692.467 597.465 692.467C609.16 692.467 618.41 688.505 625.271 680.605L625.271 680.604C632.337 672.5 635.915 660.184 635.915 643.566V643.066H676.498V643.566C676.498 662.625 673.004 678.443 665.984 690.994C658.973 703.53 649.403 712.89 637.277 719.06L637.278 719.061C625.375 725.225 611.677 728.3 596.198 728.3C568.84 728.3 547.472 719.068 532.163 700.569C516.856 682.073 509.248 653.645 509.248 615.384C509.248 576.912 516.855 548.483 532.165 530.196C547.474 511.699 568.841 502.467 596.198 502.467ZM321.245 506.267V543.367H267.411V724.5H225.878V543.367H172.045V506.267H321.245ZM483.688 506.267V543.367H385.838V594.3H469.754V631.4H385.838V687.4H485.588V724.5H344.304V506.267H483.688ZM746.417 506.267V594.3H813.817V506.267H855.351V724.5H813.817V631.4H746.417V724.5H704.884V506.267H746.417ZM932.236 680.117V724.5H887.536V680.117H932.236Z" stroke="black"/>\n</svg>\n'),t=e.xml,n=t.width.baseVal.value,a=t.height.baseVal.value,r=10/Math.max(n,a),o=e.paths.flatMap(e=>e.toShapes(!0)).map(e=>new i.MSw(e));!function(e){if(e.index){let t=e.index.array;for(let e=0,n=t.length;e<n;e+=3){let n=t[e+0],a=t[e+1];t[e+0]=a,t[e+1]=n}e.index.needsUpdate=!0}else{let t=e.attributes.position.count;for(let n of Object.values(e.attributes)){let{array:e,itemSize:a}=n;switch(n.needsUpdate=!0,a){case 3:{let n=new i.Pq0,r=new i.Pq0;for(let o=0;o<t;o+=3)n.fromArray(e,(o+0)*a),r.fromArray(e,(o+1)*a),n.toArray(e,(o+1)*a),r.toArray(e,(o+0)*a);break}case 2:{let n=new i.I9Y,r=new i.I9Y;for(let o=0;o<t;o+=3)n.fromArray(e,(o+0)*a),r.fromArray(e,(o+1)*a),n.toArray(e,(o+1)*a),r.toArray(e,(o+0)*a)}}}}if(e.attributes.normal){let t=e.attributes.normal;for(let e=0;e<t.count;e++)t.setXYZ(e,-t.getX(e),-t.getY(e),-t.getZ(e));t.needsUpdate=!0}}(c.pP(o,!1).translate(-n/2,-a/2,0).scale(r,-r,1));let[l,u]=t.querySelectorAll("path");l.setAttribute("stroke","none"),l.setAttribute("fill","#f00"),u.setAttribute("stroke","none"),u.setAttribute("fill","#00f"),this.imageFill=w(t.outerHTML,4096,4096),l.setAttribute("stroke","#000"),l.setAttribute("fill","none"),l.setAttribute("stroke-width","0.5"),u.setAttribute("stroke","#000"),u.setAttribute("fill","none"),u.setAttribute("stroke-width","0.5"),this.imageStroke=w(t.outerHTML,4096,4096)}}function V(){let e=(0,r.Fw)();return(0,r.dB)("my-scene",function*(t){e.pipeline.basicPasses.fxaa.enabled=!1,(0,o.mj)(new l.u,t),(0,o.mj)(new L().initialize(e),t)},[]),null}function b(){return(0,a.jsxs)(r.uB,{vertigoControls:{fixed:!0,size:12,eventTarget:"canvas"},children:[(0,a.jsx)("div",{className:"ClientPage layer thru flex flex-col p-12",children:(0,a.jsx)("div",{children:"Client Page"})}),(0,a.jsx)(V,{})]})}},55227:(e,t,n)=>{"use strict";n.d(t,{M:()=>l});var a=n(22899),r=n(1029);let o="\n\nstruct FloatRamp {\n  float a;\n  float b;\n  float t;\n};\n\nstruct Vec2Ramp {\n  vec2 a;\n  vec2 b;\n  float t;\n};\n\nstruct Vec3Ramp {\n  vec3 a;\n  vec3 b;\n  float t;\n};\n\nstruct Vec4Ramp {\n  vec4 a;\n  vec4 b;\n  float t;\n};\n\n".concat((0,r.N)("vecX",e=>{let t=e[0].toUpperCase()+e.slice(1)+"Ramp";return"\n\n".concat(t," ramp(float t, T a, T b) {\n  return ").concat(t,"(a, b, t);\n}\n\n").concat(t," ramp(float t, T a, T b, T c) {\n  if (t < .5) {\n    return ").concat(t,"(a, b, t * 2.0);\n  } else {\n    return ").concat(t,"(b, c, (t - 0.5) * 2.0);\n  }\n}\n\n").concat(t," ramp(float t, T a, T b, T c, T d) {\n  if (t < .33) {\n    return ").concat(t,"(a, b, t * 3.0);\n  } else if (t < .66) {\n    return ").concat(t,"(b, c, (t - 0.33) * 3.0);\n  } else {\n    return ").concat(t,"(c, d, (t - 0.66) * 3.0);\n  }\n}\n\n").slice(1,-1)})),l="\n#ifndef GLSL_RAMP\n#define GLSL_RAMP\n".concat(a.I,"\n").concat(o,"\n#endif\n")},61572:(e,t,n)=>{"use strict";n.d(t,{S:()=>l});var a=n(49797),r=n(59813);let o={...r.q.defaultParams,size:512,viscosity:.98,cellScale:1};class l extends r.q{pointer(e,t,n,a){let{uPointer:r}=this.updateUniforms;r.value.set(e,t,n,a)}constructor(e){super({filter:"linear",...e}),this.shaders({initial:{fragmentColor:"\n          gl_FragColor.rgb = vec3(0.0);\n          gl_FragColor.a = 1.0;\n        "},update:{uniforms:{uViscosity:{value:this.params.viscosity},uCellScale:{value:this.params.cellScale},uPointer:{value:new a.IUQ(.5,.5,.1,1)}},fragmentTop:"\n          vec4 fetch(vec2 uv) {\n            if (uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0 || uv.y > 1.0) {\n              return vec4(0.0);\n            }\n            float margin = 0.2;\n            float edgeDist = min(min(uv.x, 1.0 - uv.x), min(uv.y, 1.0 - uv.y));\n            edgeDist = 1.0 - pow(1.0 - edgeDist, 15.0);\n            float edgeFade = smoothstep(0.0, margin, edgeDist);\n            return texture2D(uTexture, uv) * edgeFade;\n          }\n        ",fragmentColor:"\n          vec2 uv = vUv;\n          float viscosity = uViscosity;\n          vec2 cellSize = uCellScale / uTextureSize;\n\n          vec4 center = fetch(uv);\n          vec4 north = fetch(uv + vec2(0.0, cellSize.y));\n          vec4 south = fetch(uv - vec2(0.0, cellSize.y));\n          vec4 east = fetch(uv + vec2(cellSize.x, 0.0));\n          vec4 west = fetch(uv - vec2(cellSize.x, 0.0));\n\n          // x: previous height\n          // y: penultimate height\n          // z: unused\n          // w: unused\n\n          float newHeight = ((north.x + south.x + east.x + west.x) * 0.5 - center.y) * viscosity;\n\n          // Pointer influence\n          float radius = uPointer.z;\n          float strength = uPointer.w;\n          float dist = distance(uv * uTextureSize, uPointer.xy * uTextureSize) - radius;\n          float cellLength = length(cellSize);\n          float influence = smoothstep(cellLength * 0.5, -cellLength * 0.5, dist);\n          newHeight += influence * strength;\n\n          gl_FragColor = vec4(newHeight, center.x, 0.0, 1.0);\n        "}})}}l.defaultParams=o},66620:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var a=n(89868),r=n(44138);function o(e,t){var n=(0,r._)(e,t,"update");return(0,a._)(e,n)}}},e=>{var t=t=>e(e.s=t);e.O(0,[5611,7190,6564,7962,9635,8921,7953,4512,7775,7436,9782,146,6726,3445,9332,3414,9717,1763,9215,3097,9813,1319,6852,7358],()=>t(28010)),_N_E=e.O()}]);