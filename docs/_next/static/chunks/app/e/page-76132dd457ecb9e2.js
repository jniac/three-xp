(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9091],{55334:function(e,t,n){Promise.resolve().then(n.t.bind(n,62670,23)),Promise.resolve().then(n.bind(n,40034)),Promise.resolve().then(n.bind(n,49004)),Promise.resolve().then(n.bind(n,31458)),Promise.resolve().then(n.bind(n,90663)),Promise.resolve().then(n.bind(n,32695)),Promise.resolve().then(n.bind(n,93342)),Promise.resolve().then(n.bind(n,49794)),Promise.resolve().then(n.t.bind(n,63149,23)),Promise.resolve().then(n.bind(n,74722))},40034:function(e,t,n){"use strict";n.d(t,{Main:function(){return P}});var i=n(78485),r=n(27275),a=n(48583),o=n(51886),s=n(52471),l=n(86712),c=n(55445),d=n(55440),u=n(82048),h=n(19687),f=n(28954),p=n(54422),m=n(9710),v=n(32423),g=n(39900),x=n(62604),y=n(38885),w=n(15529),b=n(31229);class M extends x.w{dispose(){this.gtaoNoiseTexture.dispose(),this.pdNoiseTexture.dispose(),this.normalRenderTarget.dispose(),this.gtaoRenderTarget.dispose(),this.pdRenderTarget.dispose(),this.normalMaterial.dispose(),this.pdMaterial.dispose(),this.copyMaterial.dispose(),this.depthRenderMaterial.dispose(),this.fsQuad.dispose()}get gtaoMap(){return this.pdRenderTarget.texture}setGBuffer(e,t){void 0!==e?(this.depthTexture=e,this.normalTexture=t,this._renderGBuffer=!1):(this.depthTexture=new s.DepthTexture,this.depthTexture.format=s.DepthStencilFormat,this.depthTexture.type=s.UnsignedInt248Type,this.normalRenderTarget=new s.WebGLRenderTarget(this.width,this.height,{minFilter:s.NearestFilter,magFilter:s.NearestFilter,type:s.HalfFloatType,depthTexture:this.depthTexture}),this.normalTexture=this.normalRenderTarget.texture,this._renderGBuffer=!0);let n=this.normalTexture?1:0,i=this.depthTexture===this.normalTexture?"w":"x";this.gtaoMaterial.defines.NORMAL_VECTOR_TYPE=n,this.gtaoMaterial.defines.DEPTH_SWIZZLING=i,this.gtaoMaterial.uniforms.tNormal.value=this.normalTexture,this.gtaoMaterial.uniforms.tDepth.value=this.depthTexture,this.pdMaterial.defines.NORMAL_VECTOR_TYPE=n,this.pdMaterial.defines.DEPTH_SWIZZLING=i,this.pdMaterial.uniforms.tNormal.value=this.normalTexture,this.pdMaterial.uniforms.tDepth.value=this.depthTexture,this.depthRenderMaterial.uniforms.tDepth.value=this.normalRenderTarget.depthTexture}setSceneClipBox(e){e?(this.gtaoMaterial.needsUpdate=1!==this.gtaoMaterial.defines.SCENE_CLIP_BOX,this.gtaoMaterial.defines.SCENE_CLIP_BOX=1,this.gtaoMaterial.uniforms.sceneBoxMin.value.copy(e.min),this.gtaoMaterial.uniforms.sceneBoxMax.value.copy(e.max)):(this.gtaoMaterial.needsUpdate=0===this.gtaoMaterial.defines.SCENE_CLIP_BOX,this.gtaoMaterial.defines.SCENE_CLIP_BOX=0)}updateGtaoMaterial(e){void 0!==e.radius&&(this.gtaoMaterial.uniforms.radius.value=e.radius),void 0!==e.distanceExponent&&(this.gtaoMaterial.uniforms.distanceExponent.value=e.distanceExponent),void 0!==e.thickness&&(this.gtaoMaterial.uniforms.thickness.value=e.thickness),void 0!==e.distanceFallOff&&(this.gtaoMaterial.uniforms.distanceFallOff.value=e.distanceFallOff,this.gtaoMaterial.needsUpdate=!0),void 0!==e.scale&&(this.gtaoMaterial.uniforms.scale.value=e.scale),void 0!==e.samples&&e.samples!==this.gtaoMaterial.defines.SAMPLES&&(this.gtaoMaterial.defines.SAMPLES=e.samples,this.gtaoMaterial.needsUpdate=!0),void 0!==e.screenSpaceRadius&&(e.screenSpaceRadius?1:0)!==this.gtaoMaterial.defines.SCREEN_SPACE_RADIUS&&(this.gtaoMaterial.defines.SCREEN_SPACE_RADIUS=e.screenSpaceRadius?1:0,this.gtaoMaterial.needsUpdate=!0)}updatePdMaterial(e){let t=!1;void 0!==e.lumaPhi&&(this.pdMaterial.uniforms.lumaPhi.value=e.lumaPhi),void 0!==e.depthPhi&&(this.pdMaterial.uniforms.depthPhi.value=e.depthPhi),void 0!==e.normalPhi&&(this.pdMaterial.uniforms.normalPhi.value=e.normalPhi),void 0!==e.radius&&e.radius!==this.radius&&(this.pdMaterial.uniforms.radius.value=e.radius),void 0!==e.radiusExponent&&e.radiusExponent!==this.pdRadiusExponent&&(this.pdRadiusExponent=e.radiusExponent,t=!0),void 0!==e.rings&&e.rings!==this.pdRings&&(this.pdRings=e.rings,t=!0),void 0!==e.samples&&e.samples!==this.pdSamples&&(this.pdSamples=e.samples,t=!0),t&&(this.pdMaterial.defines.SAMPLES=this.pdSamples,this.pdMaterial.defines.SAMPLE_VECTORS=(0,b.a)(this.pdSamples,this.pdRings,this.pdRadiusExponent),this.pdMaterial.needsUpdate=!0)}render(e,t,n){switch(this._renderGBuffer&&(this.overrideVisibility(),this.renderOverride(e,this.normalMaterial,this.normalRenderTarget,7829503,1),this.restoreVisibility()),this.gtaoMaterial.uniforms.cameraNear.value=this.camera.near,this.gtaoMaterial.uniforms.cameraFar.value=this.camera.far,this.gtaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.gtaoMaterial.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse),this.gtaoMaterial.uniforms.cameraWorldMatrix.value.copy(this.camera.matrixWorld),this.renderPass(e,this.gtaoMaterial,this.gtaoRenderTarget,16777215,1),this.pdMaterial.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse),this.renderPass(e,this.pdMaterial,this.pdRenderTarget,16777215,1),this.output){case M.OUTPUT.Off:break;case M.OUTPUT.Diffuse:this.copyMaterial.uniforms.tDiffuse.value=n.texture,this.copyMaterial.blending=s.NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:t);break;case M.OUTPUT.AO:this.copyMaterial.uniforms.tDiffuse.value=this.gtaoRenderTarget.texture,this.copyMaterial.blending=s.NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:t);break;case M.OUTPUT.Denoise:this.copyMaterial.uniforms.tDiffuse.value=this.pdRenderTarget.texture,this.copyMaterial.blending=s.NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:t);break;case M.OUTPUT.Depth:this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this.renderPass(e,this.depthRenderMaterial,this.renderToScreen?null:t);break;case M.OUTPUT.Normal:this.copyMaterial.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.copyMaterial.blending=s.NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:t);break;case M.OUTPUT.Default:this.copyMaterial.uniforms.tDiffuse.value=n.texture,this.copyMaterial.blending=s.NoBlending,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:t),this.blendMaterial.uniforms.intensity.value=this.blendIntensity,this.blendMaterial.uniforms.tDiffuse.value=this.pdRenderTarget.texture,this.renderPass(e,this.blendMaterial,this.renderToScreen?null:t);break;default:console.warn("THREE.GTAOPass: Unknown output type.")}}renderPass(e,t,n,i,r){e.getClearColor(this.originalClearColor);let a=e.getClearAlpha(),o=e.autoClear;e.setRenderTarget(n),e.autoClear=!1,null!=i&&(e.setClearColor(i),e.setClearAlpha(r||0),e.clear()),this.fsQuad.material=t,this.fsQuad.render(e),e.autoClear=o,e.setClearColor(this.originalClearColor),e.setClearAlpha(a)}renderOverride(e,t,n,i,r){e.getClearColor(this.originalClearColor);let a=e.getClearAlpha(),o=e.autoClear;e.setRenderTarget(n),e.autoClear=!1,i=t.clearColor||i,r=t.clearAlpha||r,null!=i&&(e.setClearColor(i),e.setClearAlpha(r||0),e.clear()),this.scene.overrideMaterial=t;let s=this.camera.layers.mask;this.camera.layers.set(0),e.render(this.scene,this.camera),this.camera.layers.mask=s,this.scene.overrideMaterial=null,e.autoClear=o,e.setClearColor(this.originalClearColor),e.setClearAlpha(a)}setSize(e,t){this.width=e,this.height=t,this.gtaoRenderTarget.setSize(e,t),this.normalRenderTarget.setSize(e,t),this.pdRenderTarget.setSize(e,t),this.gtaoMaterial.uniforms.resolution.value.set(e,t),this.gtaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.gtaoMaterial.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse),this.pdMaterial.uniforms.resolution.value.set(e,t),this.pdMaterial.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse)}overrideVisibility(){let e=this.scene,t=this._visibilityCache;e.traverse(function(e){t.set(e,e.visible),(e.isPoints||e.isLine)&&(e.visible=!1)})}restoreVisibility(){let e=this.scene,t=this._visibilityCache;e.traverse(function(e){let n=t.get(e);e.visible=n}),t.clear()}generateNoise(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:64,t=new g.L,n=new Uint8Array(e*e*4);for(let i=0;i<e;i++)for(let r=0;r<e;r++){let a=i,o=r;n[(i*e+r)*4]=(.5*t.noise(a,o)+.5)*255,n[(i*e+r)*4+1]=(.5*t.noise(a+e,o)+.5)*255,n[(i*e+r)*4+2]=(.5*t.noise(a,o+e)+.5)*255,n[(i*e+r)*4+3]=(.5*t.noise(a+e,o+e)+.5)*255}let i=new s.DataTexture(n,e,e,s.RGBAFormat,s.UnsignedByteType);return i.wrapS=s.RepeatWrapping,i.wrapT=s.RepeatWrapping,i.needsUpdate=!0,i}constructor(e,t,n,i,r,a,o){super(),this.width=void 0!==n?n:512,this.height=void 0!==i?i:512,this.clear=!0,this.camera=t,this.scene=e,this.output=0,this._renderGBuffer=!0,this._visibilityCache=new Map,this.blendIntensity=1,this.pdRings=2,this.pdRadiusExponent=2,this.pdSamples=16,this.gtaoNoiseTexture=(0,w.mK)(),this.pdNoiseTexture=this.generateNoise(),this.gtaoRenderTarget=new s.WebGLRenderTarget(this.width,this.height,{type:s.HalfFloatType}),this.pdRenderTarget=this.gtaoRenderTarget.clone(),this.gtaoMaterial=new s.ShaderMaterial({defines:Object.assign({},w.Sp.defines),uniforms:s.UniformsUtils.clone(w.Sp.uniforms),vertexShader:w.Sp.vertexShader,fragmentShader:w.Sp.fragmentShader,blending:s.NoBlending,depthTest:!1,depthWrite:!1}),this.gtaoMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.gtaoMaterial.uniforms.tNoise.value=this.gtaoNoiseTexture,this.gtaoMaterial.uniforms.resolution.value.set(this.width,this.height),this.gtaoMaterial.uniforms.cameraNear.value=this.camera.near,this.gtaoMaterial.uniforms.cameraFar.value=this.camera.far,this.normalMaterial=new s.MeshNormalMaterial,this.normalMaterial.blending=s.NoBlending,this.pdMaterial=new s.ShaderMaterial({defines:Object.assign({},b.m.defines),uniforms:s.UniformsUtils.clone(b.m.uniforms),vertexShader:b.m.vertexShader,fragmentShader:b.m.fragmentShader,depthTest:!1,depthWrite:!1}),this.pdMaterial.uniforms.tDiffuse.value=this.gtaoRenderTarget.texture,this.pdMaterial.uniforms.tNoise.value=this.pdNoiseTexture,this.pdMaterial.uniforms.resolution.value.set(this.width,this.height),this.pdMaterial.uniforms.lumaPhi.value=10,this.pdMaterial.uniforms.depthPhi.value=2,this.pdMaterial.uniforms.normalPhi.value=3,this.pdMaterial.uniforms.radius.value=8,this.depthRenderMaterial=new s.ShaderMaterial({defines:Object.assign({},w.gs.defines),uniforms:s.UniformsUtils.clone(w.gs.uniforms),vertexShader:w.gs.vertexShader,fragmentShader:w.gs.fragmentShader,blending:s.NoBlending}),this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this.copyMaterial=new s.ShaderMaterial({uniforms:s.UniformsUtils.clone(y.C.uniforms),vertexShader:y.C.vertexShader,fragmentShader:y.C.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blendSrc:s.DstColorFactor,blendDst:s.ZeroFactor,blendEquation:s.AddEquation,blendSrcAlpha:s.DstAlphaFactor,blendDstAlpha:s.ZeroFactor,blendEquationAlpha:s.AddEquation}),this.blendMaterial=new s.ShaderMaterial({uniforms:s.UniformsUtils.clone(w.mF.uniforms),vertexShader:w.mF.vertexShader,fragmentShader:w.mF.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blending:s.CustomBlending,blendSrc:s.DstColorFactor,blendDst:s.ZeroFactor,blendEquation:s.AddEquation,blendSrcAlpha:s.DstAlphaFactor,blendDstAlpha:s.ZeroFactor,blendEquationAlpha:s.AddEquation}),this.fsQuad=new x.T(null),this.originalClearColor=new s.Color,this.setGBuffer(r?r.depthTexture:void 0,r?r.normalTexture:void 0),void 0!==a&&this.updateGtaoMaterial(a),void 0!==o&&this.updatePdMaterial(o)}}M.OUTPUT={Off:-1,Default:0,Diffuse:1,Depth:2,Normal:3,AO:4,Denoise:5};var F=n(40069);class C extends u.C{render(e,t,n,i,r){var a;if(null===(a=this.onBeforeRender)||void 0===a||a.call(this),this.disableBackground){let a=this.scene.background;this.scene.background=null,super.render(e,t,n,i,r),this.scene.background=a}else super.render(e,t,n,i,r)}constructor(...e){super(...e),this.onBeforeRender=null,this.disableBackground=!1}}function S(){let{ref:e}=(0,a.sv)(function*(e){let t=function(e){let{width:t=window.innerWidth,height:n=window.innerHeight}=e,i=new s.WebGLRenderer({});i.setSize(t,n),i.setPixelRatio(window.devicePixelRatio);let r=new s.PerspectiveCamera(75,t/n,.1,1e3);r.position.z=8,new l.z(r,i.domElement);let a=new m.vB().set({activeDuration:30}),o=(0,v.s)(()=>a.requestActivation()),u=function(e){let t=new s.Scene;{let e=new s.DirectionalLight(16777215,1);e.position.set(0,3,1),t.add(e);let n=new s.HemisphereLight("#afdbf5","#845244",1);t.add(n)}new F.x().setPath("https://threejs.org/examples/textures/equirectangular/").loadAsync("pedestrian_overpass_1k.hdr").then(e=>{e.mapping=s.EquirectangularReflectionMapping,t.environmentIntensity=.1,t.environment=e,t.backgroundBlurriness=.5,t.background=e});let n=new s.Mesh(new s.TorusKnotGeometry(2,1,512,64),new s.MeshPhysicalMaterial);t.add(n);let i=new s.Mesh(new s.BoxGeometry(10,1,3),new s.MeshPhysicalMaterial);t.add(i);let r=new s.Mesh(new s.BoxGeometry(1,10,3),new s.MeshPhysicalMaterial);r.position.set(5,0,0),t.add(r);let a=new s.Mesh(new s.PlaneGeometry(10,10),new s.MeshPhysicalMaterial({color:"#d1ddff",transmission:1,roughness:0,dispersion:.1,ior:2.5,opacity:1}));return a.layers.set(1),t.add(a),e.onTick(e=>{n.rotation.x+=.5*e.deltaTime,n.rotation.y+=.5*e.deltaTime}),t}(a),g=new c.x(i),x=new C(u,r);x.onBeforeRender=()=>{r.layers.enableAll()},g.addPass(x);let y=new M(u,r,t,n);g.addPass(y);let w=new d.v;g.addPass(w);let b=new h.T(f.C);b.material.uniforms.resolution.value.set(1/t,1/n),g.addPass(b),a.onTick(()=>{g.render()}),p.v.on("REQUIRE:THREE",e=>{e.payload={three:S}});let S={renderer:i,camera:r,scene:u,ticker:a,passes:{render:x,ao:y,output:w},destroy:()=>{i.domElement.remove(),a.destroy(),o.destroy()}};return S}({width:e.clientWidth,height:e.clientHeight});yield t,Object.assign(window,{three:t}),e.appendChild(t.renderer.domElement)},[]);return(0,i.jsx)("div",{ref:e,className:"absolute inset-0"})}function P(){let[e,t]=(0,r.useState)(!0);return(0,i.jsxs)("div",{className:"page",children:[(0,i.jsx)(S,{}),(0,i.jsxs)("div",{className:"absolute inset-0 p-8 flex flex-col items-start justify-start pointer-through",children:[(0,i.jsxs)("div",{className:"flex flex-col items-start justify-start pointer-through max-w-[480px]",children:[(0,i.jsx)("h1",{className:"text-4xl uppercase",children:"ao-transparent"}),(0,i.jsx)("div",{className:"mt-4"}),(0,i.jsx)("p",{children:"Handling Ambient Occlusion and transparent objects"}),(0,i.jsx)("p",{children:"The glass does not generate AO"}),(0,i.jsx)("div",{className:"mt-4"}),(0,i.jsxs)("p",{children:["This is achieved by using a fork of the ",(0,i.jsx)("a",{href:"https://github.com/mrdoob/three.js/blob/master/examples/jsm/postprocessing/GTAOPass.js",children:"GTAOPass"}),"\xa0where the camera layer mask is set to 0 (default layer) and the glass object is set to layer 1 (transparent objects)."]}),(0,i.jsx)("div",{className:"mt-4"}),(0,i.jsxs)("div",{children:[(0,i.jsx)("h2",{className:"text-xl",children:"Pros:"}),(0,i.jsx)("ul",{children:(0,i.jsx)("li",{children:"Simple (layer based)"})})]}),(0,i.jsx)("div",{className:"mt-4"}),(0,i.jsxs)("div",{children:[(0,i.jsx)("h2",{className:"text-xl",children:"Cons:"}),(0,i.jsx)("ul",{children:(0,i.jsx)("li",{children:"AO is still rendered on top of transparent objects. For semi-opaque objects, this is could be a problem."})})]})]}),(0,i.jsx)("div",{className:"mt-4"}),(0,i.jsxs)("div",{className:"flex flex-row gap-2",children:[(0,i.jsx)("label",{htmlFor:"ao-enabled",className:"select-none",children:"Enable AO"}),(0,i.jsx)("input",{type:"checkbox",name:"ao-enabled",id:"ao-enabled",checked:e,onChange:()=>{let{payload:e}=o.v.send("REQUIRE:THREE");if(e){let{three:n}=e,{passes:i}=n,{ao:r}=i;r.enabled=!r.enabled,t(r.enabled)}}})]})]})]})}},49004:function(e,t,n){"use strict";n.d(t,{Art:function(){return j}});var i,r,a,o,s=n(78485),l=n(74831),c=n(12144),d=n(48583),u=n(77405),h=n(54422),f=n(79509),p=n(9710),m=n(98579),v=n(52471),g=n(55445),x=n(55440),y=n(82048),w=n(19687),b=n(28954),M=n(32423),F=n(63425),C=n(58152),S=n(1060);function P(){let{ref:e}=(0,d.Nv)(function*(e){let t=function(e){let{width:t=window.innerWidth,height:n=window.innerHeight,pixelRatio:i=window.devicePixelRatio}=e;i=1;let r=new v.WebGLRenderer({antialias:!0});r.setSize(t,n),r.setPixelRatio(i);let a=new v.PerspectiveCamera(75,t/n,.1,1e3);a.position.z=4.7,a.near=a.position.z-2.4,a.far=a.position.z+1,a.updateProjectionMatrix();let o=new v.Scene,s=new v.Group;o.add(s);let l=new v.TorusKnotGeometry(2,1.02,1024,512),c=new v.TorusKnotGeometry(2,.9,1024,512);c.computeBoundingSphere(),c.computeBoundingBox();let d=new v.Mesh(l,new v.MeshBasicMaterial({color:16776960,side:v.DoubleSide}));s.add(d);let u=new v.Mesh(new v.TorusKnotGeometry(2,.25,1024,512),new v.MeshBasicMaterial({color:16711935,side:v.DoubleSide}));d.add(u);let f=new v.Mesh(new v.TorusKnotGeometry(2,.35,1024,512),new v.MeshBasicMaterial({color:16711935,side:v.DoubleSide}));d.add(f);let m={camera:a,knotWrapper:s,knot:d,knotGeometry1:l,knotGeometry2:c},P=new v.WebGLRenderTarget(t*i,n*i,{depthBuffer:!0,depthTexture:new v.DepthTexture(t*i,n*i,v.UnsignedShortType)});function A(e){let{r:t,g:n,b:i}=new v.Color(e);return"vec3(".concat(t.toFixed(3),", ").concat(n.toFixed(3),", ").concat(i.toFixed(3),")")}let T=new v.ShaderMaterial({uniforms:{depthTexture:{value:P.depthTexture},cameraNear:{value:a.near},cameraFar:{value:a.far}},vertexShader:"\n      varying vec2 vUv;\n  \n      void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      }\n    ",fragmentShader:"\n      ".concat(C.g,"\n      ").concat(S.i,"\n  \n      vec3[] COLORS = vec3[](\n        aliceblue,\n        ").concat(A("#471864"),",\n        aqua,\n        aquamarine,\n        ").concat(A("#c8d50d"),"\n      );\n      int COLORS_COUNT = 5;\n  \n      uniform sampler2D depthTexture;\n      uniform float cameraNear;\n      uniform float cameraFar;\n      varying vec2 vUv;\n  \n      float lines(float x) {\n        // Inside your fragment shader\n        float lineWidth = 0.03; // Adjust line width to what you need\n        float edgeSmoothness = 0.01; // Controls the smooth transition around the line edge\n  \n        // Get the position in the UV space (assuming you're using UV coordinates)\n  \n  \n        // Calculate the fract values to simulate lines\n        float linePattern = 1.0 - fract(x * 20.0); // 10.0 determines the spacing of the lines\n  \n        // Use smoothstep to soften the edge of the line\n        float line = smoothstep(lineWidth - edgeSmoothness, lineWidth + edgeSmoothness, linePattern);\n  \n        return line;\n      }\n  \n      vec3 removeGamma(vec3 color) {\n        return pow(color, vec3(2.2));  // Linearize color\n      }\n  \n      vec3 applyGamma(vec3 color) {\n        return pow(color, vec3(1.0 / 2.2));  // Apply gamma\n      }\n  \n      float linearizeDepth(float depth) {\n        float z = depth * 2.0 - 1.0; // Back to NDC\n        return (2.0 * cameraNear * cameraFar) / (cameraFar + cameraNear - z * (cameraFar - cameraNear));\n      }\n  \n      void main() {\n        float depth = texture2D(depthTexture, vUv).r;\n        float linearDepth = linearizeDepth(depth);\n        // gl_FragColor = vec4(vec3(linearDepth), 1.0);\n        // gl_FragColor = vec4(vec3(depth), 1.0);\n        // gl_FragColor = vec4(vUv, 1.0, 1.0);\n  \n        float x = 1.0 - depth;\n        x *= float(COLORS_COUNT);\n        float f = 1.0 - fract(x);\n        int i = int(floor(x));\n        vec3 color1 = COLORS[i];\n        vec3 color2 = COLORS[(i + COLORS_COUNT - 1) % COLORS_COUNT];\n  \n        vec3 color = mix(color1, color2, easeInOut4(f));\n        // color *= mix(0.8, 1.1, f * f * f);\n  \n        color = 1.0 - color;\n  \n        gl_FragColor.a = 1.0;\n        gl_FragColor.rgb = color;\n        // gl_FragColor.rgb *= lines(depth);\n      }\n    ")}),D=new v.PlaneGeometry(2,2),R=new v.Mesh(D,T),z=new v.OrthographicCamera(-1,1,1,-1,0,1),E=new g.x(r),k=new y.C(R,z);E.addPass(k);let B=new w.T(b.C);B.material.uniforms.resolution.value.set(1/t,1/n),E.addPass(B);let _=new x.v;E.addPass(_);let U=p.vB.current();function j(){r.dispose(),r.domElement.remove(),P.dispose(),E.dispose(),U.destroy()}return U.set({activeDuration:60}),U.onTick(e=>{F.fw.core.updateInstances(e.deltaTime),r.setRenderTarget(P),r.render(o,a),r.setRenderTarget(null),E.render()}),{renderer:r,scene:o,camera:a,artParts:m,resize:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:window.devicePixelRatio;r.setSize(e,t),r.setPixelRatio(n),a.aspect=e/t,a.updateProjectionMatrix(),P.setSize(e*n,t*n),E.setSize(e,t),E.setPixelRatio(n),B.material.uniforms.resolution.value.set(1/e,1/t)},init:function*(){yield(0,M.s)(U.requestActivation),yield j,yield h.v.on("REQUIRE:ART_PARTS",e=>{e.payloadAssign(m)})},destroy:j}}({width:e.clientWidth,height:e.clientHeight});yield*t.init(),e.appendChild(t.renderer.domElement),yield(0,c.f)(e,{onSize:e=>{t.resize(e.size.x,e.size.y)}}),yield()=>t.renderer.domElement.remove()},[]);return(0,s.jsx)("div",{ref:e,className:"absolute inset-0"})}var A=n(28142),T=n(27275);let D=["#452E00","#F8FEF0","#FF0000","#BC0172","#AE9DFF"];function R(){return{lineShapeObs:new f.Observable("circle")}}function z(){let{ref:e}=(0,d.Nv)(function*(e){let t=e.querySelector("circle"),n=new f.ObservableNumber(0);yield n.onPass("through",5,()=>{n.passed("above",5)?(F.fw.during({target:"CallToAction:Fade",duration:1}).onUpdate(t=>{let{progress:n}=t,i=F.fw.ease("out3")(n);e.setAttribute("opacity",i.toFixed(3))}),F.fw.during({target:"CallToAction:Scale",duration:3}).onUpdate(e=>{let{progress:n,complete:i}=e;n=i?1:2*n%1;let r=F.fw.ease("out3")(n),a=Math.sin(r*Math.PI);t.setAttribute("opacity",a.toFixed(3)),t.setAttribute("r",(0,u.t7)(200,300,r).toFixed(3))})):F.fw.during({target:"CallToAction:Fade",duration:.2}).onUpdate(t=>{let{progress:n}=t,i=F.fw.ease("inOut3")(n);e.setAttribute("opacity",(1-i).toFixed(3))})}),yield(0,l.w)(document.documentElement,{onChange:()=>{n.set(0)},onDown:()=>{n.set(0)}}),yield p.vB.current().onTick(e=>{n.increment(e.deltaTime),n.passed("above",15)&&n.set(0)})},[]);return(0,s.jsx)("g",{ref:e,children:(0,s.jsx)("circle",{r:150,fill:"none",stroke:"white",strokeWidth:1.5,opacity:0})})}function E(){let e=(0,T.useMemo)(R,[]),{ref:t}=(0,d.Nv)(function*(t){let n=t.querySelector("svg"),i=[...n.querySelectorAll("circle")],r=[...n.querySelectorAll("polygon")];yield h.v.on("REQUIRE:ART_PARTS",t=>{t.payloadAssign(e)});let{lineShapeObs:a}=e;a.onChange({executeImmediately:!0},e=>{"circle"===e?(n.querySelector(".rectangles").setAttribute("style","display: none"),n.querySelector(".circles").removeAttribute("style")):(n.querySelector(".rectangles").removeAttribute("style"),n.querySelector(".circles").setAttribute("style","display: none"))});let o=new f.ObservableNumber(0),s=new f.ObservableNumber(120),c=new v.Vector2,d=i.map(()=>new v.Vector2);yield(0,l.w)(document.documentElement,{onChange:e=>{},onDrag:e=>{let{x:n,y:i}=e.position,r=t.getBoundingClientRect();c.x=(0,u.a2)(n,r.left,r.right,-512,512),c.y=(0,u.a2)(i,r.top,r.bottom,-512,512)},onDown:()=>{o.set(0),s.set(84),c.set(0,0);for(let e=0;e<20;e++)d[e].copy(c)}}),yield p.vB.current().onTick(e=>{o.increment(e.deltaTime);let t=o.get(),n=t<1?120:0,a=t<1?.999:(0,u.a2)(t,1,2,0,.9);s.exponentialGrow(n,[a,.2],e.deltaTime);for(let e=0;e<20;e++){let t=i[e],n=d[e];n.lerp(0===e?c:d[e-1],.1),t.setAttribute("cx",n.x.toString()),t.setAttribute("cy",n.y.toString()),t.setAttribute("stroke-width",s.get().toFixed(3));let a=r[e];a.setAttribute("transform","translate(".concat(n.x,",").concat(n.y,")")),a.setAttribute("stroke-width",s.get().toFixed(3))}})},[20]);return(0,s.jsx)("div",{ref:t,className:"absolute inset-0",children:(0,s.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"-512 -512 1024 1024",className:"w-full h-full",children:[(0,s.jsx)("g",{className:"circles",style:{display:e.lineShapeObs.is("circle")?"":"none"},children:Array.from({length:20}).map((e,t)=>(0,s.jsx)("circle",{cx:"0",cy:"0",r:120*(.99*t+.25),fill:"none",stroke:D[(t+1)%D.length],strokeWidth:120},t))}),(0,s.jsx)("g",{className:"rectangles",style:{display:e.lineShapeObs.is("rectangle")?"":"none"},children:Array.from({length:20}).map((e,t)=>{A.T.seed(t+4);let n=(t+.25)*238;return(0,s.jsx)("polygon",{points:function(){let{cx:e=0,cy:t=0,r:n=1,count:i=3,turnOffset:r=0}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=[];for(let o=0;o<i;o++){let s=(o/i+r)*Math.PI*2,l=e+n*Math.cos(s),c=t+n*Math.sin(s);a.push("".concat(l.toFixed(3),",").concat(c.toFixed(3)))}return a.join(" ")}({count:4,r:n*Math.SQRT1_2}),fill:"none",stroke:A.T.pick(D,null,{indexOffset:1}),strokeWidth:120},t)})}),(0,s.jsx)(z,{})]})})}(i=a||(a={})).Circle="circle",i.Rectangle="rectangle";var k=n(3017),B=n.n(k);function _(){return(0,d.sv)(function*(){let e=h.v.send("REQUIRE:ART_PARTS").payload,{camera:t,knotWrapper:n,knot:i,lineShapeObs:r}=e;Object.assign(window,{artParts:e});let o=new f.Observable(0);yield(0,l.w)(document.documentElement,{onDown:e=>{o.set((o.get()+1)%3)}}),o.onChange(t=>{switch(r.set(r.get()===a.Circle?a.Rectangle:a.Circle),t){case 0:i.geometry=e.knotGeometry1;break;case 1:{let t=Math.random()*Math.PI*.4;i.geometry=e.knotGeometry2,i.rotation.x+=t,i.rotation.y+=t,i.rotation.z+=t;break}case 2:i.geometry=e.knotGeometry2}}),yield p.vB.current().onTick(e=>{switch(o.value){case 0:{i.rotation.x=0,i.rotation.y=0,i.rotation.z+=.033*e.deltaTime;let r=(0,u.lw)(.05*e.time),a=(0,u.t7)(.9,1.1,r);n.scale.set(a,a,1),t.position.z=(0,u.t7)(4.9,4.7,r);break}case 1:i.rotation.x+=.05*e.deltaTime,i.rotation.y+=.05*e.deltaTime,i.rotation.z+=.0166*e.deltaTime,n.scale.set(1.4,1.4,1),t.position.z=4.5;break;case 2:i.rotation.x+=-.05*e.deltaTime,i.rotation.y+=-.05*e.deltaTime,i.rotation.z+=.05*e.deltaTime,n.scale.set(1.8,1.8,2),t.position.z=-1}})},[]),(0,s.jsxs)("div",{className:B().Art,children:[(0,s.jsx)(P,{}),(0,s.jsx)(E,{})]})}function U(){let{ref:e}=(0,d.Nv)(function*(e){yield(0,c.f)(document.documentElement,{onSize:t=>{let{size:{x:n,y:i}}=t;!1==n>i?e.style.display="none":e.style.display=""}});let t=new f.ObservableNumber(0);yield p.vB.current().onTick(n=>{t.increment(n.deltaTime),e.classList.toggle(B().hidden,t.get()>1)}),yield(0,l.w)(document.documentElement,{onDown:()=>{t.set(0)},onChange:()=>{t.set(0)}})},[]);return(0,s.jsx)("div",{ref:e,className:"".concat(B().Caption," pointer-through"),children:(0,s.jsxs)("div",{className:"flex flex-row items-center",children:[(0,s.jsxs)("span",{children:["Press ",(0,s.jsx)("kbd",{style:{color:D[3]},children:"F"})," to toggle fullscreen."]}),(0,s.jsx)("span",{className:B().Github,style:{color:D[2]},children:(0,s.jsx)("a",{href:"https://github.com/jniac/three-xp",children:"Github"})}),(0,s.jsx)("span",{className:B().Close,style:{color:D[4]},onPointerDown:t=>{"A"!==t.target.tagName&&(t.preventDefault(),t.stopPropagation(),e.current.style.display="none")}})]})})}function j(){return(0,s.jsxs)("div",{children:[(0,s.jsx)(m.V,{children:(0,s.jsx)(_,{})}),(0,s.jsx)("div",{className:"absolute-through",children:(0,s.jsx)(U,{})})]})}(r=o||(o={}))[r.Static=0]="Static",r[r.Rotating=1]="Rotating",r[r.RotatingCloseUp=2]="RotatingCloseUp"},31458:function(e,t,n){"use strict";n.d(t,{Main:function(){return N}});var i=n(78485),r=n(98579),a=n(91659),o=n(52471),s=n(47174),l=n(15979),c=n(1060),d=n(77405),u=n(28142),h=n(96966),f=n(73899);let p=new(n(40069)).x;function m(e){return new Promise(t=>{p.load(e,e=>{t(e)})})}let v=new f.I;var g=n(70155);let x="\n\nstruct FloatRamp {\n  float a;\n  float b;\n  float t;\n};\n\nstruct Vec2Ramp {\n  vec2 a;\n  vec2 b;\n  float t;\n};\n\nstruct Vec3Ramp {\n  vec3 a;\n  vec3 b;\n  float t;\n};\n\nstruct Vec4Ramp {\n  vec4 a;\n  vec4 b;\n  float t;\n};\n\n".concat((0,g.C)("vecX",e=>{let t=e[0].toUpperCase()+e.slice(1)+"Ramp";return"\n\n".concat(t," ramp(float t, T a, T b) {\n  return ").concat(t,"(a, b, t);\n}\n\n").concat(t," ramp(float t, T a, T b, T c) {\n  if (t < .5) {\n    return ").concat(t,"(a, b, t * 2.0);\n  } else {\n    return ").concat(t,"(b, c, (t - 0.5) * 2.0);\n  }\n}\n\n").concat(t," ramp(float t, T a, T b, T c, T d) {\n  if (t < .33) {\n    return ").concat(t,"(a, b, t * 3.0);\n  } else if (t < .66) {\n    return ").concat(t,"(b, c, (t - 0.33) * 3.0);\n  } else {\n    return ").concat(t,"(c, d, (t - 0.66) * 3.0);\n  }\n}\n\n").slice(1,-1)})),y="\n#ifndef GLSL_RAMP\n#define GLSL_RAMP\n".concat(c.i,"\n").concat(x,"\n#endif\n"),w={white:new o.Color("#ffffff"),grey10:new o.Color("#f0f0f0"),grey20:new o.Color("#e0e0e0"),notSoWhite:new o.Color("#f8f8e8"),yellow:new o.Color("#fff700"),black:new o.Color("#110111"),red:new o.Color("#dd1a41"),brightSkin:new o.Color("#ebd8c6"),petrol:new o.Color("#005e6b"),brightGreen:new o.Color("#22c891"),darkGreen:new o.Color("#002f1c"),sand:new o.Color("#e6db9f")};class b extends o.Mesh{static createMaterial(e){let{color:t,shaded:n,emissiveIntensity:i,side:r}={...b.defaultProps,...e};return n?new o.MeshPhysicalMaterial({color:t,emissiveIntensity:i,emissive:i>0?t:void 0,side:r}):new o.MeshBasicMaterial({color:t})}}b.defaultProps={color:w.black,radius:1.3,align:.5,thickness:.3,innerRadiusRatio:null,shaded:!0,emissiveIntensity:.333};class M extends b{constructor(e){let{radius:t,thickness:n,align:i,innerRadiusRatio:r,color:a,shaded:s,...c}={...b.defaultProps,...e},d=t-n*i,u=t+n*(1-i);r&&(d=t*r,u=t),super(new o.RingGeometry(d,u,128),b.createMaterial({...e,side:o.DoubleSide})),(0,l.N)(this,c)}}class F extends o.Mesh{constructor(e){let{radius:t,thickness:n,align:i,innerRadiusRatio:r,color:a,shaded:s,emissiveIntensity:c,...d}={...b.defaultProps,...e},u=t-n*i,h=t+n*(1-i);r&&(u=t*r,h=t),super(new o.TorusGeometry((u+h)/2,(h-u)/2,128,512),b.createMaterial({...e,side:o.FrontSide})),(0,l.N)(this,d)}}class C extends M{constructor(e){super(e),this.material.onBeforeCompile=e=>s.b.with(e).defines({USE_UV:""}).fragment.top(y).fragment.after("map_fragment","\n      vec2 p = vUv - 0.5;\n      float alpha = atan(p.y, p.x) / 6.2831853;\n      alpha = 1.0 - mod(alpha + 0.0, 1.0);\n      Vec3Ramp r = ramp(alpha,\n        ".concat((0,s.R)(w.black),",\n        ").concat((0,s.R)(w.white),",\n        ").concat((0,s.R)(w.yellow),");\n      diffuseColor.rgb = mix(r.a, r.b, easeInOut4(r.t));\n    "))}}class S extends o.Line{constructor(e,t){let n=new o.BufferGeometry;n.setAttribute("position",new o.Float32BufferAttribute([1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),n.computeBoundingSphere(),super(n,new o.LineBasicMaterial({fog:!1})),this.light=e,this.color=t,this.type="RectAreaLightHelper";let i=new o.BufferGeometry;i.setAttribute("position",new o.Float32BufferAttribute([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),i.computeBoundingSphere(),this.add(new o.Mesh(i,new o.MeshBasicMaterial({side:o.BackSide,fog:!1})))}updateMatrixWorld(){if(this.scale.set(.5*this.light.width,.5*this.light.height,1),void 0!==this.color)this.material.color.set(this.color),this.children[0].material.color.set(this.color);else{this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);let e=this.material.color,t=Math.max(e.r,e.g,e.b);t>1&&e.multiplyScalar(1/t),this.children[0].material.color.copy(this.material.color)}this.matrixWorld.extractRotation(this.light.matrixWorld).scale(this.scale).copyPosition(this.light.matrixWorld),this.children[0].matrixWorld.copy(this.matrixWorld)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}class P extends o.Group{constructor({globalIntensity:e=1,debug:t=!1}={}){super(),this.name="lights";let n=new o.HemisphereLight("#dbebf0","#645d61",e);this.add(n);let i=new o.RectAreaLight("#e8e6d3",1.3*e);i.position.set(10,10,10),i.width=40,i.height=40,i.lookAt(0,0,0),this.add(i),t&&this.add(new S(i));let r=new o.AmbientLight("#f2f0dd",.8*e);this.add(r)}}function A(e){let{precision:t=3}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=0,i=0,r=0;function a(){return"vec3(".concat(n.toFixed(t),", ").concat(i.toFixed(t),", ").concat(r.toFixed(t),")")}switch(typeof e){case"number":return n=(e>>16&255)/255,i=(e>>8&255)/255,r=(255&e)/255,a();case"string":if(e.startsWith("#")){if(4===e.length)return n=parseInt(e[1]+e[1],16)/255,i=parseInt(e[2]+e[2],16)/255,r=parseInt(e[3]+e[3],16)/255,a();return A(parseInt(e.slice(1),16),{precision:t})}throw Error("Invalid string: ".concat(e));case"object":if(Array.isArray(e))return[n,i,r]=e,a();if("r"in e)return n=e.r,i=e.g,r=e.b,a();if("x"in e)return n=e.x,i=e.y,r=e.z,a();throw Error("Invalid object: ".concat(e))}return"vec3(1.0, 0.0, 1.0)"}d.UM;let T="\n  ".concat(o.ShaderChunk.cube_uv_reflection_fragment,"\n  ").concat("\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex \n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20201014 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+10.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\n\n\n\n\n// 2D:\n\nvec3 mod289_2d(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289_2d(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute_2d(vec3 x) {\n  return mod289(((x*34.0)+10.0)*x);\n}\n\n\nfloat snoise(vec2 v) {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289_2d(i); // Avoid truncation effects in permutation\n  vec3 p = permute_2d( permute_2d( i.y + vec3(0.0, i1.y, 1.0 ))\n		+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n// 3D: \n\nfloat snoise(vec3 v)\n{ \n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n  // First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n  // Permutations\n  i = mod289(i); \n  vec4 p = permute( permute( permute( \n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n  //Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n  // Mix final noise value\n  vec4 m = max(0.5 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 105.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \n                                dot(p2,x2), dot(p3,x3) ) );\n}\n","\n\n  varying vec3 vPosition;\n  varying vec3 vWorldNormal;\n\n  struct Plane {\n    vec3 origin;\n    vec3 normal;\n  };\n\n  float signedDistanceToPlane(Plane plane, vec3 p) {\n    return dot(plane.normal, p - plane.origin);\n  }\n\n  vec3 checker3(vec3 position, float scale, float edgeWidth, vec3 color1, vec3 color2) {\n    // Scale the position to control the size of the checker cubes\n    vec3 scaledPos = position / scale;\n\n    // Get the integer part (checker grid location)\n    vec3 checkerPos = floor(scaledPos);\n\n    // Get the fractional part (inside each cube)\n    vec3 fractPos = fract(scaledPos);\n\n    // Calculate the checkerboard pattern (even/odd cubes)\n    float checkerSum = mod(checkerPos.x + checkerPos.y + checkerPos.z, 2.0);\n\n    // Smooth transition using smoothstep on the fractional position\n    float edgeX = smoothstep(0.0, edgeWidth, fractPos.x);\n    float edgeY = smoothstep(0.0, edgeWidth, fractPos.y);\n    float edgeZ = smoothstep(0.0, edgeWidth, fractPos.z);\n\n    // Combine the edges to create a smooth transition\n    float blend = edgeX * edgeY * edgeZ;\n    blend = smoothstep(0.0, edgeWidth, min(min(fractPos.x, fractPos.y), fractPos.z));\n    \n    // Interpolate between black and white with the smoothstep value\n    vec3 baseColor = checkerSum == 0.0 ? color1 : color2;\n    vec3 oppositeColor = checkerSum == 0.0 ? color2 : color1;\n\n    // Use the smooth transition to blend between colors\n    return mix(baseColor, oppositeColor, blend);\n  }\n\n  float sphereGrid(vec3 position, float scale, float edgeWidth) {\n    // Scale the position to control the size of the checker cubes\n    vec3 scaledPos = position / scale;\n\n    // Get the integer part (checker grid location)\n    vec3 checkerPos = floor(scaledPos);\n\n    // Get the fractional part (inside each cube)\n    vec3 fractPos = fract(scaledPos);\n\n    vec3 p = fractPos - 0.5;\n    float alpha = 1.0 - length(p) * 2.0;\n\n    return smoothstep(0.0, edgeWidth, alpha - 0.1);    \n  }\n\n  void main() {\n    vec3 p = vWorldNormal * 0.33;\n    float n1 = snoise(p * 6.0 * 0.2 + 0.2);\n    float n2 = snoise(p * 20.0 + 10.1);\n    float n3 = snoise(p * 40.0 + 10.1);\n    float n4 = snoise(p * 1400.0 + 13.1);\n    float n = n1 * 0.5;\n    n += pow(fract((n1 + n2 * 0.015 + n3 * 0.01 + n4 * 0.005) * 85.0), 4.0) * 0.5;\n    n += pow(fract((n1 + n2 * 0.015) * 85.0), 4.0) * 0.25;\n    n += n4 * 0.2;\n    n += 0.8;\n    n = pow(n, 0.3);\n    float alpha = n;\n\n    gl_FragColor.rgb = mix(").concat(A(w.white),", ").concat(A(w.brightSkin),", alpha);\n    gl_FragColor.a = 1.0;\n\n    // float x = sphereGrid(vPosition, 1.0, 0.01);\n    // gl_FragColor.rgb = mix(").concat(A(w.black),", ").concat(A(w.brightSkin),", x);\n    // gl_FragColor.rgb = checker3(vPosition, 1.0, 0.1, ").concat(A(w.black),", ").concat(A(w.brightSkin),");\n  }\n");class D extends o.Mesh{constructor({debug:e=!1}={}){super(new o.IcosahedronGeometry(5.5,12),new o.ShaderMaterial({depthWrite:!1,side:o.BackSide,vertexShader:"\n  varying vec3 vWorldNormal;\n  varying vec3 vPosition;\n\n  vec3 rotate(mat4 m, vec3 v) {\n    return vec3(\n      dot(v, vec3(m[0][0], m[1][0], m[2][0])),  // X component\n      dot(v, vec3(m[0][1], m[1][1], m[2][1])),  // Y component\n      dot(v, vec3(m[0][2], m[1][2], m[2][2]))   // Z component\n    );\n  }\n\n  void main() {\n    vPosition = position;\n    vWorldNormal = normalize(rotate(modelMatrix, position));\n\n    // gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    // Ignore the position, we only need the normal:\n    gl_Position = projectionMatrix * vec4(rotate(modelViewMatrix, position), 1.0);\n  }\n",fragmentShader:T,uniforms:{}})),e&&(this.material=new o.MeshBasicMaterial({depthWrite:!1,color:"white",wireframe:!0})),this.onBeforeRender=(e,t,n,i,r,a)=>{this.position.copy(n.position)},this.renderOrder=-1,this.frustumCulled=!1,this.name="a-sky"}}var R=n(98828);class z extends o.Mesh{constructor(e){let{radius:t,...n}={...z.defaultProps,...e},i=new o.IcosahedronGeometry(t,18),r=new o.MeshPhysicalMaterial({});r.onBeforeCompile=e=>s.b.with(e).defines({USE_UV:""}).fragment.top(y).fragment.after("map_fragment","\n        vec2 p = vUv - 0.5;\n        float alpha = easeInOut(vUv.y, 1.6, 0.5);\n        Vec3Ramp r = ramp(alpha, ".concat((0,s.R)(w.black),", ").concat((0,s.R)(w.white),", ").concat((0,s.R)(w.yellow),");\n        diffuseColor.rgb = mix(r.a, r.b, easeInOut3(r.t));\n      ")),super(i,r),(0,l.N)(this,n)}}z.defaultProps={radius:1};class E{set(e){this.props={...this.props,...e},this.props.center=this.props.center.clone(),this.props.normal=this.props.normal.clone().normalize(),this.props.binormal=this.props.binormal.clone().normalize()}update(e){let{radius:t,turnVelocity:n,turn:i,center:r,normal:a,binormal:o}=this.props,s=i+n*e;this.props.turn=s,this.target.position.copy(r).addScaledVector(a,t*Math.cos(s*Math.PI*2)).addScaledVector(o,t*Math.sin(s*Math.PI*2))}constructor(e,t){this.target=e,this.set({...E.defaultProps,...t})}}E.defaultProps={center:new o.Vector3,normal:new o.Vector3(1,0,0),binormal:new o.Vector3(0,1,0),radius:1,turnVelocity:1,turn:0};class k extends o.Mesh{get satellite(){var e;return null!==(e=this._satellite)&&void 0!==e?e:this._satellite=new E(this)}constructor(e){let{radius:t,singleColor:n,emmissiveIntensity:i,lerpIn:r,lerpOut:a,...d}={...k.defaultProps,...e},{colorTop:u=null!=n?n:k.defaultProps.colorTop,colorBottom:h=null!=n?n:k.defaultProps.colorBottom}={...e},f=new o.IcosahedronGeometry(t,12),p=new o.MeshPhysicalMaterial({color:u,emissive:h});p.onBeforeCompile=e=>{s.b.with(e).defines({USE_UV:""}).uniforms({uLerpIn:{value:r},uLerpOut:{value:a},uColorTop:{value:new o.Color(u)},uColorBottom:{value:new o.Color(h)}}).fragment.top(c.i,R.U).fragment.mainBeforeAll("\n          float alpha = inverseLerp(uLerpIn, uLerpOut, vUv.y);\n          vec3 sphereColor = mix(uColorBottom, uColorTop, easeInOut3(alpha));\n        ").fragment.after("map_fragment","\n          diffuseColor.rgb = sphereColor;\n        ").fragment.after("emissivemap_fragment","\n          totalEmissiveRadiance.rgb = sphereColor * ".concat(i.toFixed(2),";\n        "))},super(f,p),this._satellite=null,(0,l.N)(this,d)}}k.defaultProps={radius:.225,singleColor:null,colorTop:w.white,colorBottom:w.yellow,emmissiveIntensity:.25,lerpIn:-.2,lerpOut:1.2};class B extends o.Mesh{constructor(e){let t=new o.IcosahedronGeometry(.4,12),n=new o.MeshPhysicalMaterial({});n.onBeforeCompile=e=>s.b.with(e).varying({vWorldPosition:"vec3",vNormalWorld:"vec3",vViewDir:"vec3"}).vertex.mainAfterAll("\n        vWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;\n        vNormalWorld = normalize(mat3(modelMatrix) * normal);\n        vViewDir = normalize(cameraPosition - vWorldPosition);\n      ").fragment.top(c.i,"\n\nfloat contrast(float mValue, float mScale, float mMidPoint) {\n	// Why clamp? If necessary, it has to be done outside of this function.\n	// return clamp((mValue - mMidPoint) * mScale + mMidPoint, 0.0, 1.0);\n	return (mValue - mMidPoint) * mScale + mMidPoint;\n}\n\nfloat contrast(float mValue, float mScale) {\n	return contrast(mValue, mScale, 0.5);\n}\n\nvec3 contrast(vec3 mValue, float mScale, float mMidPoint) {\n	return vec3(contrast(mValue.r, mScale, mMidPoint), contrast(mValue.g, mScale, mMidPoint), contrast(mValue.b, mScale, mMidPoint));\n}\n\nvec3 contrast(vec3 mValue, float mScale) {\n	return contrast(mValue, mScale, 0.5);\n}\n\nfloat greyscaleFloat(vec3 color) {\n	return dot(color, vec3(0.299, 0.587, 0.114));\n}\n\nvec3 greyscale(vec3 color) {\n    return vec3(greyscaleFloat(color));\n}\n\nvec3 greyscale(vec3 color, float alpha) {\n    return mix(color, greyscale(color), alpha);\n}\n\n").fragment.after("map_fragment","\n        float fresnel = dot(vNormalWorld, vViewDir);\n        vec3 inner = ".concat((0,s.R)(w.white),";\n        vec3 outer = ").concat((0,s.R)(w.black),";\n        float alpha = easeInOut(1.0 - pow(fresnel, 1.5), 2.0, 0.0);\n        diffuseColor.rgb = mix(inner, outer, alpha);\n      ")).fragment.mainAfterAll("\n        // Final tuning\n        gl_FragColor.rgb = mix(contrast(greyscale(gl_FragColor.rgb), 1.5), diffuseColor.rgb, alpha);\n      "),super(t,n),(0,l.N)(this,e)}}class _ extends o.Mesh{constructor(e){let{color:t,thickness:n,length:i,shaded:r,...a}={..._.defaultProps,...e};super(new o.CylinderGeometry(n/2,n/2,i,12,1).rotateZ(.5*Math.PI),r?new o.MeshPhysicalMaterial({color:t}):new o.MeshBasicMaterial({color:t})),(0,l.N)(this,a)}}function U(e,t){return t.add(e),e}function*j(e,t){let n=yield*function*(e){let{ticker:t,scene:n}=e;t.set({activeDuration:h.v.development?3:180}),m("https://threejs.org/examples/textures/equirectangular/royal_esplanade_1k.hdr").then(t=>{new o.PMREMGenerator(e.renderer).fromEquirectangular(t).texture});let i=new o.Group;return n.add(i),yield()=>{i.removeFromParent()},i}(e);if(1===t.renderCount){let{camera:t}=e;t.fov=e.aspect>1?25:2*Math.atan(Math.tan(25*Math.PI/180/2)/e.aspect)*180/Math.PI,t.far=1e3,t.updateProjectionMatrix(),t.position.set(0,0,10)}n.add(new D),n.add(new P);let i=U(new z,n);n.add(new C({z:-1,radius:1.4,innerRadiusRatio:.805})),n.add(new F({z:-1,radius:.75,thickness:.01,color:w.yellow,emissiveIntensity:1})),n.add(new F({z:-1,radius:.8,thickness:.01,color:w.notSoWhite})),u.T.seed(6789402);let r=u.T.createPicker([[1,4],[2,2],[4,1]]);for(let{i:t}of function*(e){let t=0,n={get i(){return t},get t(){return t/8},get count(){return 8}};for(;t<8;t++)yield n}(8)){let i=u.T.pick(w),a=u.T.pick(w),s=new k({z:-1,radius:.1*r(),colorTop:i,colorBottom:a});s.rotation.set(u.T.between(2*Math.PI),u.T.between(2*Math.PI),u.T.between(2*Math.PI)),n.add(s),s.satellite.set({radius:0===t?.875:u.T.between(.25,.75)*(0,d.t7)(1,1.5,t),center:new o.Vector3(0,0,-1-.4*t),turnVelocity:u.T.between(.05,.25)}),yield e.ticker.onTick(e=>{s.satellite.update(e.deltaTime)})}let a=new o.Group;a.rotation.z=-.25*Math.PI,n.add(a),a.add(new k({x:-1.5,z:.5,singleColor:w.yellow})),a.add(new F({x:-1.81,radius:.1,thickness:.01,color:w.notSoWhite}));let s=U(new F({x:-2.315,radius:.2,thickness:.01,color:w.notSoWhite}),a);U(new _({x:-.2,thickness:.01,length:.4,shaded:!0,color:w.notSoWhite}),s),a.add(new k({x:1.7,z:.5,lerpIn:0,lerpOut:1})),a.add(new k({x:1.4,radius:.1,singleColor:w.black}));let c=U(new B({x:2.3}),a);U(new F({radius:.43,thickness:.015,color:w.black}),c),a.add(new _({x:1.5,thickness:.015,color:w.black}));let f=new o.Group;f.rotation.z=.25*Math.PI,n.add(f),f.add(new _({x:-1.6,thickness:.01,length:.35,shaded:!0,color:w.notSoWhite})),f.add(new _({x:1.6,thickness:.01,length:.35,shaded:!0,color:w.notSoWhite}));let p=new o.Group;p.rotation.y=.5*Math.PI,n.add(p),p.add(new _({x:-1.2,thickness:.01,length:.35,shaded:!0,color:w.notSoWhite})),p.add(new _({x:1.2,thickness:.01,length:.35,shaded:!0,color:w.notSoWhite})),(function(e){let t=e.split(".").pop();switch(t){case"hdr":return m(e);case"exr":return new Promise(t=>{v.load(e,e=>{t(e)})});default:return Promise.reject("Unsupported texture format: ".concat(t))}})("https://threejs.org/examples/textures/piz_compressed.exr").then(e=>{e.mapping=o.EquirectangularReflectionMapping,c.material.envMap=e,c.material.envMapIntensity=.25,c.material.envMapRotation.set(-.1*Math.PI,Math.PI,0),c.material.roughness=.3,c.material.metalness=.5,c.material.needsUpdate=!0,i.material.envMap=e,i.material.roughness=.2,i.material.envMapIntensity=.5,i.material.envMapRotation.set(-.1*Math.PI,Math.PI,0),i.material.needsUpdate=!0});let g=U(new o.Group,n);g.rotation.z=.25*Math.PI;class x extends o.Group{constructor(e){super();{let e=new o.CylinderGeometry(15,15,5,6,1,!0).rotateY(Math.PI/6),t=new o.MeshPhysicalMaterial({color:new o.Color("white").lerp(w.black,.995),side:o.BackSide,flatShading:!0});U(new o.Mesh(e,t),this)}{let e=new o.CylinderGeometry(15,15,5,6,60,!0).rotateY(Math.PI/6),t=new o.MeshPhysicalMaterial({color:w.black,wireframe:!0,flatShading:!0,side:o.BackSide});U(new o.Mesh(e,t),this)}(0,l.N)(this,e)}}U(new x({y:7.8}),g),U(new x({y:-7.8}),g)}function N(){return(0,i.jsx)("div",{className:"absolute-through",children:(0,i.jsx)(r.V,{className:"bg-[#ddd]",children:(0,i.jsx)(a.hR,{children:(0,i.jsx)(a.kB,{fn:j})})})})}_.defaultProps={color:w.black,thickness:.01,shaded:!1,length:1}},90663:function(e,t,n){"use strict";n.d(t,{Main:function(){return z}});var i=n(78485),r=n(95598),a=n(52471),o=n(74831),s=n(81796);let l=new a.LineBasicMaterial({color:"white",transparent:!0,depthTest:!1}),c={circle:(()=>{let e=new a.BufferGeometry,t=Array.from({length:81},(e,t)=>{let n=t/80*Math.PI*2;return new a.Vector3(Math.cos(n),Math.sin(n),0)});return e.setFromPoints(t),e})(),box2:(()=>{let e=new a.BufferGeometry,t=[new a.Vector3(-.5,-.5,0),new a.Vector3(.5,-.5,0),new a.Vector3(.5,.5,0),new a.Vector3(-.5,.5,0),new a.Vector3(-.5,-.5,0)];return e.setFromPoints(t),e})()};class d extends a.Group{setupUniforms(e,t){let{value:n}=e,{value:i}=t;n.copy(this.matrixWorld),n.invert()}init(e){this.props=e,this.renderOrder=1}setup(){}set(e){Object.assign(this.props,e),this.setup()}}let u={radius:2,falloff:1};class h extends d{get radius(){return this.props.radius}set radius(e){this.props.radius=e,this.setup()}get falloff(){return this.props.falloff}set falloff(e){this.props.falloff=e,this.setup()}setupUniforms(e,t){super.setupUniforms(e,t);let{radius:n,falloff:i}=this.props;t.value.set(n,i,0,0)}setup(){let{circle0:e,circle1:t}=this.parts,{radius:n,falloff:i}=this.props;e.scale.setScalar(n),t.scale.setScalar(n+i)}constructor(e){super(),this.parts={circle0:new a.Line(c.circle,l),circle1:new a.Line(c.circle,l)},this.init({...u,...e}),this.add(this.parts.circle0),this.add(this.parts.circle1),this.setup()}}h.glsl="\n    struct CircleFalloff {\n      mat4 matrix;\n      float radius;\n      float falloff;\n    };\n    float falloff(CircleFalloff falloff, vec3 p) {\n      p = (falloff.matrix * vec4(p, 1.0)).xyz;\n      float d = length(p);\n      return 1.0 - (d - falloff.radius) / falloff.falloff;\n    }\n  ";let f={width:1,height:1,falloff:1};class p extends d{setupUniforms(e,t){super.setupUniforms(e,t);let{width:n,height:i,falloff:r}=this.props;t.value.set(n,i,r,0)}setup(){let{box0:e,box1:t}=this.parts,{width:n,height:i,falloff:r}=this.props;e.scale.set(n,i,1),t.scale.set(n+2*r,i+2*r,1)}constructor(e){super(),this.parts={box0:new a.Line(c.box2,l),box1:new a.Line(c.box2,l)},this.init({...f,...e}),this.add(this.parts.box0),this.add(this.parts.box1),this.setup()}}p.glsl="\n    struct ManhattanBox2Falloff {\n      mat4 matrix;\n      float width;\n      float height;\n      float falloff;\n    };\n    float falloff(ManhattanBox2Falloff falloff, vec3 p) {\n      p = (falloff.matrix * vec4(p, 1.0)).xyz;\n      float x = abs(p.x) - falloff.width * 0.5;\n      float y = abs(p.y) - falloff.height * 0.5;\n      return 1.0 - max(x, y) / falloff.falloff;\n    }\n  ";var m=n(47174),v=n(49635),g=n(87858),x=n(58152),y=n(1060),w=n(98828),b=n(16573),M=n(77405);function F(e){let{r:t,g:n,b:i}=new a.Color(e);return"vec3(".concat(t.toFixed(3),", ").concat(n.toFixed(3),", ").concat(i.toFixed(3),")")}let C={grid:[16,16]},S=new a.PlaneGeometry(1,1,1,1),P=new a.MeshBasicMaterial({side:a.DoubleSide,transparent:!0}),A={uRadiusScalar:new a.Uniform(.9),uCircleMat:new a.Uniform(new a.Matrix4().identity()),uCircleProps:new a.Uniform(new a.Vector4(1,2,0,0)),uBox0Mat:new a.Uniform(new a.Matrix4().identity()),uBox0Props:new a.Uniform(new a.Vector4(1,1,0,0))};P.onBeforeCompile=e=>m.b.with(e).defines({USE_UV:""}).uniforms(A).varying({vCenter:"vec3",vWorldPosition2:"vec3"}).vertex.mainAfterAll("\n    vWorldPosition2 = (modelMatrix * instanceMatrix * vec4(transformed, 1.0)).xyz;\n    vCenter = (modelMatrix * instanceMatrix[3]).xyz;\n  ").fragment.top(w.U,x.g,y.i).fragment.top(h.glsl,p.glsl).fragment.after("color_fragment","\n    CircleFalloff circle = CircleFalloff(uCircleMat, uCircleProps.x, uCircleProps.y);\n    ManhattanBox2Falloff box = ManhattanBox2Falloff(uBox0Mat, uBox0Props.x, uBox0Props.y, uBox0Props.z);\n    float d = 0.0;\n    d += clamp01(falloff(box, vWorldPosition2));\n    d += clamp01(falloff(circle, vWorldPosition2));\n    diffuseColor.rgb = mix(".concat(F("#c2e1ff"),", ").concat(F("#d80773"),", easeInOut3(clamp01(d)));\n  ")).fragment.after("alphamap_fragment","\n    float scalar = 1.0 / uRadiusScalar / mix(1.0, 0.25, easeInOut3(clamp01(d)));\n    float alpha = smoothstep(1.0, 0.99, length(vUv - 0.5) * scalar / 0.5);\n\n    if (alpha < 0.01) discard;\n\n    diffuseColor.a *= alpha;\n  ");class T extends a.InstancedMesh{onTick(e){for(let e of Object.values(this.falloffs))e.visible=this.falloffsAreVisible;let{box0:t,circle:n}=this.falloffs;n.falloff=(0,M.t7)(.1,4,e.sin01Time({frequency:.15})),n.radius=(0,M.t7)(1,5,e.sin01Time({frequency:.1,phase:.5})),n.setupUniforms(A.uCircleMat,A.uCircleProps),t.rotation.z+=.1*e.deltaTime,t.set({width:8,falloff:(0,M.t7)(.5,6,e.sin01Time({frequency:.15}))}),t.setupUniforms(A.uBox0Mat,A.uBox0Props)}constructor(e){var t;let{x:n,y:i}=(0,s.iK)(null!==(t=null==e?void 0:e.grid)&&void 0!==t?t:C.grid);for(let t of(super(S,P,n*i),this.internal={grid:new a.Vector2},this.falloffsAreVisible=!0,this.falloffs={circle:(0,g.cY)(new h,{parent:this,position:[-3,-2,0]}),box0:(0,g.cY)(new p({}),{parent:this,position:[3,2,0]})},this.props={...C,...e},(0,b.B)(n,i)))this.setMatrixAt(t.i,(0,v.$)({x:t.x-n/2,y:t.y-i/2}))}}function*D(e){e.scene.background=new a.Color("#1c54e0"),e.ticker.set({activeDuration:30}),e.useOrbitControls();let t=new T;e.scene.add(t),yield()=>t.removeFromParent(),yield(0,o.w)(document.body,{onTap(){t.falloffsAreVisible=!t.falloffsAreVisible}})}function R(){return(0,r.Ky)(D),null}function z(){return(0,i.jsx)("div",{className:"absolute-through",children:(0,i.jsx)(r.H7,{children:(0,i.jsx)(R,{})})})}},93342:function(e,t,n){"use strict";n.d(t,{Client:function(){return B}});var i=n(78485),r=n(52471),a=n(63221),o=n(63549),s=n(87858),l=n(13025),c=n(95598),d=n(74722),u=n(4917),h=n(49635),f=n(28142),p=n(81796),m=n(25293),v=n(77405);class g{constructor(e,t,n,i){this.space=e,this.rect=t,this.uvRect=n,this.scatterCoeff=i,this.r0=f.T.random(),this.r1=f.T.random()}}class x{constructor(e,t){this.props={...x.defaultProps,...t};let{position:n,size:i,scatterPadding:r,sizeOptions:a,seed:o}=this.props,{col:s,row:l}=e.props;f.T.seed(o);let c=f.T.createPicker(a),d=Array.from({length:s}).map(c),u=Array.from({length:l}).map(c),{x:h,y:y}=(0,p.iK)(n),{x:w,y:b}=(0,p.iK)(i),M=new m.T(m.Nm.Horizontal).setSize(w,b).setOffset(h-w/2,y-b/2);for(let e of d){let t=new m.T(m.Nm.Vertical).setSize("".concat(e,"fr")).addTo(M);for(let e of u)new m.T(m.Nm.Horizontal).setSize("".concat(e,"fr")).addTo(t)}M.computeLayout();let F=M.rect,C=[...M.allLeaves({includeSelf:!1})],S=(w+b)/2,P=C.map(e=>{let t=e.rect.clone(),n=t.clone().relativeTo(F),{x:i,y:a}=t.getCenter(),o=(0,v.ii)(.5,1,(Math.abs(i-h)+Math.abs(a-y))/S);return t.centerX+=f.T.between(-r,r)*o,t.centerY+=f.T.between(-r,r)*o,new g(e,t,n,o)});this.root=M,this.nodes=P}}x.defaultProps={seed:87654,position:new r.Vector2(0,0),size:new r.Vector2(3,2),scatterPadding:.1,sizeOptions:[[.5,1],[1,10],[2,2],[3,1]]};var y=n(88156),w=n(44645),b=n(47174),M=n(1060),F=n(98828),C=n(83018),S=n(1237);class P extends r.Object3D{constructor(){super();let e=new r.HemisphereLight("#ffffff","#926969",1);this.add(e);let t=new r.DirectionalLight("#ffffff",2);this.add(t),t.position.set(2,4,1)}}class A extends r.MeshBasicMaterial{get mapAspect(){return this.uniforms.uMapInfo.value.x}set mapAspect(e){this.uniforms.uMapInfo.value.x=e}getScatteredSize(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new r.Vector2;return e.x=this.uniforms.uScatteredInfo.value.x,e.y=this.uniforms.uScatteredInfo.value.y,e}setScatteredSize(e){this.uniforms.uScatteredInfo.value.x=e.x,this.uniforms.uScatteredInfo.value.y=e.y}get scatteredSize(){return this.getScatteredSize()}set scatteredSize(e){this.setScatteredSize(e)}update(e){e*=.33,this.uniforms.uDispersionTime.value+=e*this.uniforms.uDispersion.value.x,this.uniforms.uLowDispersionTime.value+=e*this.uniforms.uLowDispersion.value.x}constructor(){super({side:r.DoubleSide}),this.uniforms={uDispersionTime:{value:0},uLowDispersionTime:{value:0},uDispersion:{value:new r.Vector4(1,-.6,.4,2)},uLowDispersion:{value:new r.Vector4(0,-.6,.4,0)},uMainParams:{value:new r.Vector4(1,0)},uCenter:{value:new r.Vector3},uMapInfo:{value:new r.Vector4(1,1,.5,.5)},uScatteredInfo:{value:new r.Vector4(1,1,0,0)},uNormalMap:{value:w.R.get("three").loadTexture("textures/rough_concrete_nor_gl_1k.jpg",e=>{e.wrapS=e.wrapT=r.RepeatWrapping})}},this.userData=function(e,t){for(let[n,i,r,a]of t)Object.defineProperty(e,"".concat(n,"_meta"),{enumerable:!0,value:a}),Object.defineProperty(e,n,{enumerable:!0,get:()=>i[r],set(e){i[r]=e}});return e}({},[["chunkScale",this.uniforms.uMainParams.value,"x","\n        Name(chunk.scale)\n        Slider(0, 1, step: any)\n      "],["imageVisibility",this.uniforms.uMainParams.value,"y","\n        Name(image.visibility)\n        Slider(0, 1, step: any)\n      "],["dispX",this.uniforms.uDispersion.value,"x","\n        Name(disp.x)\n        Slider(0, 1, step: any)\n      "],["dispY",this.uniforms.uDispersion.value,"y","\n        Name(disp.y)\n        Slider(-1, 1, step: any)\n      "],["dispZ",this.uniforms.uDispersion.value,"z","\n        Name(disp.z)\n        Slider(-1, 1, step: any)\n      "],["dispW",this.uniforms.uDispersion.value,"w","\n        Name(disp.cycle)\n        Slider(1, 20, step: 1)\n      "],["lowDispX",this.uniforms.uLowDispersion.value,"x","\n        Name(lowDisp.x)\n        Slider(0, 1, step: any)\n      "]]),this.onBeforeCompile=e=>b.b.with(e).defines({USE_UV:""}).uniforms(this.uniforms).varying({vRand:"vec4"}).vertex.top(F.U,M.i,'\n  // sizeMode: 0 for "contain", 1 for "cover"\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect, float sizeMode, vec2 align, vec2 scale) {\n    align.y = 1.0 - align.y; // Flip y-coordinate\n    if ((outerAspect > innerAspect) != (sizeMode == 1.0)) { // XOR condition for mode\n      float scaleFactor = outerAspect / innerAspect;\n      uv.x = (uv.x - align.x) * scaleFactor + align.x; // Adjust x-coordinate\n    } else {\n      float scaleFactor = innerAspect / outerAspect;\n      uv.y = (uv.y - align.y) * scaleFactor + align.y; // Adjust y-coordinate\n    }\n    uv = (uv - align) / scale + align;\n    return uv;\n  }\n\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect, float sizeMode, vec2 align, float scale) {\n    return applyUvSize(uv, outerAspect, innerAspect, sizeMode, align, vec2(scale));\n  }\n\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect, float sizeMode, vec2 align) {\n    return applyUvSize(uv, outerAspect, innerAspect, sizeMode, align, vec2(1.0));\n  }\n\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect, float sizeMode) {\n    return applyUvSize(uv, outerAspect, innerAspect, sizeMode, vec2(0.5));\n  }\n\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect) {\n    return applyUvSize(uv, outerAspect, innerAspect, 1.0);\n  }\n').vertex.top("\n        attribute vec4 aRectUv;\n        attribute vec4 aRand;\n      ").vertex.top("\n        vec2 delta;\n        float scatterRatio;\n\n        vec4 computeDispersion() {\n          if (uDispersion.x == 0.0) {\n            return vec4(0.0, 0.0, 0.0, 1.0);\n          }\n\n          float duration = lerp(8.0, 1.0, aRand.x * aRand.y * aRand.z);\n          float cycleCount = max(floor(uDispersion.w), 1.0);\n          float time = mod(uDispersionTime + duration * cycleCount * aRand.x, duration * cycleCount) / duration;\n          float cycleVisibility = time <= 1.0 ? 1.0 : easeInOut3(1.0 - inverseLerp(.8 * aRand.w + .1, .8 * aRand.w + .2, uDispersion.x));\n          time = mod(time, 1.0);\n          float size = easeInThenOut(time, 8.0) * lerp(2.0, 1.0, time * time) * cycleVisibility;\n          size = mix(1.0, size, pow(uDispersion.x, 1.0 / 2.0));\n\n          // Apply scale before instanceMatrix (shrinking).\n          vec3 dispersed;\n          dispersed.xy = -delta * lerp(uDispersion.y, uDispersion.z, time);\n          dispersed.z = lerp(1.0, 0.0, time);\n          dispersed *= uDispersion.x;\n\n          return vec4(dispersed, size);\n        }\n\n        float getStartEffect(float time, float duration) {\n          return min(1.0, time / duration);\n        }\n\n        float getEndEffect(float time, float timeMax, float duration) {\n          return max(0.0, time - (timeMax - duration)) / duration;\n        }\n\n        vec4 computeLowDispersion() {\n          if (uLowDispersion.x == 0.0) {\n            return vec4(0.0, 0.0, 0.0, 1.0);\n          }\n\n          float periodScalarT = inverseLerp(0.1, 0.9, scatterRatio);\n          float period = lerp(2.0, 8.0, aRand.x) * lerp(60.0, 1.0, periodScalarT);\n          float time = mod(uLowDispersionTime + period * aRand.z, period);\n\n          float duration = 1.0;\n          float effectStart = min(1.0, time);\n          float effectEnd = getEndEffect(time, period, duration);\n\n          float size = getStartEffect(time, 0.3) * (1.0 - getEndEffect(time, period, 0.3));\n          size = pow(size, 1.0 / 4.0);\n          size = mix(1.0, size, pow(uLowDispersion.x, 1.0 / 4.0));\n\n          vec3 dispersed;\n\n          dispersed.xy = delta * 0.1;\n          dispersed.z = 0.2;\n          dispersed.xyz *= getEndEffect(time, period, 1.0);\n          dispersed *= uLowDispersion.x;\n\n          return vec4(dispersed, size);\n        }\n      ").vertex.replace("project_vertex","\n        vec4 mvPosition = vec4(position, 1.0);\n        delta = instanceMatrix[3].xy - uCenter.xy;\n        scatterRatio = clamp(1.1 * length(delta) / (length(uScatteredInfo.xy) / 2.0), 0.0, 1.0);\n\n        vec4 dispersion = computeDispersion();\n        vec4 lowDispersion = computeLowDispersion();\n\n        float scale = clamp01(uMainParams.x * 3.0 - 2.0 * aRand.w);\n        mvPosition.xyz *= dispersion.w * lowDispersion.w * easeInOut3(scale);\n\n        mvPosition = instanceMatrix * mvPosition;\n        mvPosition.xyz += dispersion.xyz + lowDispersion.xyz;\n\n        mvPosition = modelViewMatrix * mvPosition;\n        gl_Position = projectionMatrix * mvPosition;      \n      ").vertex.replace("uv_vertex","\n        #if defined( USE_UV ) || defined( USE_ANISOTROPY )\n          vUv = vec3( uv, 1 ).xy;\n          vUv = aRectUv.xy + aRectUv.zw * vUv;\n        #endif\n        #ifdef USE_MAP\n          vec2 instanceUv = aRectUv.xy + aRectUv.zw * MAP_UV;\n\n          // vec2 uv, float outerAspect, float innerAspect, float sizeMode, vec2 align, vec2 scale\n          float outerAspect = uScatteredInfo.x / uScatteredInfo.y;\n          float innerAspect = uMapInfo.x;\n          float sizeMode = uMapInfo.y;\n          vec2 align = uMapInfo.zw;\n          instanceUv = applyUvSize(instanceUv, outerAspect, innerAspect, sizeMode, align, vec2(1.0));\n          \n          vMapUv = ( mapTransform * vec3( instanceUv, 1 ) ).xy;\n        #endif\n      ").vertex.mainAfterAll("\n        vRand = aRand;\n      ").fragment.top(F.U,M.i).fragment.replace("color_fragment","\n        vec3 normal = texture2D(uNormalMap, vUv * 4.0).rgb;\n        vec3 light = normalize(vec3(0.5, 2.5, 1.0));\n        float colorAlteration = mix(0.333, 1.0, dot(normal, light));\n        float transition = inverseLerp(0.0, 0.2, uMainParams.y - 0.8 * vRand.w);\n        diffuseColor.rgb = mix(vColor * colorAlteration, diffuseColor.rgb, transition);\n      ")}}class T extends r.Object3D{static createPlane(e){let{row:t,col:n}=e,i=t*n,a=new r.PlaneGeometry,o=new r.InstancedBufferAttribute(new Float32Array(4*i),4);a.setAttribute("aRectUv",o);let s=new r.InstancedBufferAttribute(new Float32Array(4*i),4);a.setAttribute("aRand",s);for(let e=0;e<i;e++)s.setXYZW(e,f.T.random(),f.T.random(),f.T.random(),f.T.random());let l=new A,c=new r.InstancedMesh(a,l,i);return c.name="plane",c}get count(){return this.internal.count}onTick(e){this.internal.plane.material.update(e.deltaTime)}getDistribution(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new x(this,e)}drawDistribution(e){let{position:t,size:n,scatterPadding:i}=e.props,{x:r,y:a}=(0,p.iK)(t),{x:o,y:s}=(0,p.iK)(n);this.internal.lineHelper.rectangle([r,a,o,s]).rectangle([r,a,o+2*i,s+2*i])}distribute(e){let{count:t,plane:n}=this.internal,{aRectUv:i}=n.geometry.attributes;for(let r=0;r<t;r++){let{rect:t,uvRect:a}=e.nodes[r];n.setMatrixAt(r,(0,h.$)({position:t.getCenter(),scale:t.getSize()})),i.setXYZW(r,a.x,a.y,a.width,a.height)}n.material.setScatteredSize(e.root.rect.getSize());let r=e.root.rect;n.material.setScatteredSize(r.getSize()),n.material.uniforms.uCenter.value.copy(r.getCenter())}lerpDistribute(e,t,n){let{count:i,plane:a}=this.internal,{aRectUv:o}=a.geometry.attributes,s=new S.Ae,l=new S.Ae,c=new S.Ae,d=new r.Vector3,u=new r.Vector3;for(let r=0;r<i;r++){let i=e.nodes[r],c=t.nodes[r],f=.3*(1-i.r0*(i.scatterCoeff+.2*c.r0)),p=(0,v.ii)(f,.7+f,n),m=(0,C.xD)(p);s.lerpRectangles(i.rect,c.rect,m),l.lerpRectangles(i.uvRect,c.uvRect,m),a.setMatrixAt(r,(0,h.$)({position:s.getCenter(d),scale:s.getSize(u),rotationY:(c.r0<.5?0:1)*m*Math.PI*2,rotationZ:.3*Math.sin(p*Math.PI)*(-1+2*i.r0)})),o.setXYZW(r,l.x,l.y,l.width,l.height)}let f=(0,C.uN)((0,v.ii)(.3,.7,n));c.lerpRectangles(e.root.rect,t.root.rect,f),a.material.setScatteredSize(c.getSize()),a.material.uniforms.uCenter.value.copy(c.getCenter()),a.instanceMatrix.needsUpdate=!0,o.needsUpdate=!0}constructor(e={}){super(),this.transition=0;let t={...T.defaultProps,...e},{col:n,row:i}=t,r=T.createPlane(t);(0,s.bB)(r,this);let a=new y.O;(0,s.bB)(a,this);let o=new P;(0,s.bB)(o,this),this.internal={count:i*n,plane:r,lineHelper:a,lightSetup:o},this.props=t,this.distribute(this.getDistribution())}}T.displayName="ScatteredPlane",T.defaultProps={row:20,col:30,imageAspect:1,imageResizeMode:"cover"},T.transition_meta="Range(0, 1)";class D extends r.Mesh{constructor(){super(new r.IcosahedronGeometry(40,1),new r.MeshBasicMaterial({color:"#aeb4e9",side:r.BackSide})),this.onBeforeRender=(e,t,n)=>{this.position.copy(n.position)}}}let R={darkBlue:"#002c52",orange:"#ff5c35",white:"#ffffff",lightGrey:"#c9cfd3"};function z(){let e=(0,c.jE)();return e.three.pipeline.basicPasses.outline.enabled=!1,(0,u._v)("ScatteredDemo",async function*(t,n){(0,s.bB)(new D,t),(0,s.bB)(new r.Mesh(new a.w,new o.P),t);let i=await n.loader.load("/images/DebugTexture.png");i.colorSpace=r.SRGBColorSpace;let c=(0,s.bB)(new T,t);c.internal.plane.material.map=i,c.internal.plane.material.mapAspect=i.image.width/i.image.height;let d=c.getDistribution({seed:4789,position:[-2,0],size:[2,3]}),u=c.getDistribution({seed:3249,position:[2,0],size:[2,4]});c.drawDistribution(d),c.drawDistribution(u),t.userData.transition=0,t.userData.transition_meta="Slider(0, 1, step: 0.01)",t.userData.scale=1,t.userData.scale_meta="Slider(-1, 1, pow: 10, step: .1)",t.userData.links=[c.internal.plane.material.userData];let p=Object.values(R);for(let e=0,t=c.count;e<t;e++)c.internal.plane.setColorAt(e,(0,h.E)(f.T.pick(p)));yield n.onTick(()=>{c.lerpDistribute(d,u,t.userData.transition),c.scale.setScalar(t.userData.scale)}),(0,l.v)(e,t),e.sceneSelection.add("Select ScatteredDemo",t)},[]),null}function E(){return(0,u.Ky)(function*(e){e.useOrbitControls({position:[-2,0,8],target:[-2,0,0]})},[]),null}function k(e){let{children:t}=e,n=(0,u.Ky)();return(0,i.jsx)(c.KU,{three:n,backgroundColor:"#26163c4f",children:t})}function B(){return(0,i.jsxs)("div",{className:"layer thru",children:[(0,i.jsx)(d.Leak,{}),(0,i.jsx)(u.H7,{children:(0,i.jsxs)(k,{children:[(0,i.jsx)("div",{className:"layer thru px-3 py-2 flex flex-col gap-4",children:(0,i.jsx)("h1",{className:"text-4xl",children:"ScatteredPlane"})}),(0,i.jsx)(E,{}),(0,i.jsx)(z,{})]})})]})}},98579:function(e,t,n){"use strict";n.d(t,{V:function(){return u}});var i=n(78485),r=n(27275),a=n(37457),o=n(12144),s=n(48583),l=n(87387),c=n.n(l);let d=[c().frame,c().full];function u(e){let[t,n]=(0,r.useState)(0),{ref:l}=(0,s.Nv)(function*(e){yield(0,o.f)(e,{onSize:t=>{let{x:n,y:i}=t.size;e.classList.toggle(c().landscape,n>i)}});let t=!1;yield(0,a.p)(document.documentElement,[[{key:"f",noModifiers:!0},i=>{i.event.preventDefault(),document.fullscreenElement!==e?(e.requestFullscreen(),t=!1):!1===t?(t=!0,n(1)):(document.exitFullscreen(),n(0))}]])},[]),{children:u,className:h}=e;return(0,i.jsx)("div",{ref:l,className:[c().Billboard,c().landscape,d[t],null!=h?h:""].join(" "),children:u})}},74722:function(e,t,n){"use strict";n.d(t,{Leak:function(){return o}});var i=n(40855),r=n(79509),a=n(28142);function o(){return Object.assign(window,{...r,...i,PRNG:a.T}),null}},88156:function(e,t,n){"use strict";n.d(t,{O:function(){return l}});var i=n(52471),r=n(1237),a=n(81796);let o=new i.Vector2,s=new i.Vector3;class l extends i.LineSegments{showOccludedLines(){let{opacity:e=.2}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=new i.LineBasicMaterial({color:this.material.color,transparent:!0,depthFunc:i.GreaterDepth,opacity:e}),n=new i.LineSegments(this.geometry,t);return this.add(n),this}clear(){return this.points.length=0,this.geometry.setFromPoints(this.points),this}draw(){return this.geometry.setFromPoints(this.points),this}rectangle(e){let{centerX:t,centerY:n,width:a,height:o}=r.Ae.from(e),s=a/2,l=o/2,c=new i.Vector3(t-s,n-l,0),d=new i.Vector3(t+s,n-l,0),u=new i.Vector3(t+s,n+l,0),h=new i.Vector3(t-s,n+l,0);return this.points.push(c,d,d,u,u,h,h,c),this}box(){let{center:e=[0,0,0],size:t=1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{x:n,y:r,z:o}=(0,a.Q7)(e,s),{x:l,y:c,z:d}=(0,a.Q7)(t,s),u=l/2,h=c/2,f=d/2,p=new i.Vector3(n-u,r-h,o-f),m=new i.Vector3(n+u,r-h,o-f),v=new i.Vector3(n+u,r+h,o-f),g=new i.Vector3(n-u,r+h,o-f),x=new i.Vector3(n-u,r-h,o+f),y=new i.Vector3(n+u,r-h,o+f),w=new i.Vector3(n+u,r+h,o+f),b=new i.Vector3(n-u,r+h,o+f);return this.points.push(p,m,m,v,v,g,g,p),this.points.push(x,y,y,w,w,b,b,x),this.points.push(p,x,m,y,v,w,g,b),this}plus(e,t){let n=t/2,{x:r,y:s}=(0,a.iK)(e,o),l=new i.Vector3(r-n,s,0),c=new i.Vector3(r+n,s,0),d=new i.Vector3(r,s-n,0),u=new i.Vector3(r,s+n,0);return this.points.push(l,c,d,u),this}cross(e,t){let n=t/2,{x:r,y:s}=(0,a.iK)(e,o),l=new i.Vector3(r-n,s-n,0),c=new i.Vector3(r+n,s+n,0),d=new i.Vector3(r-n,s+n,0),u=new i.Vector3(r+n,s-n,0);return this.points.push(l,c,d,u),this}constructor(...e){super(...e),this.points=[]}}},49635:function(e,t,n){"use strict";n.d(t,{$:function(){return o},E:function(){return l}});var i=n(52471),r=n(81796);let a=new i.Matrix4;function o(e){return(0,r.Xe)(e,a)}let s=new i.Color;function l(e){return s.set(e)}},58152:function(e,t,n){"use strict";n.d(t,{g:function(){return i}});let i="\n  // #F0F8FF\n  #define aliceblue vec3(240.0 / 255.0, 248.0 / 255.0, 255.0 / 255.0) \n  // #FAEBD7\n  #define antiquewhite vec3(250.0 / 255.0, 235.0 / 255.0, 215.0 / 255.0) \n  // #00FFFF\n  #define aqua vec3(0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #7FFFD4\n  #define aquamarine vec3(127.0 / 255.0, 255.0 / 255.0, 212.0 / 255.0) \n  // #F0FFFF\n  #define azure vec3(240.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #F5F5DC\n  #define beige vec3(245.0 / 255.0, 245.0 / 255.0, 220.0 / 255.0) \n  // #FFE4C4\n  #define bisque vec3(255.0 / 255.0, 228.0 / 255.0, 196.0 / 255.0) \n  // #000000\n  #define black vec3(0.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #FFEBCD\n  #define blanchedalmond vec3(255.0 / 255.0, 235.0 / 255.0, 205.0 / 255.0) \n  // #0000FF\n  #define blue vec3(0.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0) \n  // #8A2BE2\n  #define blueviolet vec3(138.0 / 255.0, 43.0 / 255.0, 226.0 / 255.0) \n  // #A52A2A\n  #define brown vec3(165.0 / 255.0, 42.0 / 255.0, 42.0 / 255.0) \n  // #DEB887\n  #define burlywood vec3(222.0 / 255.0, 184.0 / 255.0, 135.0 / 255.0) \n  // #5F9EA0\n  #define cadetblue vec3(95.0 / 255.0, 158.0 / 255.0, 160.0 / 255.0) \n  // #7FFF00\n  #define chartreuse vec3(127.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0) \n  // #D2691E\n  #define chocolate vec3(210.0 / 255.0, 105.0 / 255.0, 30.0 / 255.0) \n  // #FF7F50\n  #define coral vec3(255.0 / 255.0, 127.0 / 255.0, 80.0 / 255.0) \n  // #6495ED\n  #define cornflowerblue vec3(100.0 / 255.0, 149.0 / 255.0, 237.0 / 255.0) \n  // #FFF8DC\n  #define cornsilk vec3(255.0 / 255.0, 248.0 / 255.0, 220.0 / 255.0) \n  // #DC143C\n  #define crimson vec3(220.0 / 255.0, 20.0 / 255.0, 60.0 / 255.0) \n  // #00FFFF\n  #define cyan vec3(0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #00008B\n  #define darkblue vec3(0.0 / 255.0, 0.0 / 255.0, 139.0 / 255.0) \n  // #008B8B\n  #define darkcyan vec3(0.0 / 255.0, 139.0 / 255.0, 139.0 / 255.0) \n  // #B8860B\n  #define darkgoldenrod vec3(184.0 / 255.0, 134.0 / 255.0, 11.0 / 255.0) \n  // #A9A9A9\n  #define darkgray vec3(169.0 / 255.0, 169.0 / 255.0, 169.0 / 255.0) \n  // #A9A9A9\n  #define darkgrey vec3(169.0 / 255.0, 169.0 / 255.0, 169.0 / 255.0) \n  // #006400\n  #define darkgreen vec3(0.0 / 255.0, 100.0 / 255.0, 0.0 / 255.0) \n  // #BDB76B\n  #define darkkhaki vec3(189.0 / 255.0, 183.0 / 255.0, 107.0 / 255.0) \n  // #8B008B\n  #define darkmagenta vec3(139.0 / 255.0, 0.0 / 255.0, 139.0 / 255.0) \n  // #556B2F\n  #define darkolivegreen vec3(85.0 / 255.0, 107.0 / 255.0, 47.0 / 255.0) \n  // #FF8C00\n  #define darkorange vec3(255.0 / 255.0, 140.0 / 255.0, 0.0 / 255.0) \n  // #9932CC\n  #define darkorchid vec3(153.0 / 255.0, 50.0 / 255.0, 204.0 / 255.0) \n  // #8B0000\n  #define darkred vec3(139.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #E9967A\n  #define darksalmon vec3(233.0 / 255.0, 150.0 / 255.0, 122.0 / 255.0) \n  // #8FBC8F\n  #define darkseagreen vec3(143.0 / 255.0, 188.0 / 255.0, 143.0 / 255.0) \n  // #483D8B\n  #define darkslateblue vec3(72.0 / 255.0, 61.0 / 255.0, 139.0 / 255.0) \n  // #2F4F4F\n  #define darkslategray vec3(47.0 / 255.0, 79.0 / 255.0, 79.0 / 255.0) \n  // #2F4F4F\n  #define darkslategrey vec3(47.0 / 255.0, 79.0 / 255.0, 79.0 / 255.0) \n  // #00CED1\n  #define darkturquoise vec3(0.0 / 255.0, 206.0 / 255.0, 209.0 / 255.0) \n  // #9400D3\n  #define darkviolet vec3(148.0 / 255.0, 0.0 / 255.0, 211.0 / 255.0) \n  // #FF1493\n  #define deeppink vec3(255.0 / 255.0, 20.0 / 255.0, 147.0 / 255.0) \n  // #00BFFF\n  #define deepskyblue vec3(0.0 / 255.0, 191.0 / 255.0, 255.0 / 255.0) \n  // #696969\n  #define dimgray vec3(105.0 / 255.0, 105.0 / 255.0, 105.0 / 255.0) \n  // #696969\n  #define dimgrey vec3(105.0 / 255.0, 105.0 / 255.0, 105.0 / 255.0) \n  // #1E90FF\n  #define dodgerblue vec3(30.0 / 255.0, 144.0 / 255.0, 255.0 / 255.0) \n  // #B22222\n  #define firebrick vec3(178.0 / 255.0, 34.0 / 255.0, 34.0 / 255.0) \n  // #FFFAF0\n  #define floralwhite vec3(255.0 / 255.0, 250.0 / 255.0, 240.0 / 255.0) \n  // #228B22\n  #define forestgreen vec3(34.0 / 255.0, 139.0 / 255.0, 34.0 / 255.0) \n  // #FF00FF\n  #define fuchsia vec3(255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0) \n  // #DCDCDC\n  #define gainsboro vec3(220.0 / 255.0, 220.0 / 255.0, 220.0 / 255.0) \n  // #F8F8FF\n  #define ghostwhite vec3(248.0 / 255.0, 248.0 / 255.0, 255.0 / 255.0) \n  // #FFD700\n  #define gold vec3(255.0 / 255.0, 215.0 / 255.0, 0.0 / 255.0) \n  // #DAA520\n  #define goldenrod vec3(218.0 / 255.0, 165.0 / 255.0, 32.0 / 255.0) \n  // #808080\n  #define gray vec3(128.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #808080\n  #define grey vec3(128.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #008000\n  #define green vec3(0.0 / 255.0, 128.0 / 255.0, 0.0 / 255.0) \n  // #ADFF2F\n  #define greenyellow vec3(173.0 / 255.0, 255.0 / 255.0, 47.0 / 255.0) \n  // #F0FFF0\n  #define honeydew vec3(240.0 / 255.0, 255.0 / 255.0, 240.0 / 255.0) \n  // #FF69B4\n  #define hotpink vec3(255.0 / 255.0, 105.0 / 255.0, 180.0 / 255.0) \n  // #CD5C5C\n  #define indianred vec3(205.0 / 255.0, 92.0 / 255.0, 92.0 / 255.0) \n  // #4B0082\n  #define indigo vec3(75.0 / 255.0, 0.0 / 255.0, 130.0 / 255.0) \n  // #FFFFF0\n  #define ivory vec3(255.0 / 255.0, 255.0 / 255.0, 240.0 / 255.0) \n  // #F0E68C\n  #define khaki vec3(240.0 / 255.0, 230.0 / 255.0, 140.0 / 255.0) \n  // #E6E6FA\n  #define lavender vec3(230.0 / 255.0, 230.0 / 255.0, 250.0 / 255.0) \n  // #FFF0F5\n  #define lavenderblush vec3(255.0 / 255.0, 240.0 / 255.0, 245.0 / 255.0) \n  // #7CFC00\n  #define lawngreen vec3(124.0 / 255.0, 252.0 / 255.0, 0.0 / 255.0) \n  // #FFFACD\n  #define lemonchiffon vec3(255.0 / 255.0, 250.0 / 255.0, 205.0 / 255.0) \n  // #ADD8E6\n  #define lightblue vec3(173.0 / 255.0, 216.0 / 255.0, 230.0 / 255.0) \n  // #F08080\n  #define lightcoral vec3(240.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #E0FFFF\n  #define lightcyan vec3(224.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #FAFAD2\n  #define lightgoldenrodyellow vec3(250.0 / 255.0, 250.0 / 255.0, 210.0 / 255.0) \n  // #D3D3D3\n  #define lightgray vec3(211.0 / 255.0, 211.0 / 255.0, 211.0 / 255.0) \n  // #D3D3D3\n  #define lightgrey vec3(211.0 / 255.0, 211.0 / 255.0, 211.0 / 255.0) \n  // #90EE90\n  #define lightgreen vec3(144.0 / 255.0, 238.0 / 255.0, 144.0 / 255.0) \n  // #FFB6C1\n  #define lightpink vec3(255.0 / 255.0, 182.0 / 255.0, 193.0 / 255.0) \n  // #FFA07A\n  #define lightsalmon vec3(255.0 / 255.0, 160.0 / 255.0, 122.0 / 255.0) \n  // #20B2AA\n  #define lightseagreen vec3(32.0 / 255.0, 178.0 / 255.0, 170.0 / 255.0) \n  // #87CEFA\n  #define lightskyblue vec3(135.0 / 255.0, 206.0 / 255.0, 250.0 / 255.0) \n  // #778899\n  #define lightslategray vec3(119.0 / 255.0, 136.0 / 255.0, 153.0 / 255.0) \n  // #778899\n  #define lightslategrey vec3(119.0 / 255.0, 136.0 / 255.0, 153.0 / 255.0) \n  // #B0C4DE\n  #define lightsteelblue vec3(176.0 / 255.0, 196.0 / 255.0, 222.0 / 255.0) \n  // #FFFFE0\n  #define lightyellow vec3(255.0 / 255.0, 255.0 / 255.0, 224.0 / 255.0) \n  // #00FF00\n  #define lime vec3(0.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0) \n  // #32CD32\n  #define limegreen vec3(50.0 / 255.0, 205.0 / 255.0, 50.0 / 255.0) \n  // #FAF0E6\n  #define linen vec3(250.0 / 255.0, 240.0 / 255.0, 230.0 / 255.0) \n  // #FF00FF\n  #define magenta vec3(255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0) \n  // #800000\n  #define maroon vec3(128.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #66CDAA\n  #define mediumaquamarine vec3(102.0 / 255.0, 205.0 / 255.0, 170.0 / 255.0) \n  // #0000CD\n  #define mediumblue vec3(0.0 / 255.0, 0.0 / 255.0, 205.0 / 255.0) \n  // #BA55D3\n  #define mediumorchid vec3(186.0 / 255.0, 85.0 / 255.0, 211.0 / 255.0) \n  // #9370DB\n  #define mediumpurple vec3(147.0 / 255.0, 112.0 / 255.0, 219.0 / 255.0) \n  // #3CB371\n  #define mediumseagreen vec3(60.0 / 255.0, 179.0 / 255.0, 113.0 / 255.0) \n  // #7B68EE\n  #define mediumslateblue vec3(123.0 / 255.0, 104.0 / 255.0, 238.0 / 255.0) \n  // #00FA9A\n  #define mediumspringgreen vec3(0.0 / 255.0, 250.0 / 255.0, 154.0 / 255.0) \n  // #48D1CC\n  #define mediumturquoise vec3(72.0 / 255.0, 209.0 / 255.0, 204.0 / 255.0) \n  // #C71585\n  #define mediumvioletred vec3(199.0 / 255.0, 21.0 / 255.0, 133.0 / 255.0) \n  // #191970\n  #define midnightblue vec3(25.0 / 255.0, 25.0 / 255.0, 112.0 / 255.0) \n  // #F5FFFA\n  #define mintcream vec3(245.0 / 255.0, 255.0 / 255.0, 250.0 / 255.0) \n  // #FFE4E1\n  #define mistyrose vec3(255.0 / 255.0, 228.0 / 255.0, 225.0 / 255.0) \n  // #FFE4B5\n  #define moccasin vec3(255.0 / 255.0, 228.0 / 255.0, 181.0 / 255.0) \n  // #FFDEAD\n  #define navajowhite vec3(255.0 / 255.0, 222.0 / 255.0, 173.0 / 255.0) \n  // #000080\n  #define navy vec3(0.0 / 255.0, 0.0 / 255.0, 128.0 / 255.0) \n  // #FDF5E6\n  #define oldlace vec3(253.0 / 255.0, 245.0 / 255.0, 230.0 / 255.0) \n  // #808000\n  #define olive vec3(128.0 / 255.0, 128.0 / 255.0, 0.0 / 255.0) \n  // #6B8E23\n  #define olivedrab vec3(107.0 / 255.0, 142.0 / 255.0, 35.0 / 255.0) \n  // #FFA500\n  #define orange vec3(255.0 / 255.0, 165.0 / 255.0, 0.0 / 255.0) \n  // #FF4500\n  #define orangered vec3(255.0 / 255.0, 69.0 / 255.0, 0.0 / 255.0) \n  // #DA70D6\n  #define orchid vec3(218.0 / 255.0, 112.0 / 255.0, 214.0 / 255.0) \n  // #EEE8AA\n  #define palegoldenrod vec3(238.0 / 255.0, 232.0 / 255.0, 170.0 / 255.0) \n  // #98FB98\n  #define palegreen vec3(152.0 / 255.0, 251.0 / 255.0, 152.0 / 255.0) \n  // #AFEEEE\n  #define paleturquoise vec3(175.0 / 255.0, 238.0 / 255.0, 238.0 / 255.0) \n  // #DB7093\n  #define palevioletred vec3(219.0 / 255.0, 112.0 / 255.0, 147.0 / 255.0) \n  // #FFEFD5\n  #define papayawhip vec3(255.0 / 255.0, 239.0 / 255.0, 213.0 / 255.0) \n  // #FFDAB9\n  #define peachpuff vec3(255.0 / 255.0, 218.0 / 255.0, 185.0 / 255.0) \n  // #CD853F\n  #define peru vec3(205.0 / 255.0, 133.0 / 255.0, 63.0 / 255.0) \n  // #FFC0CB\n  #define pink vec3(255.0 / 255.0, 192.0 / 255.0, 203.0 / 255.0) \n  // #DDA0DD\n  #define plum vec3(221.0 / 255.0, 160.0 / 255.0, 221.0 / 255.0) \n  // #B0E0E6\n  #define powderblue vec3(176.0 / 255.0, 224.0 / 255.0, 230.0 / 255.0) \n  // #800080\n  #define purple vec3(128.0 / 255.0, 0.0 / 255.0, 128.0 / 255.0) \n  // #663399\n  #define rebeccapurple vec3(102.0 / 255.0, 51.0 / 255.0, 153.0 / 255.0) \n  // #FF0000\n  #define red vec3(255.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #BC8F8F\n  #define rosybrown vec3(188.0 / 255.0, 143.0 / 255.0, 143.0 / 255.0) \n  // #4169E1\n  #define royalblue vec3(65.0 / 255.0, 105.0 / 255.0, 225.0 / 255.0) \n  // #8B4513\n  #define saddlebrown vec3(139.0 / 255.0, 69.0 / 255.0, 19.0 / 255.0) \n  // #FA8072\n  #define salmon vec3(250.0 / 255.0, 128.0 / 255.0, 114.0 / 255.0) \n  // #F4A460\n  #define sandybrown vec3(244.0 / 255.0, 164.0 / 255.0, 96.0 / 255.0) \n  // #2E8B57\n  #define seagreen vec3(46.0 / 255.0, 139.0 / 255.0, 87.0 / 255.0) \n  // #FFF5EE\n  #define seashell vec3(255.0 / 255.0, 245.0 / 255.0, 238.0 / 255.0) \n  // #A0522D\n  #define sienna vec3(160.0 / 255.0, 82.0 / 255.0, 45.0 / 255.0) \n  // #C0C0C0\n  #define silver vec3(192.0 / 255.0, 192.0 / 255.0, 192.0 / 255.0) \n  // #87CEEB\n  #define skyblue vec3(135.0 / 255.0, 206.0 / 255.0, 235.0 / 255.0) \n  // #6A5ACD\n  #define slateblue vec3(106.0 / 255.0, 90.0 / 255.0, 205.0 / 255.0) \n  // #708090\n  #define slategray vec3(112.0 / 255.0, 128.0 / 255.0, 144.0 / 255.0) \n  // #708090\n  #define slategrey vec3(112.0 / 255.0, 128.0 / 255.0, 144.0 / 255.0) \n  // #FFFAFA\n  #define snow vec3(255.0 / 255.0, 250.0 / 255.0, 250.0 / 255.0) \n  // #00FF7F\n  #define springgreen vec3(0.0 / 255.0, 255.0 / 255.0, 127.0 / 255.0) \n  // #4682B4\n  #define steelblue vec3(70.0 / 255.0, 130.0 / 255.0, 180.0 / 255.0) \n  // #D2B48C\n  #define tan_color vec3(210.0 / 255.0, 180.0 / 255.0, 140.0 / 255.0) \n  // #008080\n  #define teal vec3(0.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #D8BFD8\n  #define thistle vec3(216.0 / 255.0, 191.0 / 255.0, 216.0 / 255.0) \n  // #FF6347\n  #define tomato vec3(255.0 / 255.0, 99.0 / 255.0, 71.0 / 255.0) \n  // #40E0D0\n  #define turquoise vec3(64.0 / 255.0, 224.0 / 255.0, 208.0 / 255.0) \n  // #EE82EE\n  #define violet vec3(238.0 / 255.0, 130.0 / 255.0, 238.0 / 255.0) \n  // #F5DEB3\n  #define wheat vec3(245.0 / 255.0, 222.0 / 255.0, 179.0 / 255.0) \n  // #FFFFFF\n  #define white vec3(255.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #F5F5F5\n  #define whitesmoke vec3(245.0 / 255.0, 245.0 / 255.0, 245.0 / 255.0) \n  // #FFFF00\n  #define yellow vec3(255.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0) \n  // #9ACD32\n  #define yellowgreen vec3(154.0 / 255.0, 205.0 / 255.0, 50.0 / 255.0) \n"},16573:function(e,t,n){"use strict";function*i(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];let i=0,r=0;2===t.length?(i=t[0],r=t[1]):Array.isArray(t[0])?(i=t[0][0],r=t[0][1]):(i=t[0].x,r=t[0].y);let a=0,o=0,s=0,l={get i(){return a},get x(){return o},get y(){return s},get tx(){return o/(i-1)},get ty(){return s/(r-1)}};for(s=0;s<r;s++)for(o=0;o<i;o++)yield l,a++}function*r(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];let i=0,r=0,a=0;3===t.length?(i=t[0],r=t[1],a=t[2]):Array.isArray(t[0])?(i=t[0][0],r=t[0][1],a=t[0][2]):(i=t[0].x,r=t[0].y,a=t[0].z);let o=0,s=0,l=0,c=0,d={get i(){return o},get x(){return s},get y(){return l},get z(){return c},get tx(){return s/(i-1)},get ty(){return l/(r-1)},get tz(){return c/(a-1)}};for(c=0;c<a;c++)for(l=0;l<r;l++)for(s=0;s<i;s++)yield d,o++}n.d(t,{B:function(){return i},K:function(){return r}})},3017:function(e){e.exports={Caption:"style_Caption__FCtWy",hidden:"style_hidden__PEKsD",Github:"style_Github__qs6RR",Close:"style_Close__E3PRZ"}},87387:function(e){e.exports={Billboard:"billboard_Billboard__1od0V",landscape:"billboard_landscape__OR09y",frame:"billboard_frame__m5PEh",full:"billboard_full__0I_hQ"}}},function(e){e.O(0,[2973,5692,6669,4339,5244,4964,6712,6666,5792,2452,7741,2722,9205,2670,3831,4940,4831,8181,9509,8335,4118,2913,9794,2695,2920,7936,1744],function(){return e(e.s=55334)}),_N_E=e.O()}]);