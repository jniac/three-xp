(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5629],{90778:function(e,n,t){Promise.resolve().then(t.bind(t,49004)),Promise.resolve().then(t.bind(t,74722))},49004:function(e,n,t){"use strict";t.d(n,{Art:function(){return I}});var i,r,o,a,l=t(78485),s=t(74831),c=t(12144),d=t(48583),u=t(77405),f=t(54422),v=t(79509),h=t(9710),m=t(98579),g=t(52471),p=t(55445),F=t(55440),y=t(82048),x=t(19687),w=t(28954),b=t(32423),E=t(63425),A=t(58152),C=t(1060);function k(){let{ref:e}=(0,d.Nv)(function*(e){let n=function(e){let{width:n=window.innerWidth,height:t=window.innerHeight,pixelRatio:i=window.devicePixelRatio}=e;i=1;let r=new g.WebGLRenderer({antialias:!0});r.setSize(n,t),r.setPixelRatio(i);let o=new g.PerspectiveCamera(75,n/t,.1,1e3);o.position.z=4.7,o.near=o.position.z-2.4,o.far=o.position.z+1,o.updateProjectionMatrix();let a=new g.Scene,l=new g.Group;a.add(l);let s=new g.TorusKnotGeometry(2,1.02,1024,512),c=new g.TorusKnotGeometry(2,.9,1024,512);c.computeBoundingSphere(),c.computeBoundingBox();let d=new g.Mesh(s,new g.MeshBasicMaterial({color:16776960,side:g.DoubleSide}));l.add(d);let u=new g.Mesh(new g.TorusKnotGeometry(2,.25,1024,512),new g.MeshBasicMaterial({color:16711935,side:g.DoubleSide}));d.add(u);let v=new g.Mesh(new g.TorusKnotGeometry(2,.35,1024,512),new g.MeshBasicMaterial({color:16711935,side:g.DoubleSide}));d.add(v);let m={camera:o,knotWrapper:l,knot:d,knotGeometry1:s,knotGeometry2:c},k=new g.WebGLRenderTarget(n*i,t*i,{depthBuffer:!0,depthTexture:new g.DepthTexture(n*i,t*i,g.UnsignedShortType)});function D(e){let{r:n,g:t,b:i}=new g.Color(e);return"vec3(".concat(n.toFixed(3),", ").concat(t.toFixed(3),", ").concat(i.toFixed(3),")")}let _=new g.ShaderMaterial({uniforms:{depthTexture:{value:k.depthTexture},cameraNear:{value:o.near},cameraFar:{value:o.far}},vertexShader:"\n      varying vec2 vUv;\n  \n      void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n      }\n    ",fragmentShader:"\n      ".concat(A.g,"\n      ").concat(C.i,"\n  \n      vec3[] COLORS = vec3[](\n        aliceblue,\n        ").concat(D("#471864"),",\n        aqua,\n        aquamarine,\n        ").concat(D("#c8d50d"),"\n      );\n      int COLORS_COUNT = 5;\n  \n      uniform sampler2D depthTexture;\n      uniform float cameraNear;\n      uniform float cameraFar;\n      varying vec2 vUv;\n  \n      float lines(float x) {\n        // Inside your fragment shader\n        float lineWidth = 0.03; // Adjust line width to what you need\n        float edgeSmoothness = 0.01; // Controls the smooth transition around the line edge\n  \n        // Get the position in the UV space (assuming you're using UV coordinates)\n  \n  \n        // Calculate the fract values to simulate lines\n        float linePattern = 1.0 - fract(x * 20.0); // 10.0 determines the spacing of the lines\n  \n        // Use smoothstep to soften the edge of the line\n        float line = smoothstep(lineWidth - edgeSmoothness, lineWidth + edgeSmoothness, linePattern);\n  \n        return line;\n      }\n  \n      vec3 removeGamma(vec3 color) {\n        return pow(color, vec3(2.2));  // Linearize color\n      }\n  \n      vec3 applyGamma(vec3 color) {\n        return pow(color, vec3(1.0 / 2.2));  // Apply gamma\n      }\n  \n      float linearizeDepth(float depth) {\n        float z = depth * 2.0 - 1.0; // Back to NDC\n        return (2.0 * cameraNear * cameraFar) / (cameraFar + cameraNear - z * (cameraFar - cameraNear));\n      }\n  \n      void main() {\n        float depth = texture2D(depthTexture, vUv).r;\n        float linearDepth = linearizeDepth(depth);\n        // gl_FragColor = vec4(vec3(linearDepth), 1.0);\n        // gl_FragColor = vec4(vec3(depth), 1.0);\n        // gl_FragColor = vec4(vUv, 1.0, 1.0);\n  \n        float x = 1.0 - depth;\n        x *= float(COLORS_COUNT);\n        float f = 1.0 - fract(x);\n        int i = int(floor(x));\n        vec3 color1 = COLORS[i];\n        vec3 color2 = COLORS[(i + COLORS_COUNT - 1) % COLORS_COUNT];\n  \n        vec3 color = mix(color1, color2, easeInOut4(f));\n        // color *= mix(0.8, 1.1, f * f * f);\n  \n        color = 1.0 - color;\n  \n        gl_FragColor.a = 1.0;\n        gl_FragColor.rgb = color;\n        // gl_FragColor.rgb *= lines(depth);\n      }\n    ")}),B=new g.PlaneGeometry(2,2),P=new g.Mesh(B,_),S=new g.OrthographicCamera(-1,1,1,-1,0,1),O=new p.x(r),T=new y.C(P,S);O.addPass(T);let L=new x.T(w.C);L.material.uniforms.resolution.value.set(1/n,1/t),O.addPass(L);let R=new F.v;O.addPass(R);let j=h.vB.current();function I(){r.dispose(),r.domElement.remove(),k.dispose(),O.dispose(),j.destroy()}return j.set({activeDuration:60}),j.onTick(e=>{E.fw.core.updateInstances(e.deltaTime),r.setRenderTarget(k),r.render(a,o),r.setRenderTarget(null),O.render()}),{renderer:r,scene:a,camera:o,artParts:m,resize:function(e,n){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:window.devicePixelRatio;r.setSize(e,n),r.setPixelRatio(t),o.aspect=e/n,o.updateProjectionMatrix(),k.setSize(e*t,n*t),O.setSize(e,n),O.setPixelRatio(t),L.material.uniforms.resolution.value.set(1/e,1/n)},init:function*(){yield(0,b.s)(j.requestActivation),yield I,yield f.v.on("REQUIRE:ART_PARTS",e=>{e.payloadAssign(m)})},destroy:I}}({width:e.clientWidth,height:e.clientHeight});yield*n.init(),e.appendChild(n.renderer.domElement),yield(0,c.f)(e,{onSize:e=>{n.resize(e.size.x,e.size.y)}}),yield()=>n.renderer.domElement.remove()},[]);return(0,l.jsx)("div",{ref:e,className:"absolute inset-0"})}var D=t(28142),_=t(27275);let B=["#452E00","#F8FEF0","#FF0000","#BC0172","#AE9DFF"];function P(){return{lineShapeObs:new v.Observable("circle")}}function S(){let{ref:e}=(0,d.Nv)(function*(e){let n=e.querySelector("circle"),t=new v.ObservableNumber(0);yield t.onPass("through",5,()=>{t.passed("above",5)?(E.fw.during({target:"CallToAction:Fade",duration:1}).onUpdate(n=>{let{progress:t}=n,i=E.fw.ease("out3")(t);e.setAttribute("opacity",i.toFixed(3))}),E.fw.during({target:"CallToAction:Scale",duration:3}).onUpdate(e=>{let{progress:t,complete:i}=e;t=i?1:2*t%1;let r=E.fw.ease("out3")(t),o=Math.sin(r*Math.PI);n.setAttribute("opacity",o.toFixed(3)),n.setAttribute("r",(0,u.t7)(200,300,r).toFixed(3))})):E.fw.during({target:"CallToAction:Fade",duration:.2}).onUpdate(n=>{let{progress:t}=n,i=E.fw.ease("inOut3")(t);e.setAttribute("opacity",(1-i).toFixed(3))})}),yield(0,s.w)(document.documentElement,{onChange:()=>{t.set(0)},onDown:()=>{t.set(0)}}),yield h.vB.current().onTick(e=>{t.increment(e.deltaTime),t.passed("above",15)&&t.set(0)})},[]);return(0,l.jsx)("g",{ref:e,children:(0,l.jsx)("circle",{r:150,fill:"none",stroke:"white",strokeWidth:1.5,opacity:0})})}function O(){let e=(0,_.useMemo)(P,[]),{ref:n}=(0,d.Nv)(function*(n){let t=n.querySelector("svg"),i=[...t.querySelectorAll("circle")],r=[...t.querySelectorAll("polygon")];yield f.v.on("REQUIRE:ART_PARTS",n=>{n.payloadAssign(e)});let{lineShapeObs:o}=e;o.onChange({executeImmediately:!0},e=>{"circle"===e?(t.querySelector(".rectangles").setAttribute("style","display: none"),t.querySelector(".circles").removeAttribute("style")):(t.querySelector(".rectangles").removeAttribute("style"),t.querySelector(".circles").setAttribute("style","display: none"))});let a=new v.ObservableNumber(0),l=new v.ObservableNumber(120),c=new g.Vector2,d=i.map(()=>new g.Vector2);yield(0,s.w)(document.documentElement,{onChange:e=>{},onDrag:e=>{let{x:t,y:i}=e.position,r=n.getBoundingClientRect();c.x=(0,u.a2)(t,r.left,r.right,-512,512),c.y=(0,u.a2)(i,r.top,r.bottom,-512,512)},onDown:()=>{a.set(0),l.set(84),c.set(0,0);for(let e=0;e<20;e++)d[e].copy(c)}}),yield h.vB.current().onTick(e=>{a.increment(e.deltaTime);let n=a.get(),t=n<1?120:0,o=n<1?.999:(0,u.a2)(n,1,2,0,.9);l.exponentialGrow(t,[o,.2],e.deltaTime);for(let e=0;e<20;e++){let n=i[e],t=d[e];t.lerp(0===e?c:d[e-1],.1),n.setAttribute("cx",t.x.toString()),n.setAttribute("cy",t.y.toString()),n.setAttribute("stroke-width",l.get().toFixed(3));let o=r[e];o.setAttribute("transform","translate(".concat(t.x,",").concat(t.y,")")),o.setAttribute("stroke-width",l.get().toFixed(3))}})},[20]);return(0,l.jsx)("div",{ref:n,className:"absolute inset-0",children:(0,l.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"-512 -512 1024 1024",className:"w-full h-full",children:[(0,l.jsx)("g",{className:"circles",style:{display:e.lineShapeObs.is("circle")?"":"none"},children:Array.from({length:20}).map((e,n)=>(0,l.jsx)("circle",{cx:"0",cy:"0",r:120*(.99*n+.25),fill:"none",stroke:B[(n+1)%B.length],strokeWidth:120},n))}),(0,l.jsx)("g",{className:"rectangles",style:{display:e.lineShapeObs.is("rectangle")?"":"none"},children:Array.from({length:20}).map((e,n)=>{D.T.seed(n+4);let t=(n+.25)*238;return(0,l.jsx)("polygon",{points:function(){let{cx:e=0,cy:n=0,r:t=1,count:i=3,turnOffset:r=0}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=[];for(let a=0;a<i;a++){let l=(a/i+r)*Math.PI*2,s=e+t*Math.cos(l),c=n+t*Math.sin(l);o.push("".concat(s.toFixed(3),",").concat(c.toFixed(3)))}return o.join(" ")}({count:4,r:t*Math.SQRT1_2}),fill:"none",stroke:D.T.pick(B,null,{indexOffset:1}),strokeWidth:120},n)})}),(0,l.jsx)(S,{})]})})}(i=o||(o={})).Circle="circle",i.Rectangle="rectangle";var T=t(3017),L=t.n(T);function R(){return(0,d.sv)(function*(){let e=f.v.send("REQUIRE:ART_PARTS").payload,{camera:n,knotWrapper:t,knot:i,lineShapeObs:r}=e;Object.assign(window,{artParts:e});let a=new v.Observable(0);yield(0,s.w)(document.documentElement,{onDown:e=>{a.set((a.get()+1)%3)}}),a.onChange(n=>{switch(r.set(r.get()===o.Circle?o.Rectangle:o.Circle),n){case 0:i.geometry=e.knotGeometry1;break;case 1:{let n=Math.random()*Math.PI*.4;i.geometry=e.knotGeometry2,i.rotation.x+=n,i.rotation.y+=n,i.rotation.z+=n;break}case 2:i.geometry=e.knotGeometry2}}),yield h.vB.current().onTick(e=>{switch(a.value){case 0:{i.rotation.x=0,i.rotation.y=0,i.rotation.z+=.033*e.deltaTime;let r=(0,u.lw)(.05*e.time),o=(0,u.t7)(.9,1.1,r);t.scale.set(o,o,1),n.position.z=(0,u.t7)(4.9,4.7,r);break}case 1:i.rotation.x+=.05*e.deltaTime,i.rotation.y+=.05*e.deltaTime,i.rotation.z+=.0166*e.deltaTime,t.scale.set(1.4,1.4,1),n.position.z=4.5;break;case 2:i.rotation.x+=-.05*e.deltaTime,i.rotation.y+=-.05*e.deltaTime,i.rotation.z+=.05*e.deltaTime,t.scale.set(1.8,1.8,2),n.position.z=-1}})},[]),(0,l.jsxs)("div",{className:L().Art,children:[(0,l.jsx)(k,{}),(0,l.jsx)(O,{})]})}function j(){let{ref:e}=(0,d.Nv)(function*(e){yield(0,c.f)(document.documentElement,{onSize:n=>{let{size:{x:t,y:i}}=n;!1==t>i?e.style.display="none":e.style.display=""}});let n=new v.ObservableNumber(0);yield h.vB.current().onTick(t=>{n.increment(t.deltaTime),e.classList.toggle(L().hidden,n.get()>1)}),yield(0,s.w)(document.documentElement,{onDown:()=>{n.set(0)},onChange:()=>{n.set(0)}})},[]);return(0,l.jsx)("div",{ref:e,className:"".concat(L().Caption," pointer-through"),children:(0,l.jsxs)("div",{className:"flex flex-row items-center",children:[(0,l.jsxs)("span",{children:["Press ",(0,l.jsx)("kbd",{style:{color:B[3]},children:"F"})," to toggle fullscreen."]}),(0,l.jsx)("span",{className:L().Github,style:{color:B[2]},children:(0,l.jsx)("a",{href:"https://github.com/jniac/three-xp",children:"Github"})}),(0,l.jsx)("span",{className:L().Close,style:{color:B[4]},onPointerDown:n=>{"A"!==n.target.tagName&&(n.preventDefault(),n.stopPropagation(),e.current.style.display="none")}})]})})}function I(){return(0,l.jsxs)("div",{children:[(0,l.jsx)(m.V,{children:(0,l.jsx)(R,{})}),(0,l.jsx)("div",{className:"absolute-through",children:(0,l.jsx)(j,{})})]})}(r=a||(a={}))[r.Static=0]="Static",r[r.Rotating=1]="Rotating",r[r.RotatingCloseUp=2]="RotatingCloseUp"},98579:function(e,n,t){"use strict";t.d(n,{V:function(){return u}});var i=t(78485),r=t(27275),o=t(37457),a=t(12144),l=t(48583),s=t(87387),c=t.n(s);let d=[c().frame,c().full];function u(e){let[n,t]=(0,r.useState)(0),{ref:s}=(0,l.Nv)(function*(e){yield(0,a.f)(e,{onSize:n=>{let{x:t,y:i}=n.size;e.classList.toggle(c().landscape,t>i)}});let n=!1;yield(0,o.p)(document.documentElement,[[{key:"f",noModifiers:!0},i=>{i.event.preventDefault(),document.fullscreenElement!==e?(e.requestFullscreen(),n=!1):!1===n?(n=!0,t(1)):(document.exitFullscreen(),t(0))}]])},[]),{children:u,className:f}=e;return(0,i.jsx)("div",{ref:s,className:[c().Billboard,c().landscape,d[n],null!=f?f:""].join(" "),children:u})}},74722:function(e,n,t){"use strict";t.d(n,{Leak:function(){return a}});var i=t(40855),r=t(79509),o=t(28142);function a(){return Object.assign(window,{...r,...i,PRNG:o.T}),null}},32423:function(e,n,t){"use strict";function i(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];let[i,r]=1===n.length?[window,n[0]]:n,o=()=>{r()};return i.addEventListener("mousemove",o,{passive:!0}),i.addEventListener("mousedown",o,{passive:!0}),i.addEventListener("mouseup",o,{passive:!0}),i.addEventListener("touchstart",o,{passive:!0}),i.addEventListener("touchmove",o,{passive:!0}),i.addEventListener("wheel",o,{passive:!0}),i.addEventListener("keydown",o,{passive:!0}),i.addEventListener("keyup",o,{passive:!0}),window.addEventListener("resize",o,{passive:!0}),{destroy:()=>{i.removeEventListener("mousemove",o),i.removeEventListener("mousedown",o),i.removeEventListener("mouseup",o),i.removeEventListener("touchstart",o),i.removeEventListener("touchmove",o),i.removeEventListener("wheel",o),i.removeEventListener("keydown",o),i.removeEventListener("keyup",o),window.removeEventListener("resize",o)}}}t.d(n,{s:function(){return i}})},37457:function(e,n,t){"use strict";function i(e,n){return"*"===n||("string"==typeof n?n===e:n instanceof RegExp?n.test(e):"function"==typeof n&&n(e))}t.d(n,{p:function(){return a}});let r={preventDefault:!1,strictTarget:void 0},o={key:"*",keyCaseInsensitive:!0,code:"*",noModifiers:!1,modifiers:""};function a(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];let[a,l,s]=1===n.length?[document.body,{},n[0]]:2===n.length?[n[0],{},n[1]]:n,{preventDefault:c}={...r,...l},d=e=>{var n;if((null!==(n=l.strictTarget)&&void 0!==n?!!n:a===document.body)&&e.target!==a)return;let{ctrlKey:t,altKey:r,shiftKey:d,metaKey:u}=e,f={event:e,modifiers:{ctrl:t,alt:r,shift:d,meta:u}};for(let n=0,a=s.length;n<a;n++){let[a,l]=s[n],{key:v,keyCaseInsensitive:h,code:m,noModifiers:g,modifiers:p}=function(e){let n="string"==typeof e?{...o,key:e}:{...o,...e};return n.keyCaseInsensitive&&"string"==typeof n.key&&(n.key=n.key.toLowerCase()),n}(a);Object.values({key:i(h?e.key.toLowerCase():e.key,v),code:i(e.code,m),noModifiers:!g||!1===t&&!1===r&&!1===d&&!1===u,modifiers:function(e,n){let{ctrlKey:t,altKey:i,shiftKey:r,metaKey:o}=e;if("function"==typeof n)return n({ctrl:t,alt:i,shift:r,meta:o});let{ctrl:a=!1,alt:l=!1,shift:s=!1,meta:c=!1}=Object.fromEntries(n.split("-").map(e=>[e,!0]));return a===t&&l===i&&s===r&&c===o}(e,p)}).every(Boolean)&&(c&&e.preventDefault(),l(f))}};return a.addEventListener("keydown",d,{passive:!1}),{destroy:()=>{a.removeEventListener("keydown",d)}}}},12144:function(e,n,t){"use strict";let i;t.d(n,{f:function(){return l}});let r=new WeakMap,o=(i=()=>{let e=new WeakMap;return{resizeObserver:new ResizeObserver(n=>{for(let i of n){var t;null===(t=e.get(i.target))||void 0===t||t(i)}}),resizeObserverMap:e}},()=>{let e=r.get(i);if(void 0===e){let e=i();return r.set(i,e),e}return e});class a{get aspect(){return this.size.x/this.size.y}constructor(e,n){this.element=e,this.size=n}}function l(e,n){let{onSize:t}=function(e){if("function"==typeof e)return{onSize:e};let{onSize:n=()=>{}}=null!=e?e:{};return{onSize:n}}(n),i=new DOMPoint(0,0);if(e instanceof Window){let n=()=>{i.x=window.innerWidth,i.y=window.innerHeight,t(new a(e,i))};return e.addEventListener("resize",n),n(),{destroy:()=>{e.removeEventListener("resize",n)}}}{let{resizeObserver:n,resizeObserverMap:r}=o();return n.observe(e),r.set(e,n=>{i.x=n.contentRect.width,i.y=n.contentRect.height,t(new a(e,i))}),{destroy:()=>n.unobserve(e)}}}},26917:function(e,n,t){"use strict";t.d(n,{l:function(){return i}});let i="\n#ifndef GLSL_BASIC\n#define GLSL_BASIC\n\nfloat clamp01(float x) {\n  return x < 0.0 ? 0.0 : x > 1.0 ? 1.0 : x;\n}\n\n#endif\n"},58152:function(e,n,t){"use strict";t.d(n,{g:function(){return i}});let i="\n  // #F0F8FF\n  #define aliceblue vec3(240.0 / 255.0, 248.0 / 255.0, 255.0 / 255.0) \n  // #FAEBD7\n  #define antiquewhite vec3(250.0 / 255.0, 235.0 / 255.0, 215.0 / 255.0) \n  // #00FFFF\n  #define aqua vec3(0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #7FFFD4\n  #define aquamarine vec3(127.0 / 255.0, 255.0 / 255.0, 212.0 / 255.0) \n  // #F0FFFF\n  #define azure vec3(240.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #F5F5DC\n  #define beige vec3(245.0 / 255.0, 245.0 / 255.0, 220.0 / 255.0) \n  // #FFE4C4\n  #define bisque vec3(255.0 / 255.0, 228.0 / 255.0, 196.0 / 255.0) \n  // #000000\n  #define black vec3(0.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #FFEBCD\n  #define blanchedalmond vec3(255.0 / 255.0, 235.0 / 255.0, 205.0 / 255.0) \n  // #0000FF\n  #define blue vec3(0.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0) \n  // #8A2BE2\n  #define blueviolet vec3(138.0 / 255.0, 43.0 / 255.0, 226.0 / 255.0) \n  // #A52A2A\n  #define brown vec3(165.0 / 255.0, 42.0 / 255.0, 42.0 / 255.0) \n  // #DEB887\n  #define burlywood vec3(222.0 / 255.0, 184.0 / 255.0, 135.0 / 255.0) \n  // #5F9EA0\n  #define cadetblue vec3(95.0 / 255.0, 158.0 / 255.0, 160.0 / 255.0) \n  // #7FFF00\n  #define chartreuse vec3(127.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0) \n  // #D2691E\n  #define chocolate vec3(210.0 / 255.0, 105.0 / 255.0, 30.0 / 255.0) \n  // #FF7F50\n  #define coral vec3(255.0 / 255.0, 127.0 / 255.0, 80.0 / 255.0) \n  // #6495ED\n  #define cornflowerblue vec3(100.0 / 255.0, 149.0 / 255.0, 237.0 / 255.0) \n  // #FFF8DC\n  #define cornsilk vec3(255.0 / 255.0, 248.0 / 255.0, 220.0 / 255.0) \n  // #DC143C\n  #define crimson vec3(220.0 / 255.0, 20.0 / 255.0, 60.0 / 255.0) \n  // #00FFFF\n  #define cyan vec3(0.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #00008B\n  #define darkblue vec3(0.0 / 255.0, 0.0 / 255.0, 139.0 / 255.0) \n  // #008B8B\n  #define darkcyan vec3(0.0 / 255.0, 139.0 / 255.0, 139.0 / 255.0) \n  // #B8860B\n  #define darkgoldenrod vec3(184.0 / 255.0, 134.0 / 255.0, 11.0 / 255.0) \n  // #A9A9A9\n  #define darkgray vec3(169.0 / 255.0, 169.0 / 255.0, 169.0 / 255.0) \n  // #A9A9A9\n  #define darkgrey vec3(169.0 / 255.0, 169.0 / 255.0, 169.0 / 255.0) \n  // #006400\n  #define darkgreen vec3(0.0 / 255.0, 100.0 / 255.0, 0.0 / 255.0) \n  // #BDB76B\n  #define darkkhaki vec3(189.0 / 255.0, 183.0 / 255.0, 107.0 / 255.0) \n  // #8B008B\n  #define darkmagenta vec3(139.0 / 255.0, 0.0 / 255.0, 139.0 / 255.0) \n  // #556B2F\n  #define darkolivegreen vec3(85.0 / 255.0, 107.0 / 255.0, 47.0 / 255.0) \n  // #FF8C00\n  #define darkorange vec3(255.0 / 255.0, 140.0 / 255.0, 0.0 / 255.0) \n  // #9932CC\n  #define darkorchid vec3(153.0 / 255.0, 50.0 / 255.0, 204.0 / 255.0) \n  // #8B0000\n  #define darkred vec3(139.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #E9967A\n  #define darksalmon vec3(233.0 / 255.0, 150.0 / 255.0, 122.0 / 255.0) \n  // #8FBC8F\n  #define darkseagreen vec3(143.0 / 255.0, 188.0 / 255.0, 143.0 / 255.0) \n  // #483D8B\n  #define darkslateblue vec3(72.0 / 255.0, 61.0 / 255.0, 139.0 / 255.0) \n  // #2F4F4F\n  #define darkslategray vec3(47.0 / 255.0, 79.0 / 255.0, 79.0 / 255.0) \n  // #2F4F4F\n  #define darkslategrey vec3(47.0 / 255.0, 79.0 / 255.0, 79.0 / 255.0) \n  // #00CED1\n  #define darkturquoise vec3(0.0 / 255.0, 206.0 / 255.0, 209.0 / 255.0) \n  // #9400D3\n  #define darkviolet vec3(148.0 / 255.0, 0.0 / 255.0, 211.0 / 255.0) \n  // #FF1493\n  #define deeppink vec3(255.0 / 255.0, 20.0 / 255.0, 147.0 / 255.0) \n  // #00BFFF\n  #define deepskyblue vec3(0.0 / 255.0, 191.0 / 255.0, 255.0 / 255.0) \n  // #696969\n  #define dimgray vec3(105.0 / 255.0, 105.0 / 255.0, 105.0 / 255.0) \n  // #696969\n  #define dimgrey vec3(105.0 / 255.0, 105.0 / 255.0, 105.0 / 255.0) \n  // #1E90FF\n  #define dodgerblue vec3(30.0 / 255.0, 144.0 / 255.0, 255.0 / 255.0) \n  // #B22222\n  #define firebrick vec3(178.0 / 255.0, 34.0 / 255.0, 34.0 / 255.0) \n  // #FFFAF0\n  #define floralwhite vec3(255.0 / 255.0, 250.0 / 255.0, 240.0 / 255.0) \n  // #228B22\n  #define forestgreen vec3(34.0 / 255.0, 139.0 / 255.0, 34.0 / 255.0) \n  // #FF00FF\n  #define fuchsia vec3(255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0) \n  // #DCDCDC\n  #define gainsboro vec3(220.0 / 255.0, 220.0 / 255.0, 220.0 / 255.0) \n  // #F8F8FF\n  #define ghostwhite vec3(248.0 / 255.0, 248.0 / 255.0, 255.0 / 255.0) \n  // #FFD700\n  #define gold vec3(255.0 / 255.0, 215.0 / 255.0, 0.0 / 255.0) \n  // #DAA520\n  #define goldenrod vec3(218.0 / 255.0, 165.0 / 255.0, 32.0 / 255.0) \n  // #808080\n  #define gray vec3(128.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #808080\n  #define grey vec3(128.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #008000\n  #define green vec3(0.0 / 255.0, 128.0 / 255.0, 0.0 / 255.0) \n  // #ADFF2F\n  #define greenyellow vec3(173.0 / 255.0, 255.0 / 255.0, 47.0 / 255.0) \n  // #F0FFF0\n  #define honeydew vec3(240.0 / 255.0, 255.0 / 255.0, 240.0 / 255.0) \n  // #FF69B4\n  #define hotpink vec3(255.0 / 255.0, 105.0 / 255.0, 180.0 / 255.0) \n  // #CD5C5C\n  #define indianred vec3(205.0 / 255.0, 92.0 / 255.0, 92.0 / 255.0) \n  // #4B0082\n  #define indigo vec3(75.0 / 255.0, 0.0 / 255.0, 130.0 / 255.0) \n  // #FFFFF0\n  #define ivory vec3(255.0 / 255.0, 255.0 / 255.0, 240.0 / 255.0) \n  // #F0E68C\n  #define khaki vec3(240.0 / 255.0, 230.0 / 255.0, 140.0 / 255.0) \n  // #E6E6FA\n  #define lavender vec3(230.0 / 255.0, 230.0 / 255.0, 250.0 / 255.0) \n  // #FFF0F5\n  #define lavenderblush vec3(255.0 / 255.0, 240.0 / 255.0, 245.0 / 255.0) \n  // #7CFC00\n  #define lawngreen vec3(124.0 / 255.0, 252.0 / 255.0, 0.0 / 255.0) \n  // #FFFACD\n  #define lemonchiffon vec3(255.0 / 255.0, 250.0 / 255.0, 205.0 / 255.0) \n  // #ADD8E6\n  #define lightblue vec3(173.0 / 255.0, 216.0 / 255.0, 230.0 / 255.0) \n  // #F08080\n  #define lightcoral vec3(240.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #E0FFFF\n  #define lightcyan vec3(224.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #FAFAD2\n  #define lightgoldenrodyellow vec3(250.0 / 255.0, 250.0 / 255.0, 210.0 / 255.0) \n  // #D3D3D3\n  #define lightgray vec3(211.0 / 255.0, 211.0 / 255.0, 211.0 / 255.0) \n  // #D3D3D3\n  #define lightgrey vec3(211.0 / 255.0, 211.0 / 255.0, 211.0 / 255.0) \n  // #90EE90\n  #define lightgreen vec3(144.0 / 255.0, 238.0 / 255.0, 144.0 / 255.0) \n  // #FFB6C1\n  #define lightpink vec3(255.0 / 255.0, 182.0 / 255.0, 193.0 / 255.0) \n  // #FFA07A\n  #define lightsalmon vec3(255.0 / 255.0, 160.0 / 255.0, 122.0 / 255.0) \n  // #20B2AA\n  #define lightseagreen vec3(32.0 / 255.0, 178.0 / 255.0, 170.0 / 255.0) \n  // #87CEFA\n  #define lightskyblue vec3(135.0 / 255.0, 206.0 / 255.0, 250.0 / 255.0) \n  // #778899\n  #define lightslategray vec3(119.0 / 255.0, 136.0 / 255.0, 153.0 / 255.0) \n  // #778899\n  #define lightslategrey vec3(119.0 / 255.0, 136.0 / 255.0, 153.0 / 255.0) \n  // #B0C4DE\n  #define lightsteelblue vec3(176.0 / 255.0, 196.0 / 255.0, 222.0 / 255.0) \n  // #FFFFE0\n  #define lightyellow vec3(255.0 / 255.0, 255.0 / 255.0, 224.0 / 255.0) \n  // #00FF00\n  #define lime vec3(0.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0) \n  // #32CD32\n  #define limegreen vec3(50.0 / 255.0, 205.0 / 255.0, 50.0 / 255.0) \n  // #FAF0E6\n  #define linen vec3(250.0 / 255.0, 240.0 / 255.0, 230.0 / 255.0) \n  // #FF00FF\n  #define magenta vec3(255.0 / 255.0, 0.0 / 255.0, 255.0 / 255.0) \n  // #800000\n  #define maroon vec3(128.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #66CDAA\n  #define mediumaquamarine vec3(102.0 / 255.0, 205.0 / 255.0, 170.0 / 255.0) \n  // #0000CD\n  #define mediumblue vec3(0.0 / 255.0, 0.0 / 255.0, 205.0 / 255.0) \n  // #BA55D3\n  #define mediumorchid vec3(186.0 / 255.0, 85.0 / 255.0, 211.0 / 255.0) \n  // #9370DB\n  #define mediumpurple vec3(147.0 / 255.0, 112.0 / 255.0, 219.0 / 255.0) \n  // #3CB371\n  #define mediumseagreen vec3(60.0 / 255.0, 179.0 / 255.0, 113.0 / 255.0) \n  // #7B68EE\n  #define mediumslateblue vec3(123.0 / 255.0, 104.0 / 255.0, 238.0 / 255.0) \n  // #00FA9A\n  #define mediumspringgreen vec3(0.0 / 255.0, 250.0 / 255.0, 154.0 / 255.0) \n  // #48D1CC\n  #define mediumturquoise vec3(72.0 / 255.0, 209.0 / 255.0, 204.0 / 255.0) \n  // #C71585\n  #define mediumvioletred vec3(199.0 / 255.0, 21.0 / 255.0, 133.0 / 255.0) \n  // #191970\n  #define midnightblue vec3(25.0 / 255.0, 25.0 / 255.0, 112.0 / 255.0) \n  // #F5FFFA\n  #define mintcream vec3(245.0 / 255.0, 255.0 / 255.0, 250.0 / 255.0) \n  // #FFE4E1\n  #define mistyrose vec3(255.0 / 255.0, 228.0 / 255.0, 225.0 / 255.0) \n  // #FFE4B5\n  #define moccasin vec3(255.0 / 255.0, 228.0 / 255.0, 181.0 / 255.0) \n  // #FFDEAD\n  #define navajowhite vec3(255.0 / 255.0, 222.0 / 255.0, 173.0 / 255.0) \n  // #000080\n  #define navy vec3(0.0 / 255.0, 0.0 / 255.0, 128.0 / 255.0) \n  // #FDF5E6\n  #define oldlace vec3(253.0 / 255.0, 245.0 / 255.0, 230.0 / 255.0) \n  // #808000\n  #define olive vec3(128.0 / 255.0, 128.0 / 255.0, 0.0 / 255.0) \n  // #6B8E23\n  #define olivedrab vec3(107.0 / 255.0, 142.0 / 255.0, 35.0 / 255.0) \n  // #FFA500\n  #define orange vec3(255.0 / 255.0, 165.0 / 255.0, 0.0 / 255.0) \n  // #FF4500\n  #define orangered vec3(255.0 / 255.0, 69.0 / 255.0, 0.0 / 255.0) \n  // #DA70D6\n  #define orchid vec3(218.0 / 255.0, 112.0 / 255.0, 214.0 / 255.0) \n  // #EEE8AA\n  #define palegoldenrod vec3(238.0 / 255.0, 232.0 / 255.0, 170.0 / 255.0) \n  // #98FB98\n  #define palegreen vec3(152.0 / 255.0, 251.0 / 255.0, 152.0 / 255.0) \n  // #AFEEEE\n  #define paleturquoise vec3(175.0 / 255.0, 238.0 / 255.0, 238.0 / 255.0) \n  // #DB7093\n  #define palevioletred vec3(219.0 / 255.0, 112.0 / 255.0, 147.0 / 255.0) \n  // #FFEFD5\n  #define papayawhip vec3(255.0 / 255.0, 239.0 / 255.0, 213.0 / 255.0) \n  // #FFDAB9\n  #define peachpuff vec3(255.0 / 255.0, 218.0 / 255.0, 185.0 / 255.0) \n  // #CD853F\n  #define peru vec3(205.0 / 255.0, 133.0 / 255.0, 63.0 / 255.0) \n  // #FFC0CB\n  #define pink vec3(255.0 / 255.0, 192.0 / 255.0, 203.0 / 255.0) \n  // #DDA0DD\n  #define plum vec3(221.0 / 255.0, 160.0 / 255.0, 221.0 / 255.0) \n  // #B0E0E6\n  #define powderblue vec3(176.0 / 255.0, 224.0 / 255.0, 230.0 / 255.0) \n  // #800080\n  #define purple vec3(128.0 / 255.0, 0.0 / 255.0, 128.0 / 255.0) \n  // #663399\n  #define rebeccapurple vec3(102.0 / 255.0, 51.0 / 255.0, 153.0 / 255.0) \n  // #FF0000\n  #define red vec3(255.0 / 255.0, 0.0 / 255.0, 0.0 / 255.0) \n  // #BC8F8F\n  #define rosybrown vec3(188.0 / 255.0, 143.0 / 255.0, 143.0 / 255.0) \n  // #4169E1\n  #define royalblue vec3(65.0 / 255.0, 105.0 / 255.0, 225.0 / 255.0) \n  // #8B4513\n  #define saddlebrown vec3(139.0 / 255.0, 69.0 / 255.0, 19.0 / 255.0) \n  // #FA8072\n  #define salmon vec3(250.0 / 255.0, 128.0 / 255.0, 114.0 / 255.0) \n  // #F4A460\n  #define sandybrown vec3(244.0 / 255.0, 164.0 / 255.0, 96.0 / 255.0) \n  // #2E8B57\n  #define seagreen vec3(46.0 / 255.0, 139.0 / 255.0, 87.0 / 255.0) \n  // #FFF5EE\n  #define seashell vec3(255.0 / 255.0, 245.0 / 255.0, 238.0 / 255.0) \n  // #A0522D\n  #define sienna vec3(160.0 / 255.0, 82.0 / 255.0, 45.0 / 255.0) \n  // #C0C0C0\n  #define silver vec3(192.0 / 255.0, 192.0 / 255.0, 192.0 / 255.0) \n  // #87CEEB\n  #define skyblue vec3(135.0 / 255.0, 206.0 / 255.0, 235.0 / 255.0) \n  // #6A5ACD\n  #define slateblue vec3(106.0 / 255.0, 90.0 / 255.0, 205.0 / 255.0) \n  // #708090\n  #define slategray vec3(112.0 / 255.0, 128.0 / 255.0, 144.0 / 255.0) \n  // #708090\n  #define slategrey vec3(112.0 / 255.0, 128.0 / 255.0, 144.0 / 255.0) \n  // #FFFAFA\n  #define snow vec3(255.0 / 255.0, 250.0 / 255.0, 250.0 / 255.0) \n  // #00FF7F\n  #define springgreen vec3(0.0 / 255.0, 255.0 / 255.0, 127.0 / 255.0) \n  // #4682B4\n  #define steelblue vec3(70.0 / 255.0, 130.0 / 255.0, 180.0 / 255.0) \n  // #D2B48C\n  #define tan_color vec3(210.0 / 255.0, 180.0 / 255.0, 140.0 / 255.0) \n  // #008080\n  #define teal vec3(0.0 / 255.0, 128.0 / 255.0, 128.0 / 255.0) \n  // #D8BFD8\n  #define thistle vec3(216.0 / 255.0, 191.0 / 255.0, 216.0 / 255.0) \n  // #FF6347\n  #define tomato vec3(255.0 / 255.0, 99.0 / 255.0, 71.0 / 255.0) \n  // #40E0D0\n  #define turquoise vec3(64.0 / 255.0, 224.0 / 255.0, 208.0 / 255.0) \n  // #EE82EE\n  #define violet vec3(238.0 / 255.0, 130.0 / 255.0, 238.0 / 255.0) \n  // #F5DEB3\n  #define wheat vec3(245.0 / 255.0, 222.0 / 255.0, 179.0 / 255.0) \n  // #FFFFFF\n  #define white vec3(255.0 / 255.0, 255.0 / 255.0, 255.0 / 255.0) \n  // #F5F5F5\n  #define whitesmoke vec3(245.0 / 255.0, 245.0 / 255.0, 245.0 / 255.0) \n  // #FFFF00\n  #define yellow vec3(255.0 / 255.0, 255.0 / 255.0, 0.0 / 255.0) \n  // #9ACD32\n  #define yellowgreen vec3(154.0 / 255.0, 205.0 / 255.0, 50.0 / 255.0) \n"},1060:function(e,n,t){"use strict";t.d(n,{i:function(){return o}});var i=t(26917);let r=["linear"];for(let e=1;e<=10;e++)r.push("easeIn".concat(e)),r.push("easeOut".concat(e)),r.push("easeInOut".concat(e)),r.push("easeOutIn".concat(e));let o="\n#ifndef GLSL_EASING\n#define GLSL_EASING\n\n".concat(i.l,"\n\nfloat easePow1(float x) {\n  return x;\n}\n\nfloat easePow2(float x) {\n  return x * x;\n}\n\nfloat easePow3(float x) {\n  return x * x * x;\n}\n\nfloat easePow4(float x) {\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow5(float x) {\n  float x0 = x;\n  x *= x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow6(float x) {\n  x *= x * x;\n  return x *= x;\n}\n\nfloat easePow7(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow8(float x) {\n  x *= x;\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow9(float x) {\n  x *= x * x;\n  return x *= x * x;\n}\n\nfloat easePow10(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x * x;\n  return x0 * x;\n}\n\nfloat linear(float x) {\n  return clamp01(x);\n}\n\n").concat(Array.from({length:10},(e,n)=>{let t=n+1;return"\n\nfloat easeIn".concat(t," (float x) {\n  return easePow").concat(t,"(clamp01(x));\n}\nfloat easeOut").concat(t," (float x) {\n  return 1.0 - easePow").concat(t,"(clamp01(1.0 - x));\n}\nfloat easeInOut").concat(t," (float x) {\n  return x < 0.5 \n    ? 0.5 * easePow").concat(t,"(2.0 * x) \n    : 1.0 - 0.5 * easePow").concat(t,"(2.0 * (1.0 - x));\n}\nfloat easeOutIn").concat(t," (float x) {\n  return x < 0.5\n    ? 0.5 * (1.0 - easePow").concat(t,"(1.0 - x * 2.0))\n    : 1.0 - 0.5 * (1.0 - easePow").concat(t,"(2.0 * x - 1.0));\n}\n\n").trim()}).join("\n\n"),"\n\n\n// https://www.desmos.com/calculator/mqou4lf9zc?lang=fr\nfloat easeInOut(float x, float p, float i) {\n  return  x <= 0.0 ? 0.0 :\n          x >= 1.0 ? 1.0 :\n          x <= i ? 1.0 / pow(i, p - 1.0) * pow(x, p) :\n          1.0 - 1.0 / pow(1.0 - i, p - 1.0) * pow(1.0 - x, p);\n}\n\n// https://www.desmos.com/calculator/nrjlezusdv\nfloat easeInThenOut(float x, float p) {\n  return 1.0 - pow(abs(2.0 * x - 1.0), p);\n}\n\n#endif\n")},40855:function(e,n,t){"use strict";function i(e,n){for(let t of e)if(n(t))return!0;return!1}function r(e,n){for(let t of e)if(!n(t))return!1;return!0}function o(e,n,t){let i=[];function r(e){let n=[];return i[e]=n,n}if(void 0!==t)for(let e=0;e<t;e++)r(e);for(let t of e){var o;let e=n(t);(null!==(o=i[e])&&void 0!==o?o:r(e)).push(t)}return i}t.r(n),t.d(n,{every:function(){return r},some:function(){return i},split:function(){return o}})},54422:function(e,n,t){"use strict";t.d(n,{v:function(){return i.v}});var i=t(51886)},51886:function(e,n,t){"use strict";t.d(n,{v:function(){return s}});var i=t(80248);class r{_getId(){return r._idHash.init().update(++this._count).getValue()}_registerObject(e){let n=this._getId();return this._weakMap.set(e,n),n}_registerPrimitive(e){let n=this._getId();return this._map.set(e,n),n}_requirePrimitiveId(e){var n;return null!==(n=this._map.get(e))&&void 0!==n?n:this._registerPrimitive(e)}_requireObjectId(e){var n;return null!==(n=this._weakMap.get(e))&&void 0!==n?n:this._registerObject(e)}_requireArrayId(e){let{_arrayHash:n}=r;for(let t of(n.init(),e.flat(16)))n.update(this.requireId(t));return n.getValue()}requireId(e){return!function(e){if(null==e)return!0;switch(typeof e){case"function":case"object":return!1;default:return!0}}(e)?Array.isArray(e)?this._requireArrayId(e):this._requireObjectId(e):this._requirePrimitiveId(e)}constructor(){this._count=1,this._map=new Map,this._weakMap=new WeakMap}}r._idHash=new i.k,r._arrayHash=new i.k;class o{constructor(e,n){this.filter=e,this.callback=n,this.match="*"===e?()=>!0:"string"==typeof e?n=>n===e:e instanceof RegExp?n=>e.test(n):()=>!1}}let a=new r,l=new Map;class s{setPayload(e){return this.payload=e,this}assignPayload(e){let{overwrite:n=!0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.payload=n?{...this.payload,...e}:{...e,...this.payload},this}payloadAssign(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];return this.assignPayload(...n)}assertPayload(){if(this.payload)return this.payload;throw Error('Message.payloadAssert: assertion failed for message with target "'.concat(this.target,'"'))}constructor(e,n,t){var i;this.id=s.nextId++,this.debug={currentListenerIndex:-1,listenerCount:0},this.targetId=a.requireId(e),this.target=e,this.type=null!=n?n:"message",this.payload=t;let r=(null!==(i=l.get(this.targetId))&&void 0!==i?i:[]).filter(e=>e.match(this.type));for(let e of(this.debug.listenerCount=r.length,r))this.debug.currentListenerIndex++,e.callback(this)}}s.send=function(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];let[i,r,o]=function(e){let[n,...t]=e;if(2===t.length){let[e,{payload:i}]=t;return[n,e,i]}if(1===t.length){let[e]=t;return"string"==typeof e?[n,e]:[n,void 0,e.payload]}return[n]}(n);return new s(i,r,o)},s.on=function(){for(var e,n=arguments.length,t=Array(n),i=0;i<n;i++)t[i]=arguments[i];let[r,s,c]=function(e){if(2===e.length){let[n,t]=e;return[n,"*",t]}return e}(t),d=a.requireId(r),u=new o(s,c);return(null!==(e=l.get(d))&&void 0!==e?e:(()=>{let e=[];return l.set(d,e),e})()).push(u),{destroy:()=>{!function(e,n){let t=l.get(e);if(t){let i=t.indexOf(n);-1!==i&&(t.splice(i,1),0===t.length&&l.delete(e))}}(d,u)}}},s.debug={listenerMap:l,idRegister:a},s.nextId=0},3017:function(e){e.exports={Caption:"style_Caption__FCtWy",hidden:"style_hidden__PEKsD",Github:"style_Github__qs6RR",Close:"style_Close__E3PRZ"}},87387:function(e){e.exports={Billboard:"billboard_Billboard__1od0V",landscape:"billboard_landscape__OR09y",frame:"billboard_frame__m5PEh",full:"billboard_full__0I_hQ"}}},function(e){e.O(0,[2973,5244,5792,4940,4831,9509,4118,2920,7936,1744],function(){return e(e.s=90778)}),_N_E=e.O()}]);