(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9697],{59856:function(e,t,n){Promise.resolve().then(n.t.bind(n,77601,23)),Promise.resolve().then(n.bind(n,1938))},1938:function(e,t,n){"use strict";n.d(t,{Client:function(){return _}});var i=n(41291),r=n(64740),a=n(32678),s=n(75952),o=n(56246),c=n(70928),l=n(62362),u=n(1050),p=n(47804),d=n(73437),f=n(7556),v=n(71441),m=n(27636);class h{constructor(e,t,n,i){this.space=e,this.rect=t,this.uvRect=n,this.scatterCoeff=i,this.r0=m.T.random(),this.r1=m.T.random()}}class x{constructor(e,t){this.props={...x.defaultProps,...t};let{position:n,size:i,scatterPadding:r,sizeOptions:a,seed:s}=this.props,{col:o,row:c}=e.props;m.T.seed(s);let l=m.T.createPicker(a),u=Array.from({length:o}).map(l),p=Array.from({length:c}).map(l),{x:g,y:y}=(0,d.iK)(n),{x:S,y:w}=(0,d.iK)(i),z=new f.T(f.Nm.Horizontal).setSize(S,w).setOffset(g-S/2,y-w/2);for(let e of u){let t=new f.T(f.Nm.Vertical).setSize("".concat(e,"fr")).addTo(z);for(let e of p)new f.T(f.Nm.Horizontal).setSize("".concat(e,"fr")).addTo(t)}z.computeLayout();let A=z.rect,D=[...z.allLeaves({includeSelf:!1})],b=(S+w)/2,M=D.map(e=>{let t=e.rect.clone(),n=t.clone().relativeTo(A),{x:i,y:a}=t.getCenter(),s=(0,v.ii)(.5,1,(Math.abs(i-g)+Math.abs(a-y))/b);return t.centerX+=m.T.between(-r,r)*s,t.centerY+=m.T.between(-r,r)*s,new h(e,t,n,s)});this.root=z,this.nodes=M}}x.defaultProps={seed:87654,position:new r.Vector2(0,0),size:new r.Vector2(3,2),scatterPadding:.1,sizeOptions:[[.5,1],[1,10],[2,2],[3,1]]};var g=n(73987);class y extends r.LineSegments{clear(){return this.points.length=0,this.geometry.setFromPoints(this.points),this}rectangle(e){let{x:t,y:n,width:i,height:a}=g.Ae.from(e),s=i/2,o=a/2,c=new r.Vector2(t-s,n-o),l=new r.Vector2(t+s,n-o),u=new r.Vector2(t+s,n+o),p=new r.Vector2(t-s,n+o);return this.points.push(c,l,l,u,u,p,p,c),this.geometry.setFromPoints(this.points),this}constructor(...e){super(...e),this.points=[]}}var S=n(42685),w=n(64556),z=n(2164),A=n(68392),D=n(89425);class b extends r.Object3D{constructor(){super();let e=new r.HemisphereLight("#ffffff","#926969",1);this.add(e);let t=new r.DirectionalLight("#ffffff",2);this.add(t),t.position.set(2,4,1)}}class M extends r.MeshBasicMaterial{get mapAspect(){return this.uniforms.uMapInfo.value.x}set mapAspect(e){this.uniforms.uMapInfo.value.x=e}getScatteredSize(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new r.Vector2;return e.x=this.uniforms.uScatteredInfo.value.x,e.y=this.uniforms.uScatteredInfo.value.y,e}setScatteredSize(e){this.uniforms.uScatteredInfo.value.x=e.x,this.uniforms.uScatteredInfo.value.y=e.y}get scatteredSize(){return this.getScatteredSize()}set scatteredSize(e){this.setScatteredSize(e)}update(e){this.uniforms.uTime.value+=e*this.uniforms.uDispersion.value.x}constructor(){super({side:r.DoubleSide}),this.uniforms={uTime:{value:0},uDispersion:{value:new r.Vector4(0,-.6,.4,0)},uCenter:{value:new r.Vector3},uMapInfo:{value:new r.Vector4(1,1,.5,.5)},uScatteredInfo:{value:new r.Vector4(1,1,0,0)}},this.onBeforeCompile=e=>S.b.with(e).uniforms(this.uniforms).vertex.top(A.U,z.i,'\n  // sizeMode: 0 for "contain", 1 for "cover"\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect, float sizeMode, vec2 align, vec2 scale) {\n    align.y = 1.0 - align.y; // Flip y-coordinate\n    if ((outerAspect > innerAspect) != (sizeMode == 1.0)) { // XOR condition for mode\n      float scaleFactor = outerAspect / innerAspect;\n      uv.x = (uv.x - align.x) * scaleFactor + align.x; // Adjust x-coordinate\n    } else {\n      float scaleFactor = innerAspect / outerAspect;\n      uv.y = (uv.y - align.y) * scaleFactor + align.y; // Adjust y-coordinate\n    }\n    uv = (uv - align) / scale + align;\n    return uv;\n  }\n\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect, float sizeMode, vec2 align, float scale) {\n    return applyUvSize(uv, outerAspect, innerAspect, sizeMode, align, vec2(scale));\n  }\n\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect, float sizeMode, vec2 align) {\n    return applyUvSize(uv, outerAspect, innerAspect, sizeMode, align, vec2(1.0));\n  }\n\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect, float sizeMode) {\n    return applyUvSize(uv, outerAspect, innerAspect, sizeMode, vec2(0.5));\n  }\n\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect) {\n    return applyUvSize(uv, outerAspect, innerAspect, 1.0);\n  }\n').vertex.top("\n        attribute vec4 aRectUv;\n        attribute vec4 aRand;\n      ").vertex.replace("project_vertex","\n        float duration = lerp(8.0, 1.0, aRand.x * aRand.y * aRand.z);\n        float time = mod(uTime + duration * aRand.x, duration) / duration;\n        float size = easeInThenOut(time, 8.0) * lerp(2.0, 1.0, time * time);\n        transformed *= mix(1.0, size, uDispersion.x);\n\n        vec4 mvPosition = vec4(transformed, 1.0);\n        mvPosition = instanceMatrix * mvPosition;\n        vec2 anchor = mvPosition.xy;\n\n        vec2 delta = instanceMatrix[3].xy - uCenter.xy;\n        float d = length(delta);\n        vec2 v = delta / d;\n        vec3 dispersed;\n        dispersed.xy = anchor + v * lerp(uDispersion.y, uDispersion.z, time) * -d;\n        dispersed.z = lerp(0.2, 0.0, time);\n\n        mvPosition.xyz = mix(mvPosition.xyz, dispersed, uDispersion.x);\n        mvPosition = modelViewMatrix * mvPosition;\n        gl_Position = projectionMatrix * mvPosition;      \n      ").vertex.replace("uv_vertex","\n        #if defined( USE_UV ) || defined( USE_ANISOTROPY )\n          vUv = vec3( uv, 1 ).xy;\n        #endif\n        #ifdef USE_MAP\n          vec2 instanceUv = aRectUv.xy + aRectUv.zw * MAP_UV;\n\n          // vec2 uv, float outerAspect, float innerAspect, float sizeMode, vec2 align, vec2 scale\n          float outerAspect = uScatteredInfo.x / uScatteredInfo.y;\n          float innerAspect = uMapInfo.x;\n          float sizeMode = uMapInfo.y;\n          vec2 align = uMapInfo.zw;\n          instanceUv = applyUvSize(instanceUv, outerAspect, innerAspect, sizeMode, align, vec2(1.0));\n          \n          vMapUv = ( mapTransform * vec3( instanceUv, 1 ) ).xy;\n        #endif\n      ")}}class P extends r.Object3D{static createPlane(e){let{row:t,col:n}=e,i=t*n,a=new r.PlaneGeometry,s=new r.InstancedBufferAttribute(new Float32Array(4*i),4);a.setAttribute("aRectUv",s);let o=new r.InstancedBufferAttribute(new Float32Array(4*i),4);a.setAttribute("aRand",o);for(let e=0;e<i;e++)o.setXYZW(e,m.T.random(),m.T.random(),m.T.random(),m.T.random());let c=new M,l=new r.InstancedMesh(a,c,i);return l.name="plane",l}get count(){return this.internal.count}onTick(e){this.internal.plane.material.update(e.deltaTime)}getDistribution(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new x(this,e)}drawDistribution(e){let{position:t,size:n,scatterPadding:i}=e.props,{x:r,y:a}=(0,d.iK)(t),{x:s,y:o}=(0,d.iK)(n);this.internal.lineHelper.rectangle([r,a,s,o]).rectangle([r,a,s+2*i,o+2*i])}distribute(e){let{count:t,plane:n}=this.internal,{aRectUv:i}=n.geometry.attributes;for(let r=0;r<t;r++){let{rect:t,uvRect:a}=e.nodes[r];n.setMatrixAt(r,(0,w.$)({position:t.getCenter(),scale:t.getSize()})),i.setXYZW(r,a.x,a.y,a.width,a.height)}n.material.setScatteredSize(e.root.rect.getSize())}lerpDistribute(e,t,n){let{count:i,plane:a}=this.internal,{aRectUv:s}=a.geometry.attributes,o=new g.Ae,c=new g.Ae,l=new g.Ae,u=new r.Vector3,p=new r.Vector3;for(let r=0;r<i;r++){let i=e.nodes[r],l=t.nodes[r],d=.3*(1-i.r0*(i.scatterCoeff+.2*l.r0)),f=(0,v.ii)(d,.7+d,n),m=(0,D.xD)(f);o.lerpRectangles(i.rect,l.rect,m),c.lerpRectangles(i.uvRect,l.uvRect,m),a.setMatrixAt(r,(0,w.$)({position:o.getCenter(u),scale:o.getSize(p),rotationY:(l.r0<.5?0:1)*m*Math.PI*2,rotationZ:.3*Math.sin(f*Math.PI)*(-1+2*i.r0)})),s.setXYZW(r,c.x,c.y,c.width,c.height)}let d=(0,D.uN)((0,v.ii)(.3,.7,n));l.lerpRectangles(e.root.rect,t.root.rect,d),a.material.setScatteredSize(l.getSize()),a.material.uniforms.uCenter.value.copy(l.getCenter()),a.instanceMatrix.needsUpdate=!0,s.needsUpdate=!0}constructor(e={}){super(),this.transition=0;let t={...P.defaultProps,...e},{col:n,row:i}=t,r=P.createPlane(t);(0,o.bB)(r,this);let a=new y;(0,o.bB)(a,this);let s=new b;(0,o.bB)(s,this),this.internal={count:i*n,plane:r,lineHelper:a,lightSetup:s},this.props=t,this.distribute(this.getDistribution())}}P.displayName="ScatteredPlane",P.defaultProps={row:20,col:30,imageAspect:1,imageResizeMode:"cover"},P.transition_meta="Range(0, 1)";class U extends r.Mesh{constructor(){super(new r.IcosahedronGeometry(40,1),new r.MeshBasicMaterial({color:"#aeb4e9",side:r.BackSide})),this.onBeforeRender=(e,t,n)=>{this.position.copy(n.position)}}}function T(){let e=(0,l.jE)();return(0,p._v)("ScatteredDemo",async function*(t,n){(0,o.bB)(new U,t),(0,o.bB)(new r.Mesh(new a.w,new s.P),t);let i=await n.loader.load("/images/DebugTexture.png");i.colorSpace=r.SRGBColorSpace;let l=(0,o.bB)(new P,t);l.internal.plane.material.map=i,l.internal.plane.material.mapAspect=i.image.width/i.image.height;let u=l.getDistribution({seed:4789,position:[-2,0],size:[2,3]}),p=l.getDistribution({seed:3249,position:[2,0],size:[2,4]});l.drawDistribution(u),l.drawDistribution(p),t.userData.transition=0,t.userData.transition_meta="Slider(0, 1, step: 0.01)",t.userData.dispX=l.internal.plane.material.uniforms.uDispersion.value.x,t.userData.dispX_meta="\n      Name(disp.x)\n      Slider(0, 1, step: any)\n    ",t.userData.dispY=l.internal.plane.material.uniforms.uDispersion.value.y,t.userData.dispY_meta="\n      Name(disp.y)\n      Slider(-1, 1, step: any)\n    ",t.userData.dispZ=l.internal.plane.material.uniforms.uDispersion.value.z,t.userData.dispZ_meta="\n      Name(disp.z)\n      Slider(-1, 1, step: any)\n    ",t.userData.scale=1,t.userData.scale_meta="Slider(-1, 1, pow: 10, step: .1)",yield n.onTick(e=>{l.lerpDistribute(u,p,t.userData.transition),l.internal.plane.material.uniforms.uDispersion.value.x=t.userData.dispX,l.internal.plane.material.uniforms.uDispersion.value.y=t.userData.dispY,l.internal.plane.material.uniforms.uDispersion.value.z=t.userData.dispZ,l.scale.setScalar(t.userData.scale)}),(0,c.v)(e,t),e.sceneSelection.add("Select ScatteredDemo",t)},[]),null}function R(){return(0,p.Ky)(function*(e){e.useOrbitControls({position:[-2,0,8],target:[-2,0,0]})},[]),null}function I(e){let{children:t}=e,n=(0,p.Ky)();return(0,i.jsx)(l.KU,{three:n,backgroundColor:"#26163c4f",children:t})}function _(){return(0,i.jsxs)("div",{className:"layer thru",children:[(0,i.jsx)(u.Leak,{}),(0,i.jsx)(p.H7,{children:(0,i.jsxs)(I,{children:[(0,i.jsx)("div",{className:"layer thru px-3 py-2 flex flex-col gap-4",children:(0,i.jsx)("h1",{className:"text-4xl",children:"ScatteredPlane"})}),(0,i.jsx)(R,{}),(0,i.jsx)(T,{})]})})]})}},1050:function(e,t,n){"use strict";n.d(t,{Leak:function(){return s}});var i=n(80590),r=n(45003),a=n(27636);function s(){return Object.assign(window,{...r,...i,PRNG:a.T}),null}},89425:function(e,t,n){"use strict";n.d(t,{C:function(){return m},EJ:function(){return a},JT:function(){return y},JZ:function(){return d},Kt:function(){return u},SU:function(){return c},TY:function(){return x},Vq:function(){return p},b6:function(){return o},kg:function(){return s},m3:function(){return l},ry:function(){return v},uN:function(){return h},uw:function(){return f},xD:function(){return g}});let i=e=>e<0?0:e>1?1:e,r=e=>i(e),a=r,s=e=>(e=i(e))*e,o=e=>(e=i(e))*e*e,c=e=>(e=i(e))*e*e*e,l=e=>(e=i(e))*e*e*e*e,u=r,p=e=>1-(e=i(1-e))*e,d=e=>1-(e=i(1-e))*e*e,f=e=>1-(e=i(1-e))*e*e*e,v=e=>1-(e=i(1-e))*e*e*e*e,m=r,h=e=>e<0?0:e>1?1:e<.5?2*e*e:1-2*(e=1-e)*e,x=e=>e<0?0:e>1?1:e<.5?4*e*e*e:1-4*(e=1-e)*e*e,g=e=>e<0?0:e>1?1:e<.5?8*e*e*e*e:1-8*(e=1-e)*e*e*e,y=e=>e<0?0:e>1?1:e<.5?16*e*e*e*e*e:1-16*(e=1-e)*e*e*e*e}},function(e){e.O(0,[5890,5244,8423,3662,7579,893,7601,2290,1943,6626,6028,7112,3679,900,9111,1658,3510,1744],function(){return e(e.s=59856)}),_N_E=e.O()}]);