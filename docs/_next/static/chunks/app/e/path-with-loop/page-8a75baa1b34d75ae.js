(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[307],{54853:function(e,r,t){Promise.resolve().then(t.bind(t,96222))},21546:function(e,r,t){"use strict";t.d(r,{b:function(){return b},R:function(){return w}});var n=t(81463),a=t(82983);let o=["common","uv_pars_vertex","displacementmap_pars_vertex","color_pars_vertex","fog_pars_vertex","normal_pars_vertex","morphtarget_pars_vertex","skinning_pars_vertex","shadowmap_pars_vertex","logdepthbuf_pars_vertex","clipping_planes_pars_vertex","uv_vertex","color_vertex","morphcolor_vertex","beginnormal_vertex","morphnormal_vertex","skinbase_vertex","skinnormal_vertex","defaultnormal_vertex","normal_vertex","begin_vertex","morphtarget_vertex","skinning_vertex","displacementmap_vertex","project_vertex","logdepthbuf_vertex","clipping_planes_vertex","worldpos_vertex","shadowmap_vertex","fog_vertex","common","packing","dithering_pars_fragment","color_pars_fragment","uv_pars_fragment","map_pars_fragment","alphamap_pars_fragment","alphatest_pars_fragment","alphahash_pars_fragment","aomap_pars_fragment","lightmap_pars_fragment","emissivemap_pars_fragment","iridescence_fragment","cube_uv_reflection_fragment","envmap_common_pars_fragment","envmap_physical_pars_fragment","fog_pars_fragment","lights_pars_begin","normal_pars_fragment","lights_physical_pars_fragment","transmission_pars_fragment","shadowmap_pars_fragment","bumpmap_pars_fragment","normalmap_pars_fragment","clearcoat_pars_fragment","iridescence_pars_fragment","roughnessmap_pars_fragment","metalnessmap_pars_fragment","logdepthbuf_pars_fragment","clipping_planes_pars_fragment","clipping_planes_fragment","logdepthbuf_fragment","map_fragment","color_fragment","alphamap_fragment","alphatest_fragment","alphahash_fragment","roughnessmap_fragment","metalnessmap_fragment","normal_fragment_begin","normal_fragment_maps","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","emissivemap_fragment","lights_physical_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","aomap_fragment","transmission_fragment","opaque_fragment","tonemapping_fragment","colorspace_fragment","fog_fragment","premultiplied_alpha_fragment","dithering_fragment"];var i=t(42773);class s{static from(e,r){if(r instanceof i.Observable){if("number"==typeof r.value)return new s(e,r);throw Error("Observable value must be a number")}let t=typeof r;return"object"===t&&r.constructor===Object&&"value"in r?new s(e,r):"string"===t?new s(e,{value:new a.Color(r)}):new s(e,{value:r})}get value(){return this.target.value}computeDeclaration(){let e=this.name,r=this.target.value;if("number"==typeof r)return"uniform float ".concat(e,";");if(r.isVector2)return"uniform vec2 ".concat(e,";");if(r.isVector3||r.isColor)return"uniform vec3 ".concat(e,";");if(r.isVector4||r.isQuaternion)return"uniform vec4 ".concat(e,";");if(r.isMatrix3)return"uniform mat3 ".concat(e,";");if(r.isMatrix4)return"uniform mat4 ".concat(e,";");if(r.isTexture)return r.isCubeTexture?"uniform samplerCube ".concat(e,";"):"uniform sampler2D ".concat(e,";");if(r instanceof Float32Array)return"uniform float ".concat(e,"[").concat(r.length,"];");throw console.log("unhandled value:",r),Error('unhandled value: "'.concat(null==r?void 0:r.constructor.name,'"'))}constructor(e,r){this.name=e,this.target=r}}function c(){let e=(0,n._)(["","s*",""],["","\\s*",""]);return c=function(){return e},e}let m=null,l=e=>(m=e,b),p="// ShaderForge (injected code) ->",f="// <- ShaderForge",_=e=>"".concat(p,"\n").concat(e.trim(),"\n").concat(f),u=e=>{let r=e=>e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),t=RegExp(String.raw(c(),r(f),r(p)),"g");return e.replaceAll(t,"")};class g{getPattern(e){let{throwError:r=!0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t="#include <".concat(e,">"),n=this.type;if(r&&!1===m[n].includes(t))throw Error('"'.concat(t,'" is not present in the shader template program.'));return{pattern:t,type:n}}replace(e,r){let{type:t,pattern:n}=this.getPattern(e),a=_(r);return m[t]=m[t].replace(n,a),b}inject(e,r,t){let{type:n,pattern:a}=this.getPattern(r),o="after"===e?"".concat(a,"\n").concat(_(t)):"".concat(_(t),"\n").concat(a);return m[n]=m[n].replace(a,o),b}injectTokenComments(){for(let e of o){let{type:r,pattern:t}=this.getPattern(e,{throwError:!1});m[r]=m[r].replace(t,"\n        ".concat(t,"\n        // ShaderForge TOKEN: ").concat(e,"\n      "))}return b}header(e){let r=this.type;return m[r]="".concat(e,"\n").concat(m[r]),b}before(e,r){return this.inject("before",e,r)}after(e,r){return this.inject("after",e,r)}top(){for(var e=arguments.length,r=Array(e),t=0;t<e;t++)r[t]=arguments[t];return m[this.type]=m[this.type].replace("void main() {","\n      ".concat(_(r.join("\n\n")),"\n      void main() {\n    ")),b}mainBeforeAll(e){return m[this.type]=m[this.type].replace("void main() {","void main() {\n        ".concat(_(e))),b}mainAfterAll(e){return m[this.type]=m[this.type].replace(/}\s*$/,"\n      ".concat(_(e),"\n    }")),b}uniforms(e){if("string"==typeof e)this.top(e);else{let r=[];for(let[t,n]of Object.entries(e)){let e=s.from(t,n);r.push(e.computeDeclaration())}this.top(r.join("\n")),h(e)}return b}clean(){return m[this.type]=u(m[this.type]),b}printFinalCode(){return console.log(m[this.type].replace(/#include <(.*)>/g,(e,r)=>{let t=a.ShaderChunk[r];if(!t)throw Error('Shader chunk "'.concat(r,'" not found'));return t})),b}constructor(e){this.type=e}}let h=e=>{for(let[r,t]of Object.entries(e)){let e=s.from(r,t);if(r in m.uniforms){if(e.value!==m.uniforms[r].value)throw Error("Shader redefinition! (Uniform values are not equal)")}else m.uniforms[r]=e}return b},v=new g("fragmentShader"),d=new g("vertexShader"),b=Object.assign(function(e){return e&&l(e),b},{defines:e=>(m.defines?Object.assign(m.defines,e):m.defines=e,b),uniforms:e=>(d.uniforms(e),v.uniforms(e),b),varying:function(e){let r="";if("string"==typeof e)r=e;else{let t=[];for(let[r,n]of Object.entries(e))t.push("varying ".concat(n," ").concat(r,";"));r=t.join("\n")}return d.top(r),v.top(r),b},vertex:d,fragment:v,header:e=>(v.header(e),d.header(e),b),clean:()=>(v.clean(),d.clean(),b),with:l,wrap:(e,r)=>(e.onBeforeCompile=e=>{m=e},e)}),x=new a.Color;function w(e){let{r,g:t,b:n}=x.set(e);return"vec3(".concat(r.toFixed(3),", ").concat(t.toFixed(3),", ").concat(n.toFixed(3),")")}},81463:function(e,r,t){"use strict";function n(e,r){return r||(r=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(r)}}))}t.d(r,{_:function(){return n}})}},function(e){e.O(0,[726,244,964,630,62,689,553,944,510,274,470,222,692,524,744],function(){return e(e.s=54853)}),_N_E=e.O()}]);