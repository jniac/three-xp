(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[358],{10358:function(n,e,t){"use strict";t.d(e,{Main:function(){return L}});var r=t(32617),a=t(22046),o=t(64830),i=t(37186),l=t(30176),c=t(23247),s=t(41737),u=t(99963),f=t(47090),p=t(6246),m=t(62411),d=t(84554);let x=new(t(32344)).x;function h(n){return new Promise(e=>{x.load(n,n=>{e(n)})})}let v=new d.I;var g=t(18075);let w="\n\nstruct FloatRamp {\n  float a;\n  float b;\n  float t;\n};\n\nstruct Vec2Ramp {\n  vec2 a;\n  vec2 b;\n  float t;\n};\n\nstruct Vec3Ramp {\n  vec3 a;\n  vec3 b;\n  float t;\n};\n\nstruct Vec4Ramp {\n  vec4 a;\n  vec4 b;\n  float t;\n};\n\n".concat((0,g.C)("vecX",n=>{let e=n[0].toUpperCase()+n.slice(1)+"Ramp";return"\n\n".concat(e," ramp(float t, T a, T b) {\n  return ").concat(e,"(a, b, t);\n}\n\n").concat(e," ramp(float t, T a, T b, T c) {\n  if (t < .5) {\n    return ").concat(e,"(a, b, t * 2.0);\n  } else {\n    return ").concat(e,"(b, c, (t - 0.5) * 2.0);\n  }\n}\n\n").concat(e," ramp(float t, T a, T b, T c, T d) {\n  if (t < .33) {\n    return ").concat(e,"(a, b, t * 3.0);\n  } else if (t < .66) {\n    return ").concat(e,"(b, c, (t - 0.33) * 3.0);\n  } else {\n    return ").concat(e,"(c, d, (t - 0.66) * 3.0);\n  }\n}\n\n").slice(1,-1)})),_="\n#ifndef GLSL_RAMP\n#define GLSL_RAMP\n".concat(u.i,"\n").concat(w,"\n#endif\n"),y={white:new i.Ilk("#ffffff"),grey10:new i.Ilk("#f0f0f0"),grey20:new i.Ilk("#e0e0e0"),notSoWhite:new i.Ilk("#f8f8e8"),yellow:new i.Ilk("#fff700"),black:new i.Ilk("#110111"),red:new i.Ilk("#dd1a41"),brightSkin:new i.Ilk("#ebd8c6"),petrol:new i.Ilk("#005e6b"),brightGreen:new i.Ilk("#22c891"),darkGreen:new i.Ilk("#002f1c"),sand:new i.Ilk("#e6db9f")};class b extends i.Kj0{static createMaterial(n){let{color:e,shaded:t,emissiveIntensity:r,side:a}={...b.defaultProps,...n};return t?new i.EJi({color:e,emissiveIntensity:r,emissive:r>0?e:void 0,side:a}):new i.vBJ({color:e})}}b.defaultProps={color:y.black,radius:1.3,align:.5,thickness:.3,innerRadiusRatio:null,shaded:!0,emissiveIntensity:.333};class P extends b{constructor(n){let{radius:e,thickness:t,align:r,innerRadiusRatio:a,color:o,shaded:l,...c}={...b.defaultProps,...n},u=e-t*r,f=e+t*(1-r);a&&(u=e*a,f=e),super(new i.o8S(u,f,128),b.createMaterial({...n,side:i.ehD})),(0,s.N)(this,c)}}class k extends i.Kj0{constructor(n){let{radius:e,thickness:t,align:r,innerRadiusRatio:a,color:o,shaded:l,emissiveIntensity:c,...u}={...b.defaultProps,...n},f=e-t*r,p=e+t*(1-r);a&&(f=e*a,p=e),super(new i.XvJ((f+p)/2,(p-f)/2,128,512),b.createMaterial({...n,side:i.Wl3})),(0,s.N)(this,u)}}class I extends P{constructor(n){super(n),this.material.onBeforeCompile=n=>c.b.with(n).defines({USE_UV:""}).fragment.top(_).fragment.after("map_fragment","\n      vec2 p = vUv - 0.5;\n      float alpha = atan(p.y, p.x) / 6.2831853;\n      alpha = 1.0 - mod(alpha + 0.0, 1.0);\n      Vec3Ramp r = ramp(alpha,\n        ".concat((0,c.R)(y.black),",\n        ").concat((0,c.R)(y.white),",\n        ").concat((0,c.R)(y.yellow),");\n      diffuseColor.rgb = mix(r.a, r.b, easeInOut4(r.t));\n    "))}}var S=t(57799);class z extends i.ZAu{constructor({globalIntensity:n=1,debug:e=!1}={}){super(),this.name="lights";let t=new i.vmT("#dbebf0","#645d61",n);this.add(t);let r=new i.T_f("#e8e6d3",1.3*n);r.position.set(10,10,10),r.width=40,r.height=40,r.lookAt(0,0,0),this.add(r),e&&this.add(new S.Z(r));let a=new i.Mig("#f2f0dd",.8*n);this.add(a)}}function C(n){let{precision:e=3}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=0,r=0,a=0;function o(){return"vec3(".concat(t.toFixed(e),", ").concat(r.toFixed(e),", ").concat(a.toFixed(e),")")}switch(typeof n){case"number":return t=(n>>16&255)/255,r=(n>>8&255)/255,a=(255&n)/255,o();case"string":if(n.startsWith("#")){if(4===n.length)return t=parseInt(n[1]+n[1],16)/255,r=parseInt(n[2]+n[2],16)/255,a=parseInt(n[3]+n[3],16)/255,o();return C(parseInt(n.slice(1),16),{precision:e})}throw Error("Invalid string: ".concat(n));case"object":if(Array.isArray(n))return[t,r,a]=n,o();if("r"in n)return t=n.r,r=n.g,a=n.b,o();if("x"in n)return t=n.x,r=n.y,a=n.z,o();throw Error("Invalid object: ".concat(n))}return"vec3(1.0, 0.0, 1.0)"}f.UM;var M=t(30686);let A="\n  ".concat(l.ShaderChunk.cube_uv_reflection_fragment,"\n  ").concat(M.v,"\n\n  varying vec3 vPosition;\n  varying vec3 vWorldNormal;\n\n  struct Plane {\n    vec3 origin;\n    vec3 normal;\n  };\n\n  float signedDistanceToPlane(Plane plane, vec3 p) {\n    return dot(plane.normal, p - plane.origin);\n  }\n\n  vec3 checker3(vec3 position, float scale, float edgeWidth, vec3 color1, vec3 color2) {\n    // Scale the position to control the size of the checker cubes\n    vec3 scaledPos = position / scale;\n\n    // Get the integer part (checker grid location)\n    vec3 checkerPos = floor(scaledPos);\n\n    // Get the fractional part (inside each cube)\n    vec3 fractPos = fract(scaledPos);\n\n    // Calculate the checkerboard pattern (even/odd cubes)\n    float checkerSum = mod(checkerPos.x + checkerPos.y + checkerPos.z, 2.0);\n\n    // Smooth transition using smoothstep on the fractional position\n    float edgeX = smoothstep(0.0, edgeWidth, fractPos.x);\n    float edgeY = smoothstep(0.0, edgeWidth, fractPos.y);\n    float edgeZ = smoothstep(0.0, edgeWidth, fractPos.z);\n\n    // Combine the edges to create a smooth transition\n    float blend = edgeX * edgeY * edgeZ;\n    blend = smoothstep(0.0, edgeWidth, min(min(fractPos.x, fractPos.y), fractPos.z));\n    \n    // Interpolate between black and white with the smoothstep value\n    vec3 baseColor = checkerSum == 0.0 ? color1 : color2;\n    vec3 oppositeColor = checkerSum == 0.0 ? color2 : color1;\n\n    // Use the smooth transition to blend between colors\n    return mix(baseColor, oppositeColor, blend);\n  }\n\n  float sphereGrid(vec3 position, float scale, float edgeWidth) {\n    // Scale the position to control the size of the checker cubes\n    vec3 scaledPos = position / scale;\n\n    // Get the integer part (checker grid location)\n    vec3 checkerPos = floor(scaledPos);\n\n    // Get the fractional part (inside each cube)\n    vec3 fractPos = fract(scaledPos);\n\n    vec3 p = fractPos - 0.5;\n    float alpha = 1.0 - length(p) * 2.0;\n\n    return smoothstep(0.0, edgeWidth, alpha - 0.1);    \n  }\n\n  void main() {\n    vec3 p = vWorldNormal * 0.33;\n    float n1 = snoise(p * 6.0 * 0.2 + 0.2);\n    float n2 = snoise(p * 20.0 + 10.1);\n    float n3 = snoise(p * 40.0 + 10.1);\n    float n4 = snoise(p * 1400.0 + 13.1);\n    float n = n1 * 0.5;\n    n += pow(fract((n1 + n2 * 0.015 + n3 * 0.01 + n4 * 0.005) * 85.0), 4.0) * 0.5;\n    n += pow(fract((n1 + n2 * 0.015) * 85.0), 4.0) * 0.25;\n    n += n4 * 0.2;\n    n += 0.8;\n    n = pow(n, 0.3);\n    float alpha = n;\n\n    gl_FragColor.rgb = mix(").concat(C(y.white),", ").concat(C(y.brightSkin),", alpha);\n    gl_FragColor.a = 1.0;\n\n    // float x = sphereGrid(vPosition, 1.0, 0.01);\n    // gl_FragColor.rgb = mix(").concat(C(y.black),", ").concat(C(y.brightSkin),", x);\n    // gl_FragColor.rgb = checker3(vPosition, 1.0, 0.1, ").concat(C(y.black),", ").concat(C(y.brightSkin),");\n  }\n");class V extends i.Kj0{constructor({debug:n=!1}={}){super(new i.cJO(5.5,12),new i.jyz({depthWrite:!1,side:i._Li,vertexShader:"\n  varying vec3 vWorldNormal;\n  varying vec3 vPosition;\n\n  vec3 rotate(mat4 m, vec3 v) {\n    return vec3(\n      dot(v, vec3(m[0][0], m[1][0], m[2][0])),  // X component\n      dot(v, vec3(m[0][1], m[1][1], m[2][1])),  // Y component\n      dot(v, vec3(m[0][2], m[1][2], m[2][2]))   // Z component\n    );\n  }\n\n  void main() {\n    vPosition = position;\n    vWorldNormal = normalize(rotate(modelMatrix, position));\n\n    // gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    // Ignore the position, we only need the normal:\n    gl_Position = projectionMatrix * vec4(rotate(modelViewMatrix, position), 1.0);\n  }\n",fragmentShader:A,uniforms:{}})),n&&(this.material=new i.vBJ({depthWrite:!1,color:"white",wireframe:!0})),this.onBeforeRender=(n,e,t,r,a,o)=>{this.position.copy(t.position)},this.renderOrder=-1,this.frustumCulled=!1,this.name="a-sky"}}var T=t(1976);class E extends i.Kj0{constructor(n){let{radius:e,...t}={...E.defaultProps,...n},r=new i.cJO(e,18),a=new i.EJi({});a.onBeforeCompile=n=>c.b.with(n).defines({USE_UV:""}).fragment.top(_).fragment.after("map_fragment","\n        vec2 p = vUv - 0.5;\n        float alpha = easeInOut(vUv.y, 1.6, 0.5);\n        Vec3Ramp r = ramp(alpha, ".concat((0,c.R)(y.black),", ").concat((0,c.R)(y.white),", ").concat((0,c.R)(y.yellow),");\n        diffuseColor.rgb = mix(r.a, r.b, easeInOut3(r.t));\n      ")),super(r,a),(0,s.N)(this,t)}}E.defaultProps={radius:1};class j{set(n){this.props={...this.props,...n},this.props.center=this.props.center.clone(),this.props.normal=this.props.normal.clone().normalize(),this.props.binormal=this.props.binormal.clone().normalize()}update(n){let{radius:e,turnVelocity:t,turn:r,center:a,normal:o,binormal:i}=this.props,l=r+t*n;this.props.turn=l,this.target.position.copy(a).addScaledVector(o,e*Math.cos(l*Math.PI*2)).addScaledVector(i,e*Math.sin(l*Math.PI*2))}constructor(n,e){this.target=n,this.set({...j.defaultProps,...e})}}j.defaultProps={center:new i.Pa4,normal:new i.Pa4(1,0,0),binormal:new i.Pa4(0,1,0),radius:1,turnVelocity:1,turn:0};class F extends i.Kj0{get satellite(){var n;return null!==(n=this._satellite)&&void 0!==n?n:this._satellite=new j(this)}constructor(n){let{radius:e,singleColor:t,emmissiveIntensity:r,lerpIn:a,lerpOut:o,...l}={...F.defaultProps,...n},{colorTop:f=null!=t?t:F.defaultProps.colorTop,colorBottom:p=null!=t?t:F.defaultProps.colorBottom}={...n},m=new i.cJO(e,12),d=new i.EJi({color:f,emissive:p});d.onBeforeCompile=n=>{c.b.with(n).defines({USE_UV:""}).uniforms({uLerpIn:{value:a},uLerpOut:{value:o},uColorTop:{value:new i.Ilk(f)},uColorBottom:{value:new i.Ilk(p)}}).fragment.top(u.i,T.U).fragment.mainBeforeAll("\n          float alpha = inverseLerp(uLerpIn, uLerpOut, vUv.y);\n          vec3 sphereColor = mix(uColorBottom, uColorTop, easeInOut3(alpha));\n        ").fragment.after("map_fragment","\n          diffuseColor.rgb = sphereColor;\n        ").fragment.after("emissivemap_fragment","\n          totalEmissiveRadiance.rgb = sphereColor * ".concat(r.toFixed(2),";\n        "))},super(m,d),this._satellite=null,(0,s.N)(this,l)}}F.defaultProps={radius:.225,singleColor:null,colorTop:y.white,colorBottom:y.yellow,emmissiveIntensity:.25,lerpIn:-.2,lerpOut:1.2};class O extends i.Kj0{constructor(n){let e=new i.cJO(.4,12),t=new i.EJi({});t.onBeforeCompile=n=>c.b.with(n).varying({vWorldPosition:"vec3",vNormalWorld:"vec3",vViewDir:"vec3"}).vertex.mainAfterAll("\n        vWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;\n        vNormalWorld = normalize(mat3(modelMatrix) * normal);\n        vViewDir = normalize(cameraPosition - vWorldPosition);\n      ").fragment.top(u.i,"\n\nfloat contrast(float mValue, float mScale, float mMidPoint) {\n	// Why clamp? If necessary, it has to be done outside of this function.\n	// return clamp((mValue - mMidPoint) * mScale + mMidPoint, 0.0, 1.0);\n	return (mValue - mMidPoint) * mScale + mMidPoint;\n}\n\nfloat contrast(float mValue, float mScale) {\n	return contrast(mValue, mScale, 0.5);\n}\n\nvec3 contrast(vec3 mValue, float mScale, float mMidPoint) {\n	return vec3(contrast(mValue.r, mScale, mMidPoint), contrast(mValue.g, mScale, mMidPoint), contrast(mValue.b, mScale, mMidPoint));\n}\n\nvec3 contrast(vec3 mValue, float mScale) {\n	return contrast(mValue, mScale, 0.5);\n}\n\nfloat greyscaleFloat(vec3 color) {\n	return dot(color, vec3(0.299, 0.587, 0.114));\n}\n\nvec3 greyscale(vec3 color) {\n    return vec3(greyscaleFloat(color));\n}\n\nvec3 greyscale(vec3 color, float alpha) {\n    return mix(color, greyscale(color), alpha);\n}\n\n").fragment.after("map_fragment","\n        float fresnel = dot(vNormalWorld, vViewDir);\n        vec3 inner = ".concat((0,c.R)(y.white),";\n        vec3 outer = ").concat((0,c.R)(y.black),";\n        float alpha = easeInOut(1.0 - pow(fresnel, 1.5), 2.0, 0.0);\n        diffuseColor.rgb = mix(inner, outer, alpha);\n      ")).fragment.mainAfterAll("\n        // Final tuning\n        gl_FragColor.rgb = mix(contrast(greyscale(gl_FragColor.rgb), 1.5), diffuseColor.rgb, alpha);\n      "),super(e,t),(0,s.N)(this,n)}}class N extends i.Kj0{constructor(n){let{color:e,thickness:t,length:r,shaded:a,...o}={...N.defaultProps,...n};super(new i.fHI(t/2,t/2,r,12,1).rotateZ(.5*Math.PI),a?new i.EJi({color:e}):new i.vBJ({color:e})),(0,s.N)(this,o)}}function R(n,e){return e.add(n),n}function*W(n,e){let t=yield*function*(n){let{ticker:e,scene:t}=n;e.set({activeDuration:m.v.development?3:180}),h("https://threejs.org/examples/textures/equirectangular/royal_esplanade_1k.hdr").then(e=>{new l.PMREMGenerator(n.renderer).fromEquirectangular(e).texture});let r=new i.ZAu;return t.add(r),yield()=>{r.removeFromParent()},r}(n);if(1===e.renderCount){let{camera:e}=n;e.fov=n.aspect>1?25:2*Math.atan(Math.tan(25*Math.PI/180/2)/n.aspect)*180/Math.PI,e.far=1e3,e.updateProjectionMatrix(),e.position.set(0,0,10)}t.add(new V),t.add(new z);let r=R(new E,t);t.add(new I({z:-1,radius:1.4,innerRadiusRatio:.805})),t.add(new k({z:-1,radius:.75,thickness:.01,color:y.yellow,emissiveIntensity:1})),t.add(new k({z:-1,radius:.8,thickness:.01,color:y.notSoWhite})),p.T.seed(6789402);let a=p.T.createPicker([[1,4],[2,2],[4,1]]);for(let{i:e}of function*(n){let e=0,t={get i(){return e},get t(){return e/8},get count(){return 8}};for(;e<8;e++)yield t}(8)){let r=p.T.pick(y),o=p.T.pick(y),l=new F({z:-1,radius:.1*a(),colorTop:r,colorBottom:o});l.rotation.set(p.T.between(2*Math.PI),p.T.between(2*Math.PI),p.T.between(2*Math.PI)),t.add(l),l.satellite.set({radius:0===e?.875:p.T.between(.25,.75)*(0,f.t7)(1,1.5,e),center:new i.Pa4(0,0,-1-.4*e),turnVelocity:p.T.between(.05,.25)}),yield n.ticker.onTick(n=>{l.satellite.update(n.deltaTime)})}let o=new i.ZAu;o.rotation.z=-.25*Math.PI,t.add(o),o.add(new F({x:-1.5,z:.5,singleColor:y.yellow})),o.add(new k({x:-1.81,radius:.1,thickness:.01,color:y.notSoWhite}));let c=R(new k({x:-2.315,radius:.2,thickness:.01,color:y.notSoWhite}),o);R(new N({x:-.2,thickness:.01,length:.4,shaded:!0,color:y.notSoWhite}),c),o.add(new F({x:1.7,z:.5,lerpIn:0,lerpOut:1})),o.add(new F({x:1.4,radius:.1,singleColor:y.black}));let u=R(new O({x:2.3}),o);R(new k({radius:.43,thickness:.015,color:y.black}),u),o.add(new N({x:1.5,thickness:.015,color:y.black}));let d=new i.ZAu;d.rotation.z=.25*Math.PI,t.add(d),d.add(new N({x:-1.6,thickness:.01,length:.35,shaded:!0,color:y.notSoWhite})),d.add(new N({x:1.6,thickness:.01,length:.35,shaded:!0,color:y.notSoWhite}));let x=new i.ZAu;x.rotation.y=.5*Math.PI,t.add(x),x.add(new N({x:-1.2,thickness:.01,length:.35,shaded:!0,color:y.notSoWhite})),x.add(new N({x:1.2,thickness:.01,length:.35,shaded:!0,color:y.notSoWhite})),(function(n){let e=n.split(".").pop();switch(e){case"hdr":return h(n);case"exr":return new Promise(e=>{v.load(n,n=>{e(n)})});default:return Promise.reject("Unsupported texture format: ".concat(e))}})("https://threejs.org/examples/textures/piz_compressed.exr").then(n=>{n.mapping=i.dSO,u.material.envMap=n,u.material.envMapIntensity=.25,u.material.envMapRotation.set(-.1*Math.PI,Math.PI,0),u.material.roughness=.3,u.material.metalness=.5,u.material.needsUpdate=!0,r.material.envMap=n,r.material.roughness=.2,r.material.envMapIntensity=.5,r.material.envMapRotation.set(-.1*Math.PI,Math.PI,0),r.material.needsUpdate=!0});let g=R(new i.ZAu,t);g.rotation.z=.25*Math.PI;class w extends i.ZAu{constructor(n){super();{let n=new i.fHI(15,15,5,6,1,!0).rotateY(Math.PI/6),e=new i.EJi({color:new i.Ilk("white").lerp(y.black,.995),side:i._Li,flatShading:!0});R(new i.Kj0(n,e),this)}{let n=new i.fHI(15,15,5,6,60,!0).rotateY(Math.PI/6),e=new i.EJi({color:y.black,wireframe:!0,flatShading:!0,side:i._Li});R(new i.Kj0(n,e),this)}(0,s.N)(this,n)}}R(new w({y:7.8}),g),R(new w({y:-7.8}),g)}function L(){return(0,r.jsx)("div",{className:"absolute-through",children:(0,r.jsx)(a.V,{className:"bg-[#ddd]",children:(0,r.jsx)(o.hR,{children:(0,r.jsx)(o.kB,{fn:W})})})})}N.defaultProps={color:y.black,thickness:.01,shaded:!1,length:1}},22046:function(n,e,t){"use strict";t.d(e,{V:function(){return f}});var r=t(32617),a=t(87200),o=t(47365),i=t(97809),l=t(23657),c=t(15731),s=t.n(c);let u=[s().frame,s().full];function f(n){let[e,t]=(0,a.useState)(0),{ref:c}=(0,l.Nv)(function*(n){yield(0,i.f)(n,{onSize:e=>{let{x:t,y:r}=e.size;n.classList.toggle(s().landscape,t>r)}});let e=!1;yield(0,o.p)(document.documentElement,[[{key:"f",noModifiers:!0},r=>{r.event.preventDefault(),document.fullscreenElement!==n?(n.requestFullscreen(),e=!1):!1===e?(e=!0,t(1)):(document.exitFullscreen(),t(0))}]])},[]),{children:f,className:p}=n;return(0,r.jsx)("div",{ref:c,className:[s().Billboard,s().landscape,u[e],null!=p?p:""].join(" "),children:f})}},62411:function(n,e,t){"use strict";t.d(e,{v:function(){return a}});let r="/three-xp/assets/",a={development:!1,assetsPath:r,assets:function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return"".concat(r).concat(n)}}},32219:function(n,e,t){"use strict";t.d(e,{FE:function(){return a.FE},Gg:function(){return f},Q7:function(){return s},Xe:function(){return p},iK:function(){return c},ux:function(){return a.ux}});var r=t(88780),a=t(20821),o=t(26211);function i(n){return"string"==typeof n&&/^(rad|deg|turn)$/.test(n)}function l(n){return"string"==typeof n&&/^(XYZ|XZY|YXZ|YZX|ZXY|ZYX)$/.test(n)}function c(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new r.FM8;return a.iK(n,e)}function s(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new r.Pa4;return a.Q7(n,e)}let u={defaultOrder:"XYZ"};function f(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];let[c,{defaultOrder:s},f]=(()=>{if(1===e.length)return[e[0],u,new r.USm];if(2===e.length)return(0,o.Dr)(e[1])?[e[0],u,e[1]]:[e[0],e[1],new r.USm];if(3===e.length)return e;throw Error("Invalid number of arguments")})();if((0,o.Dr)(c))return f.copy(c);if(Array.isArray(c)){let[n,e,t,r,o]=c,u=i(r)?r:i(o)?o:"rad",p=l(r)?r:l(o)?o:s;return f.set((0,a.FE)(n,u),(0,a.FE)(e,u),(0,a.FE)(t,u),p)}let{x:p,y:m,z:d,order:x=s,unit:h="rad"}=c;return f.set((0,a.FE)(p,h),(0,a.FE)(m,h),(0,a.FE)(d,h),x)}let p=(()=>{let n=new r.Pa4,e=new r.USm,t=new r.Pa4,a=new r._fP;return function(r,i){let{x:l=0,y:c=0,z:u=0,position:p={x:l,y:c,z:u},rotationX:m=0,rotationY:d=0,rotationZ:x=0,rotationOrder:h="XYZ",rotation:v={x:m,y:d,z:x,order:h},scaleX:g=1,scaleY:w=1,scaleZ:_=1,scaleScalar:y=1,scale:b={x:g,y:w,z:_}}=r;if((0,o.Eq)(i))return s(p,n),f(v,e),s(b,t).multiplyScalar(y),a.setFromEuler(e),i.compose(n,a,t);if((0,o.nK)(i))return s(p,i.position),f(v,i.rotation),s(b,i.scale).multiplyScalar(y),i;throw Error("Invalid out argument")}})()},26211:function(n,e,t){"use strict";function r(n){return!!n.isVector3}function a(n){return!!n.isEuler}function o(n){return!!n.isMatrix4}function i(n){return!!n.isObject3D}t.d(e,{Dr:function(){return a},Eq:function(){return o},nK:function(){return i},uU:function(){return r}})},23247:function(n,e,t){"use strict";t.d(e,{b:function(){return g},R:function(){return _}});var r=t(77478),a=t(88780);let o=["common","uv_pars_vertex","displacementmap_pars_vertex","color_pars_vertex","fog_pars_vertex","normal_pars_vertex","morphtarget_pars_vertex","skinning_pars_vertex","shadowmap_pars_vertex","logdepthbuf_pars_vertex","clipping_planes_pars_vertex","uv_vertex","color_vertex","morphcolor_vertex","beginnormal_vertex","morphnormal_vertex","skinbase_vertex","skinnormal_vertex","defaultnormal_vertex","normal_vertex","begin_vertex","morphtarget_vertex","skinning_vertex","displacementmap_vertex","project_vertex","logdepthbuf_vertex","clipping_planes_vertex","worldpos_vertex","shadowmap_vertex","fog_vertex","common","packing","dithering_pars_fragment","color_pars_fragment","uv_pars_fragment","map_pars_fragment","alphamap_pars_fragment","alphatest_pars_fragment","alphahash_pars_fragment","aomap_pars_fragment","lightmap_pars_fragment","emissivemap_pars_fragment","iridescence_fragment","cube_uv_reflection_fragment","envmap_common_pars_fragment","envmap_physical_pars_fragment","fog_pars_fragment","lights_pars_begin","normal_pars_fragment","lights_physical_pars_fragment","transmission_pars_fragment","shadowmap_pars_fragment","bumpmap_pars_fragment","normalmap_pars_fragment","clearcoat_pars_fragment","iridescence_pars_fragment","roughnessmap_pars_fragment","metalnessmap_pars_fragment","logdepthbuf_pars_fragment","clipping_planes_pars_fragment","clipping_planes_fragment","logdepthbuf_fragment","map_fragment","color_fragment","alphamap_fragment","alphatest_fragment","alphahash_fragment","roughnessmap_fragment","metalnessmap_fragment","normal_fragment_begin","normal_fragment_maps","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","emissivemap_fragment","lights_physical_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","aomap_fragment","transmission_fragment","opaque_fragment","tonemapping_fragment","colorspace_fragment","fog_fragment","premultiplied_alpha_fragment","dithering_fragment"];var i=t(58100);class l{static from(n,e){if(e instanceof i.Observable){if("number"==typeof e.value)return new l(n,e);throw Error("Observable value must be a number")}let t=typeof e;return"object"===t&&(e.constructor===Object||e instanceof a.xWb)&&"value"in e?new l(n,e):"string"===t?new l(n,{value:new a.Ilk(e)}):new l(n,{value:e})}get value(){return this.target.value}computeDeclaration(){let n=this.name,e=this.target.value,t="";if(e instanceof Float32Array)return"uniform float ".concat(n,"[").concat(e.length,"];");if(Array.isArray(e)&&(t="[".concat(e.length,"]"),e=e[0]),"number"==typeof e)return"uniform float ".concat(n).concat(t,";");if(e.isVector2)return"uniform vec2 ".concat(n).concat(t,";");if(e.isVector3||e.isColor)return"uniform vec3 ".concat(n).concat(t,";");if(e.isVector4||e.isQuaternion)return"uniform vec4 ".concat(n).concat(t,";");if(e.isMatrix3)return"uniform mat3 ".concat(n).concat(t,";");if(e.isMatrix4)return"uniform mat4 ".concat(n).concat(t,";");if(e.isTexture)return e.isCubeTexture?"uniform samplerCube ".concat(n).concat(t,";"):"uniform sampler2D ".concat(n).concat(t,";");throw console.log("unhandled value:",e),Error('unhandled value: "'.concat(null==e?void 0:e.constructor.name,'"'))}constructor(n,e){this.name=n,this.target=e}}function c(){let n=(0,r._)(["","s*",""],["","\\s*",""]);return c=function(){return n},n}let s=null,u=n=>(s=n,g),f="// ShaderForge (injected code) ->",p="// <- ShaderForge",m=n=>"".concat(f,"\n").concat(n.trim(),"\n").concat(p),d=n=>{let e=n=>n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),t=RegExp(String.raw(c(),e(p),e(f)),"g");return n.replaceAll(t,"")};class x{getPattern(n){let{throwError:e=!0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t="#include <".concat(n,">"),r=this.type;if(e&&!1===s[r].includes(t))throw Error('"'.concat(t,'" is not present in the shader template program.'));return{pattern:t,type:r}}replace(n,e){if(n instanceof RegExp){let{type:t}=this;s[t].match(n),s[t]=s[t].replace(n,m(e))}else{let{type:t,pattern:r}=this.getPattern(n),a=m(e);s[t]=s[t].replace(r,a)}return g}inject(n,e,t){let{type:r,pattern:a}=this.getPattern(e),o="after"===n?"".concat(a,"\n").concat(m(t)):"".concat(m(t),"\n").concat(a);return s[r]=s[r].replace(a,o),g}injectTokenComments(){for(let n of o){let{type:e,pattern:t}=this.getPattern(n,{throwError:!1});s[e]=s[e].replace(t,"\n        ".concat(t,"\n        // ShaderForge TOKEN: ").concat(n,"\n      "))}return g}header(n){let e=this.type;return s[e]="".concat(n,"\n").concat(s[e]),g}before(n,e){return this.inject("before",n,e)}after(n,e){return this.inject("after",n,e)}top(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];return s[this.type]=s[this.type].replace("void main() {","\n      ".concat(m(e.join("\n\n")),"\n      void main() {\n    ")),g}mainBeforeAll(n){return s[this.type]=s[this.type].replace("void main() {","void main() {\n        ".concat(m(n))),g}mainAfterAll(n){return s[this.type]=s[this.type].replace(/}\s*$/,"\n      ".concat(m(n),"\n    }")),g}uniforms(n){if("string"==typeof n)this.top(n);else{let e=[];for(let[t,r]of Object.entries(n)){let n=l.from(t,r);e.push(n.computeDeclaration())}this.top(e.join("\n")),function(n){for(let[e,t]of Object.entries(n)){let n=l.from(e,t);if(e in s.uniforms){if(n.value!==s.uniforms[e].value)throw Error("Shader redefinition! (Uniform values are not equal)")}else s.uniforms[e]=n}}(n)}return g}clean(){return s[this.type]=d(s[this.type]),g}printFinalCode(){return console.log(s[this.type].replace(/#include <(.*)>/g,(n,e)=>{let t=a.WdD[e];if(!t)throw Error('Shader chunk "'.concat(e,'" not found'));return t})),g}constructor(n){this.type=n}}let h=new x("fragmentShader"),v=new x("vertexShader"),g=Object.assign(function(n){return n&&u(n),g},{shaderName:function(n){return s.shaderName="".concat(n," (ShaderForge)"),g},defines:function(n){return s.defines?Object.assign(s.defines,n):s.defines=n,g},uniforms:function(n){return v.uniforms(n),h.uniforms(n),g},varying:function(n){let e="";if("string"==typeof n)e=n;else{let t=[];for(let[e,r]of Object.entries(n))t.push("varying ".concat(r," ").concat(e,";"));e=t.join("\n")}return v.top(e),h.top(e),g},top:function(n){return v.top(n),h.top(n),g},vertex:v,fragment:h,header:function(n){return h.header(n),v.header(n),g},clean:function(){return h.clean(),v.clean(),g},with:u,wrap:(n,e)=>(n.onBeforeCompile=n=>{s=n},n)}),w=new a.Ilk;function _(n){let{r:e,g:t,b:r}=w.set(n);return"vec3(".concat(e.toFixed(3),", ").concat(t.toFixed(3),", ").concat(r.toFixed(3),")")}},41737:function(n,e,t){"use strict";t.d(e,{N:function(){return i}});var r=t(88780),a=t(32219);new r.Pa4(0,0,0),new r.USm(0,0,0,"XYZ"),new r.Pa4(1,1,1);let o={x:0,y:0,z:0,rotationX:0,rotationY:0,rotationZ:0,rotationOrder:"XYZ",rotationUnit:"rad",scaleX:1,scaleY:1,scaleZ:1,scaleScalar:1,visible:void 0,name:void 0,parent:void 0};function i(n,e){let{x:t,y:i,z:l,position:c=new r.Pa4(t,i,l),rotationX:s,rotationY:u,rotationZ:f,rotationOrder:p,rotationUnit:m,rotation:d,scaleX:x,scaleY:h,scaleZ:v,scaleScalar:g,scale:w=new r.Pa4(x,h,v).multiplyScalar(g),visible:_,name:y,parent:b}={...o,...e};return(0,a.Q7)(c,n.position),(0,a.Gg)(null!=d?d:[s,u,f,p,m],n.rotation),(0,a.Q7)(w,n.scale),void 0!==_&&(n.visible=_),void 0!==y&&(n.name=y),void 0!==b&&b!==n.parent&&(null===b?n.removeFromParent():b.add(n)),n}},20821:function(n,e,t){"use strict";t.d(e,{FE:function(){return o},Q7:function(){return s},iK:function(){return c},ux:function(){return i}});var r=t(96672);let a={rad:1,deg:Math.PI/180,turn:2*Math.PI};function o(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"rad",t=e,r=0;if("number"==typeof n)r=n;else{let e=n.match(/^\s*(-?[0-9.]+)\s*(\/\s*-?[0-9.]+)?\s*(rad|deg|turn)\s*$/);if(e){let[n,a,o,i]=e;r=Number.parseFloat(a),o&&(r/=Number.parseFloat(o.slice(1))),t=i}else r=Number.parseFloat(n)}return r*a[t]}function i(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"rad";return"".concat((0,r.uf)(n/a[e])).concat(e)}function l(n){return"number"==typeof n}function c(n,e,t,r){if(null!=t||(t=0),null!=r||(r=l),null!=e||(e={x:t,y:t}),null==n)return e;if(r(n))return e.x=n,e.y=n,e;if(Array.isArray(n)){let[t,r]=n;return e.x=t,e.y=r,e}if("width"in n){let{width:t,height:r}=n;return e.x=t,e.y=r,e}let{x:a,y:o}=n;return e.x=a,e.y=o,e}function s(n,e,t,r){if(null!=r||(r=l),null!=t||(t=0),null!=e||(e={x:t,y:t,z:t}),null==n)return e;if(r(n))return e.x=n,e.y=n,e.z=n,e;if(Array.isArray(n)){let[r,a,o=t]=n;return e.x=r,e.y=a,e.z=o,e}if("width"in n){let{width:r,height:a=t,depth:o=t}=n;return e.x=r,e.y=a,e.z=o,e}let{x:a=t,y:o=t,z:i=t}=n;return e.x=a,e.y=o,e.z=i,e}},7876:function(n,e,t){"use strict";t.d(e,{l:function(){return r}});let r="\n#ifndef GLSL_BASIC\n#define GLSL_BASIC\n\nfloat clamp01(float x) {\n  return x < 0.0 ? 0.0 : x > 1.0 ? 1.0 : x;\n}\n\n#endif\n"},99963:function(n,e,t){"use strict";t.d(e,{i:function(){return o}});var r=t(7876);let a=["linear"];for(let n=1;n<=10;n++)a.push("easeIn".concat(n)),a.push("easeOut".concat(n)),a.push("easeInOut".concat(n)),a.push("easeOutIn".concat(n));let o="\n#ifndef GLSL_EASING\n#define GLSL_EASING\n\n".concat(r.l,"\n\nfloat easePow1(float x) {\n  return x;\n}\n\nfloat easePow2(float x) {\n  return x * x;\n}\n\nfloat easePow3(float x) {\n  return x * x * x;\n}\n\nfloat easePow4(float x) {\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow5(float x) {\n  float x0 = x;\n  x *= x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow6(float x) {\n  x *= x * x;\n  return x *= x;\n}\n\nfloat easePow7(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow8(float x) {\n  x *= x;\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow9(float x) {\n  x *= x * x;\n  return x *= x * x;\n}\n\nfloat easePow10(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x * x;\n  return x0 * x;\n}\n\nfloat linear(float x) {\n  return clamp01(x);\n}\n\n").concat(Array.from({length:10},(n,e)=>{let t=e+1;return"\n\nfloat easeIn".concat(t," (float x) {\n  return easePow").concat(t,"(clamp01(x));\n}\nfloat easeOut").concat(t," (float x) {\n  return 1.0 - easePow").concat(t,"(clamp01(1.0 - x));\n}\nfloat easeInOut").concat(t," (float x) {\n  return x < 0.5 \n    ? 0.5 * easePow").concat(t,"(2.0 * x) \n    : 1.0 - 0.5 * easePow").concat(t,"(2.0 * (1.0 - x));\n}\nfloat easeOutIn").concat(t," (float x) {\n  return x < 0.5\n    ? 0.5 * (1.0 - easePow").concat(t,"(1.0 - x * 2.0))\n    : 1.0 - 0.5 * (1.0 - easePow").concat(t,"(2.0 * x - 1.0));\n}\n\n").trim()}).join("\n\n"),"\n\n\n// https://www.desmos.com/calculator/mqou4lf9zc?lang=fr\nfloat easeInOut(float x, float p, float i) {\n  return  x <= 0.0 ? 0.0 :\n          x >= 1.0 ? 1.0 :\n          x <= i ? 1.0 / pow(i, p - 1.0) * pow(x, p) :\n          1.0 - 1.0 / pow(1.0 - i, p - 1.0) * pow(1.0 - x, p);\n}\n\n// https://www.desmos.com/calculator/nrjlezusdv\nfloat easeInThenOut(float x, float p) {\n  return 1.0 - pow(abs(2.0 * x - 1.0), p);\n}\n\n#endif\n")},30686:function(n,e,t){"use strict";t.d(e,{v:function(){return a}});var r=t(18075);let a="\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex \n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20201014 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+10.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\n\n\n\n\n// 2D:\n\nvec3 mod289_2d(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289_2d(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute_2d(vec3 x) {\n  return mod289(((x*34.0)+10.0)*x);\n}\n\n\nfloat snoise(vec2 v) {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289_2d(i); // Avoid truncation effects in permutation\n  vec3 p = permute_2d( permute_2d( i.y + vec3(0.0, i1.y, 1.0 ))\n		+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n// 3D: \n\nfloat snoise(vec3 v)\n{ \n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n  // First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n  // Permutations\n  i = mod289(i); \n  vec4 p = permute( permute( permute( \n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n  //Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n  // Mix final noise value\n  vec4 m = max(0.5 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 105.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\n\n\n\n// addons:\n// Fractal noise, based on Stefan Gustavson's Simplex noise\n".concat((0,r.C)(["vec2","vec3"],"\n  float fnoise(T p, int octaves, float persistence) {\n    float total = 0.0;           // Final noise value\n    float amplitude = 1.0;       // Initial amplitude\n    float frequency = 1.0;       // Initial frequency\n    float maxValue = 0.0;        // Used for normalization\n\n    for (int i = 0; i < octaves; i++) {\n      total += snoise(p * frequency) * amplitude;\n\n      maxValue += amplitude;   // Keep track of max amplitude\n      amplitude *= persistence; // Reduce amplitude for next octave\n      frequency *= 2.0;        // Increase frequency for next octave\n    }\n\n    // Normalize the result to stay within the range [0, 1]\n    return total / maxValue;\n  }\n"),"\n")},18075:function(n,e,t){"use strict";t.d(e,{C:function(){return a}});let r={vecX:["float","vec2","vec3","vec4"]},a=(n,e)=>{let t=[],a=Array.isArray(n)?n:[n].map(n=>n in r?r[n]:n).flat();if("function"==typeof e)for(let n of a)t.push(e(n).replaceAll(/\bT\b/g,n));else for(let n of a)t.push(e.replaceAll(/\bT\b/g,n));return t.join("\n")}},1976:function(n,e,t){"use strict";t.d(e,{U:function(){return o}});var r=t(7876),a=t(18075);let o="\n  ".concat(r.l,"\n\n  float sin01(float x) {\n    return 0.5 + 0.5 * sin(x * 6.283185307179586);\n  }\n\n  vec2 scaleAround(vec2 p, vec2 c, float s) {\n    return c + (p - c) / s;\n  }\n\n  // Same as mix, but clamped.\n  ").concat((0,a.C)("vecX","\n    T lerp(in T a, in T b, in float x) {\n      return mix(a, b, clamp01(x));\n    }\n  "),"\n\n  float inverseLerpUnclamped(in float a, in float b, float x) {\n    return (x - a) / (b - a);\n  }\n\n  float inverseLerp(in float a, in float b, float x) {\n    return clamp01((x - a) / (b - a));\n  }\n\n  float threshold(in float x, in float thresholdValue) {\n    return x < thresholdValue ? 0. : 1.;\n  }\n\n  float threshold(in float x, in float thresholdValue, in float width) {\n    return width < 1e-9 \n      ? (x < thresholdValue ? 0. : 1.)\n      : clamp01((x - thresholdValue + width * .5) / width);\n  }\n\n  mat3 extractRotation(mat4 matrix) {\n    return mat3(matrix[0].xyz, matrix[1].xyz, matrix[2].xyz);\n  }\n\n  vec2 rotate(vec2 p, float a) {\n    float c = cos(a);\n    float s = sin(a);\n    float x = c * p.x + s * p.y;\n    float y = -s * p.x + c * p.y;\n    return vec2(x, y);\n  }\n\n  vec2 rotateAround(vec2 p, float a, vec2 c) {\n    return c + rotate(p - c, a);\n  }\n\n  vec2 rotateScaleAround(vec2 p, float a, float s, vec2 c) {\n    return c + rotate((p - c) / s, a);\n  }\n  \n  float positiveModulo(float x) {\n    x = mod(x, 1.0);\n    return x < 0.0 ? x + 1.0 : x;\n  }\n\n  float positiveModulo(float x, float modulo) {\n    x = mod(x, modulo);\n    return x < 0.0 ? x + modulo : x;\n  }\n\n  // Limit a value to a maximum that the function tends to reach when x -> ∞\n  // https://www.desmos.com/calculator/0vewkbnscu\n  float limited(float x, float maxValue) {\n    return x <= 0.0 ? x : maxValue * x / (maxValue + x);\n  }\n\n  // https://www.desmos.com/calculator/0vewkbnscu\n  float limited(float x, float minValue, float maxValue) {\n    float d = maxValue - minValue;\n    float xd = x - minValue;\n    return x <= minValue ? x : minValue + d * xd / (d + xd);\n  }\n\n  float sqLength(in vec2 p) {\n    return p.x * p.x + p.y * p.y;\n  }\n\n  float sqLength(in vec3 p) {\n    return p.x * p.x + p.y * p.y + p.z * p.z;\n  }\n\n  float pcurve(float x, float a, float b) {\n    float k = pow(a + b, a + b) / (pow(a, a) * pow(b, b));\n    return k * pow(x, a) * pow(1.0 - x, b);\n  }\n\n  float hash(vec3 p) {\n    return fract(sin(dot(p, vec3(12.9898, 78.233, 45.164))) * 43758.5453);\n  }\n\n  ").concat((0,a.C)("vecX","\n    T min3(in T a, in T b, in T c) {\n      return min(min(a, b), c);\n    }\n  "),"\n\n  ").concat((0,a.C)("vecX","\n    T min4(in T a, in T b, in T c, in T d) {\n      return min(min(a, b), min(c, d));\n    }\n  "),"\n")},15731:function(n){n.exports={Billboard:"billboard_Billboard__1od0V",landscape:"billboard_landscape__OR09y",frame:"billboard_frame__m5PEh",full:"billboard_full__0I_hQ"}}}]);