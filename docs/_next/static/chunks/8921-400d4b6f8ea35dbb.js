"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8921],{38921:(e,t,r)=>{r.d(t,{_c:()=>l,ec:()=>s,pP:()=>i});var o=r(49797);function i(e,t=!1){let r=null!==e[0].index,s=new Set(Object.keys(e[0].attributes)),l=new Set(Object.keys(e[0].morphAttributes)),u={},a={},f=e[0].morphTargetsRelative,m=new o.LoY,g=0;for(let o=0;o<e.length;++o){let i=e[o],n=0;if(r!==(null!==i.index))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+o+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(let e in i.attributes){if(!s.has(e))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+o+'. All geometries must have compatible attributes; make sure "'+e+'" attribute exists among all geometries, or in none of them.'),null;void 0===u[e]&&(u[e]=[]),u[e].push(i.attributes[e]),n++}if(n!==s.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+o+". Make sure all geometries have the same number of attributes."),null;if(f!==i.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+o+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(let e in i.morphAttributes){if(!l.has(e))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+o+".  .morphAttributes must be consistent throughout all geometries."),null;void 0===a[e]&&(a[e]=[]),a[e].push(i.morphAttributes[e])}if(t){let e;if(r)e=i.index.count;else{if(void 0===i.attributes.position)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+o+". The geometry must have either an index or a position attribute"),null;e=i.attributes.position.count}m.addGroup(g,e,o),g+=e}}if(r){let t=0,r=[];for(let o=0;o<e.length;++o){let i=e[o].index;for(let e=0;e<i.count;++e)r.push(i.getX(e)+t);t+=e[o].attributes.position.count}m.setIndex(r)}for(let e in u){let t=n(u[e]);if(!t)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+e+" attribute."),null;m.setAttribute(e,t)}for(let e in a){let t=a[e][0].length;if(0===t)break;m.morphAttributes=m.morphAttributes||{},m.morphAttributes[e]=[];for(let r=0;r<t;++r){let t=[];for(let o=0;o<a[e].length;++o)t.push(a[e][o][r]);let o=n(t);if(!o)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+e+" morphAttribute."),null;m.morphAttributes[e].push(o)}}return m}function n(e){let t,r,i,n=-1,s=0;for(let o=0;o<e.length;++o){let l=e[o];if(void 0===t&&(t=l.array.constructor),t!==l.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(void 0===r&&(r=l.itemSize),r!==l.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(void 0===i&&(i=l.normalized),i!==l.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(-1===n&&(n=l.gpuType),n!==l.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;s+=l.count*r}let l=new t(s),u=new o.THS(l,r,i),a=0;for(let t=0;t<e.length;++t){let o=e[t];if(o.isInterleavedBufferAttribute){let e=a/r;for(let t=0,i=o.count;t<i;t++)for(let i=0;i<r;i++){let r=o.getComponent(t,i);u.setComponent(t+e,i,r)}}else l.set(o.array,a);a+=o.count*r}return void 0!==n&&(u.gpuType=n),u}function s(e,t=1e-4){t=Math.max(t,Number.EPSILON);let r={},o=e.getIndex(),i=e.getAttribute("position"),n=o?o.count:i.count,l=0,u=Object.keys(e.attributes),a={},f={},m=[],g=["getX","getY","getZ","getW"],c=["setX","setY","setZ","setW"];for(let t=0,r=u.length;t<r;t++){let r=u[t],o=e.attributes[r];a[r]=new o.constructor(new o.array.constructor(o.count*o.itemSize),o.itemSize,o.normalized);let i=e.morphAttributes[r];i&&(f[r]||(f[r]=[]),i.forEach((e,t)=>{let o=new e.array.constructor(e.count*e.itemSize);f[r][t]=new e.constructor(o,e.itemSize,e.normalized)}))}let h=.5*t,b=Math.pow(10,Math.log10(1/t)),d=h*b;for(let t=0;t<n;t++){let i=o?o.getX(t):t,n="";for(let t=0,r=u.length;t<r;t++){let r=u[t],o=e.getAttribute(r),s=o.itemSize;for(let e=0;e<s;e++)n+=`${~~(o[g[e]](i)*b+d)},`}if(n in r)m.push(r[n]);else{for(let t=0,r=u.length;t<r;t++){let r=u[t],o=e.getAttribute(r),n=e.morphAttributes[r],s=o.itemSize,m=a[r],h=f[r];for(let e=0;e<s;e++){let t=g[e],r=c[e];if(m[r](l,o[t](i)),n)for(let e=0,o=n.length;e<o;e++)h[e][r](l,n[e][t](i))}}r[n]=l,m.push(l),l++}}let p=e.clone();for(let t in e.attributes){let e=a[t];if(p.setAttribute(t,new e.constructor(e.array.slice(0,l*e.itemSize),e.itemSize,e.normalized)),t in f)for(let e=0;e<f[t].length;e++){let r=f[t][e];p.morphAttributes[t][e]=new r.constructor(r.array.slice(0,l*r.itemSize),r.itemSize,r.normalized)}}return p.setIndex(m),p}function l(e,t){if(t===o.RJ4)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),e;if(t!==o.rYR&&t!==o.O49)return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",t),e;{let r=e.getIndex();if(null===r){let t=[],o=e.getAttribute("position");if(void 0===o)return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),e;for(let e=0;e<o.count;e++)t.push(e);e.setIndex(t),r=e.getIndex()}let i=r.count-2,n=[];if(t===o.rYR)for(let e=1;e<=i;e++)n.push(r.getX(0)),n.push(r.getX(e)),n.push(r.getX(e+1));else for(let e=0;e<i;e++)e%2==0?(n.push(r.getX(e)),n.push(r.getX(e+1)),n.push(r.getX(e+2))):(n.push(r.getX(e+2)),n.push(r.getX(e+1)),n.push(r.getX(e)));n.length/3!==i&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");let s=e.clone();return s.setIndex(n),s.clearGroups(),s}}}}]);