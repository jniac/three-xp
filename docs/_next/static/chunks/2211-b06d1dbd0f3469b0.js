(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2211],{6939:(e,t,n)=>{"use strict";n.d(t,{Overlay:()=>p});var o=n(70691),a=n(18479),i=n(99332),r=n(29717),s=n(85795),l=n(25736),c=n(23830),u=function(e){return e[e.M=1]="M",e[e.L=2]="L",e[e.Q=4]="Q",e[e.C=8]="C",e[e.Z=16]="Z",e}(u||{});let d={1:{flag:1,args:2,code:"M",description:"Move To"},2:{flag:2,args:2,code:"L",description:"Line To"},4:{flag:4,args:4,code:"Q",description:"Quadratic Bezier To"},8:{flag:8,args:6,code:"C",description:"Cubic Bezier To"},16:{flag:16,args:0,code:"Z",description:"Close Path"}};function x(e){return"object"==typeof e[0]?[e[0].x,e[0].y]:[e[0],e[1]]}class v{clear(){return this.commands=[],this.args=[],this.closed=!1,this}moveTo(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.clear(),this.commands.push(2),this.args.push(x(t)),this}insertLineAt(e){for(var t=arguments.length,n=Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];if(e<0&&(e+=this.commands.length),e<0||e>this.commands.length)throw Error("Command index out of range: ".concat(e));return this.commands.splice(e,0,2),this.args.splice(e,0,x(n)),this}lineTo(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.commands.push(2),this.args.push(x(t)),this}quadraticBezierTo(e,t,n,o){return this.commands.push(4),this.args.push([e,t,n,o]),this}cubicBezierTo(e,t,n,o,a,i){return this.commands.push(8),this.args.push([e,t,n,o,a,i]),this}insertCubicBezierAt(e,t,n,o,a,i,r){if(e<0&&(e+=this.commands.length),e<0||e>this.commands.length)throw Error("Command index out of range: ".concat(e));return this.commands.splice(e,0,8),this.args.splice(e,0,[t,n,o,a,i,r]),this}closePath(){return this.closed=!0,this}loopIndex(e){if(e<0&&(e+=this.commands.length),e>=this.commands.length&&(e-=this.commands.length),e<0||e>=this.commands.length)throw Error("Command index out of range: ".concat(e));return e}getCommandInfo(e){return e=this.loopIndex(e),d[this.commands[e]]}setArgsAt(e,t){e=this.loopIndex(e);let n=this.getCommandInfo(e);if(t.length!==n.args)throw Error("Invalid number of arguments for command ".concat(n.code,": expected ").concat(n.args,", got ").concat(t.length));return this.args[e]=t,this}getPointAt(e){e=this.loopIndex(e);let t=this.commands[e],n=this.args[e];switch(t){case 1:case 2:return{x:n[0],y:n[1]};case 8:return{x:n[4],y:n[5]};case 4:return{x:n[2],y:n[3]};default:return null}}getPreviousPoint(e){let t=this.commands.length;for(let n=1;n<=t;n++){let t=this.loopIndex(e-n),o=this.getPointAt(t);if(o)return[t,o]}throw Error("No previous point found before command index ".concat(e))}getNextPoint(e){let t=this.commands.length;for(let n=1;n<=t;n++){let t=this.loopIndex(e+n),o=this.getPointAt(t);if(o)return[t,o]}throw Error("No next point found after command index ".concat(e))}roundCorner(e){let t={x:0,y:0},n=[{x:0,y:0},{x:0,y:0},{x:0,y:0},{x:0,y:0}],o=new c.X,a=new c.X;for(let i=0;i<this.commands.length;i++){let r,s,l=this.getPointAt(i);if(!l)continue;let[c,u]=this.getPreviousPoint(i),[d,x]=this.getNextPoint(i);o.fromStartEnd(u.x,u.y,l.x,l.y),a.fromStartEnd(l.x,l.y,x.x,x.y);let v=o.angleTo(a);if(1e-6>Math.abs(v))continue;let{radius:p,tension:h=1}=e({point:l,angle:v,line1:o,line2:a}),f=v>0?-p:p;o.offset(f),a.offset(f),o.intersection(a,{out:t}),v>0?(r=o.angle()-Math.PI/2,s=a.angle()-Math.PI/2):(r=o.angle()+Math.PI/2,s=a.angle()+Math.PI/2),Math.abs(r-s)>Math.PI&&(r<s?r+=2*Math.PI:s+=2*Math.PI),function(e,t,n,o){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,i=arguments.length>5?arguments[5]:void 0;null!=i||(i=[{x:0,y:0},{x:0,y:0},{x:0,y:0},{x:0,y:0}]);let{x:r,y:s}=e,[l,c,u,d]=i,x=Math.cos(n),v=Math.sin(n),p=Math.cos(o),h=Math.sin(o),f=4/3*Math.tan((o-n)/4)*a;l.x=r+t*x,l.y=s+t*v,c.x=r+t*(x-v*f),c.y=s+t*(v+x*f),u.x=r+t*(p+h*f),u.y=s+t*(h-p*f),d.x=r+t*p,d.y=s+t*h}(t,p,r,s,h,n),console.log([c,i,d],t,n),this.setArgsAt(i,[n[0].x,n[0].y]),this.insertCubicBezierAt(d,n[1].x,n[1].y,n[2].x,n[2].y,n[3].x,n[3].y),i+=1}return this}getPathData(){let{precisionMax:e=2}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=t=>t.toFixed(e).replace(/\.?0+$/,""),n=e=>{let n=[];for(let o=0;o<e.length;o+=2)n.push("".concat(t(e[o])," ").concat(t(e[o+1])));return n.join(",")},o=[];switch(this.commands[0]){case 2:{let[e,n]=this.args[0];o.push("M".concat(t(e)," ").concat(t(n)));break}case 4:{let[,e]=this.getPreviousPoint(0),[n,a,i,r]=this.args[0];o.push("M".concat(t(e.x)," ").concat(t(e.y))),o.push("Q".concat(t(n)," ").concat(t(a),",").concat(t(i)," ").concat(t(r)));break}case 8:{let[,e]=this.getPreviousPoint(0),[n,a,i,r,s,l]=this.args[0];o.push("M".concat(t(e.x)," ").concat(t(e.y))),o.push("C".concat(t(n)," ").concat(t(a),",").concat(t(i)," ").concat(t(r),",").concat(t(s)," ").concat(t(l)))}}for(let e=1;e<this.commands.length;e++){let{code:t}=d[this.commands[e]];o.push("".concat(t).concat(n(this.args[e])))}return o.push("Z"),console.log(o.join("\n")),o.join(" ")}constructor(){this.commands=[],this.args=[],this.closed=!1}}function p(){let{ref:e}=(0,a.useEffects)(function*(e){let t=e.querySelector("svg"),n=e.querySelector("path#background"),o=e.querySelector("path#thumb-line"),a=e.querySelector("path#thumb-area"),c=new s.ObservableNumber(0),u=()=>{let i=e.clientWidth,r=e.clientHeight,s=80*(1+.2*c.value);n.setAttribute("d",v.instance.moveTo(16,16).lineTo(i/2-s/2-16,16).lineTo(i/2-s/2,0).lineTo(i/2+s/2,0).lineTo(i/2+s/2+16,16).lineTo(i-16,16).lineTo(i-16,r-16).lineTo(16,r-16).closePath().roundCorner(()=>({radius:24,tension:1.333})).getPathData()),o.setAttribute("d",v.instance.moveTo(i/2-s/2+16,16).lineTo(i/2+s/2-16,16).getPathData()),a.setAttribute("d",v.instance.moveTo(i/2-40-16,0).lineTo(i/2+40+16,0).lineTo(i/2+40+16,32).lineTo(i/2-40-16,32).closePath().getPathData()),t.setAttribute("viewBox","0 0 ".concat(i," ").concat(r)),t.setAttribute("width","".concat(i)),t.setAttribute("height","".concat(r)),e.style.transform="translateY(".concat(r-32,"px)")};u(),yield c.onChange(u),yield(0,i.s)(a,{onEnter:()=>{r.X5.during(.3).onUpdate(e=>{let{progress:t}=e;return c.set(r.X5.ease("inOut(3, .333)")(t))})},onLeave:()=>{r.X5.during(.3).onUpdate(e=>{let{progress:t}=e;return c.set(r.X5.ease("inOut(3, .333)")(1-t))})},onTap:l.g})},[]);return(0,o.jsx)("div",{ref:e,className:"layer",children:(0,o.jsxs)("svg",{children:[(0,o.jsx)("path",{id:"background",fill:"#220793"}),(0,o.jsx)("path",{id:"thumb-line",stroke:"#6060FF",strokeWidth:4,strokeLinejoin:"round"}),(0,o.jsx)("path",{id:"thumb-area",fill:"transparent",style:{cursor:"pointer"}})]})})}v.instance=new v},14203:(e,t,n)=>{"use strict";n.d(t,{O:()=>a});var o=n(1029);let a="\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex \n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20201014 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nfloat mod289(float x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0; \n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nfloat permute(float x) {\n  return mod289(((x*34.0)+10.0)*x);\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+10.0)*x);\n}\n\nvec4 permute(vec4 x) {\n  return mod289(((x*34.0)+10.0)*x);\n}\n\nfloat taylorInvSqrt(float r) {\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\n\n\n\n\n// 2D:\n\nfloat snoise(vec2 v) {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n		+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n// 3D: \n\nfloat snoise(vec3 v)\n{ \n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n  // First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n  // Permutations\n  i = mod289(i); \n  vec4 p = permute( permute( permute( \n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n  //Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n  // Mix final noise value\n  vec4 m = max(0.5 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 105.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\n\n\n// 4D:\n\nvec4 grad4(float j, vec4 ip)\n  {\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n  vec4 p,s;\n\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n  s = vec4(lessThan(p, vec4(0.0)));\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www; \n\n  return p;\n}\n						\n// (sqrt(5) - 1)/4 = F4, used once below\n#define F4 0.309016994374947451\n\nfloat snoise(vec4 v) {\n  const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4\n                        0.276393202250021,  // 2 * G4\n                        0.414589803375032,  // 3 * G4\n                       -0.447213595499958); // -1 + 4 * G4\n\n  // First corner\n  vec4 i  = floor(v + dot(v, vec4(F4)) );\n  vec4 x0 = v -   i + dot(i, C.xxxx);\n\n  // Other corners\n\n  // Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\n  vec4 i0;\n  vec3 isX = step( x0.yzw, x0.xxx );\n  vec3 isYZ = step( x0.zww, x0.yyz );\n  //  i0.x = dot( isX, vec3( 1.0 ) );\n  i0.x = isX.x + isX.y + isX.z;\n  i0.yzw = 1.0 - isX;\n  //  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\n  i0.y += isYZ.x + isYZ.y;\n  i0.zw += 1.0 - isYZ.xy;\n  i0.z += isYZ.z;\n  i0.w += 1.0 - isYZ.z;\n\n  // i0 now contains the unique values 0,1,2,3 in each channel\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n  //  x0 = x0 - 0.0 + 0.0 * C.xxxx\n  //  x1 = x0 - i1  + 1.0 * C.xxxx\n  //  x2 = x0 - i2  + 2.0 * C.xxxx\n  //  x3 = x0 - i3  + 3.0 * C.xxxx\n  //  x4 = x0 - 1.0 + 4.0 * C.xxxx\n  vec4 x1 = x0 - i1 + C.xxxx;\n  vec4 x2 = x0 - i2 + C.yyyy;\n  vec4 x3 = x0 - i3 + C.zzzz;\n  vec4 x4 = x0 + C.wwww;\n\n  // Permutations\n  i = mod289(i); \n  float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n  vec4 j1 = permute( permute( permute( permute (\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n  // Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\n  // 7*7*6 = 294, which is close to the ring size 17*17 = 289.\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n  vec4 p0 = grad4(j0,   ip);\n  vec4 p1 = grad4(j1.x, ip);\n  vec4 p2 = grad4(j1.y, ip);\n  vec4 p3 = grad4(j1.z, ip);\n  vec4 p4 = grad4(j1.w, ip);\n\n  // Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  p4 *= taylorInvSqrt(dot(p4,p4));\n\n  // Mix contributions from the five corners\n  vec3 m0 = max(0.57 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n  vec2 m1 = max(0.57 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n  m0 = m0 * m0;\n  m1 = m1 * m1;\n  return 60.1 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n\n}\n\n\n\n\n// addons:\n// Fractal noise, based on Stefan Gustavson's Simplex noise\n".concat((0,o.N)(["vec2","vec3","vec4"],"\n  float fnoise(T p, int octaves, float persistence) {\n    float total = 0.0;           // Final noise value\n    float amplitude = 1.0;       // Initial amplitude\n    float frequency = 1.0;       // Initial frequency\n    float maxValue = 0.0;        // Used for normalization\n\n    for (int i = 0; i < octaves; i++) {\n      total += snoise(p * frequency) * amplitude;\n\n      maxValue += amplitude;   // Keep track of max amplitude\n      amplitude *= persistence; // Reduce amplitude for next octave\n      frequency *= 2.0;        // Increase frequency for next octave\n    }\n\n    // Normalize the result to stay within the range [0, 1]\n    return total / maxValue;\n  }\n\n  float fnoise(T p, int octaves) {\n    return fnoise(p, octaves, 0.5);\n  }\n\n  float fnoise(T p) {\n    return fnoise(p, 4, 0.5);\n  }\n"),"\n\nfloat snoiseFast4D(vec4 p) {\n  const float SCALAR = 0.01;\n  float a = SCALAR * dot(p.xy * 0.3, vec2(-127.1, 311.7));\n  float b = SCALAR * dot(p.zw * 0.8, vec2(269.5, -183.3));\n  float c = SCALAR * dot(p.wx * 6.0, vec2(23.14069, 2.665157));\n  float d = SCALAR * dot(p.zy * 1.3, vec2(-12.9898, 78.233));\n  return (snoise(vec2(a, b)) + snoise(vec2(d, c))) * 0.5;\n}\n\nfloat fnoiseFast4D(vec4 p, int octaves, float persistence) {\n  float total = 0.0;           // Final noise value\n  float amplitude = 1.0;       // Initial amplitude\n  float frequency = 1.0;       // Initial frequency\n  float maxValue = 0.0;        // Used for normalization\n\n  for (int i = 0; i < octaves; i++) {\n    total += snoiseFast4D(p * frequency) * amplitude;\n\n    maxValue += amplitude;   // Keep track of max amplitude\n    amplitude *= persistence; // Reduce amplitude for next octave\n    frequency *= 2.0;        // Increase frequency for next octave\n  }\n\n  // Normalize the result to stay within the range [0, 1]\n  return total / maxValue;\n}\n")},19264:(e,t,n)=>{"use strict";n.r(t),n.d(t,{ResponsiveProvider:()=>c,useResponsive:()=>s});var o=n(70691),a=n(67203),i=n(74245);let r=(0,a.createContext)(null);function s(){let e=(0,a.useContext)(r);if(!e)throw Error("useResponsive must be used within a ResponsiveProvider");return e}class l{constructor(){this.responsive=new i.Ft,this.frameId=-1,this.update=()=>{this.frameId=window.requestAnimationFrame(this.update);let{innerWidth:e,innerHeight:t}=window,{layoutObs:n,viewportObs:o}=this.responsive,a=navigator.maxTouchPoints>0?i.gm.Touch:i.gm.Mouse;if(e!==o.value.width||t!==o.value.height||a!==n.value.pointerType){for(let r of(o.mutate({width:e,height:t}),n.enqueueMutation(o.value.computeLayout()),n.enqueueMutation({pointerType:a}),n.flushMutations(),document.documentElement.style.setProperty("--viewport-width","".concat(e,"px")),document.documentElement.style.setProperty("--viewport-height","".concat(t,"px")),Object.values(i.Gy)))document.documentElement.classList.toggle(r,n.value.screenSize===r);for(let e of Object.values(i.t4))document.documentElement.classList.toggle(e,n.value.orientation===e);for(let e of Object.values(i.gm))document.documentElement.classList.toggle(e,n.value.pointerType===e)}},this.destroy=()=>{window.cancelAnimationFrame(this.frameId)},this.update()}}function c(e){let{children:t}=e,n=(0,a.useMemo)(()=>new l,[]);return(0,a.useEffect)(()=>n.destroy),(0,o.jsx)(r.Provider,{value:n.responsive,children:t})}},21264:(e,t,n)=>{"use strict";n.d(t,{RDiv:()=>s});var o=n(70691),a=n(36575),i=n(67941);let r=new Set(["className","style"]);function s(e){let{mobile:t,desktop:n,tablet:s,...l}=e,c=(0,i.Qs)(),u=(0,a.A)(c.layoutObs),d={...l},x={mobile:t,desktop:n,tablet:s}[u.screenSize];if(x)for(let e of Object.keys(x)){if(!1===r.has(e)){console.warn("RDiv does not support overriding '".concat(e,"' (for the moment?)"));continue}switch(e){case"className":var v,p,h,f;let t=new Set(null!=(h=null==(v=l.className)?void 0:v.split(/\s+/))?h:[]),n=new Set(null!=(f=null==(p=x.className)?void 0:p.split(/\s+/))?f:[]);for(let e of n)if(e.startsWith("p-"))for(let e of t)e.startsWith("p-")&&t.delete(e);d.className=[...t,...n].join(" ");break;case"style":d.style={...d.style,...x.style}}}return(0,o.jsx)("div",{...d})}},22899:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var o=n(65927);let a=["linear"];for(let e=1;e<=10;e++)a.push("easeIn".concat(e)),a.push("easeOut".concat(e)),a.push("easeInOut".concat(e)),a.push("easeOutIn".concat(e));let i="\n#ifndef GLSL_EASING\n#define GLSL_EASING\n\n".concat(o.S,"\n\nfloat easePow1(float x) {\n  return x;\n}\n\nfloat easePow2(float x) {\n  return x * x;\n}\n\nfloat easePow3(float x) {\n  return x * x * x;\n}\n\nfloat easePow4(float x) {\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow5(float x) {\n  float x0 = x;\n  x *= x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow6(float x) {\n  x *= x * x;\n  return x *= x;\n}\n\nfloat easePow7(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow8(float x) {\n  x *= x;\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow9(float x) {\n  x *= x * x;\n  return x *= x * x;\n}\n\nfloat easePow10(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x * x;\n  return x0 * x;\n}\n\nfloat linear(float x) {\n  return clamp01(x);\n}\n\n").concat(Array.from({length:10},(e,t)=>{let n=t+1;return"\n\n  float easeIn".concat(n," (float x) {\n    return easePow").concat(n,"(clamp01(x));\n  }\n  float easeOut").concat(n," (float x) {\n    return 1.0 - easePow").concat(n,"(clamp01(1.0 - x));\n  }\n  float easeInOut").concat(n," (float x) {\n    return x < 0.5 \n      ? 0.5 * easePow").concat(n,"(2.0 * x) \n      : 1.0 - 0.5 * easePow").concat(n,"(2.0 * (1.0 - x));\n  }\n  float easeOutIn").concat(n," (float x) {\n    return x < 0.5\n      ? 0.5 * (1.0 - easePow").concat(n,"(1.0 - x * 2.0))\n      : 1.0 - 0.5 * (1.0 - easePow").concat(n,"(2.0 * x - 1.0));\n  }\n\n").trim()}).join("\n\n"),"\n\n\n// https://www.desmos.com/calculator/mqou4lf9zc?lang=fr\nfloat easeInOut(float x, float p, float i) {\n  return  x <= 0.0 ? 0.0 :\n          x >= 1.0 ? 1.0 :\n          x <= i ? 1.0 / pow(i, p - 1.0) * pow(x, p) :\n          1.0 - 1.0 / pow(1.0 - i, p - 1.0) * pow(1.0 - x, p);\n}\n\n// https://www.desmos.com/calculator/nrjlezusdv\nfloat easeInThenOut(float x, float p) {\n  return 1.0 - pow(abs(2.0 * x - 1.0), p);\n}\n\n#endif\n")},25736:(e,t,n)=>{"use strict";function o(){alert("Coming soon. Work in progress (27/10/25).")}n.d(t,{g:()=>o})},26650:(e,t,n)=>{"use strict";n.d(t,{HomeScene:()=>S});var o=n(33540),a=n(77794),i=n(79911),r=n(67941),s=n(49797),l=n(79782),c=n(38921),u=n(63106),d=n(99332),x=n(31763),v=n(61572),p=n(77515),h=n(7147),f=n(73446),m=n(22899),g=n(55227),C=n(39231),y=n(14203),w=n(8144),b=n(79285),M=n(20487),V=n(67235),z=n(33589);function T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:512,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:512,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"transparent",a=new Blob([e],{type:"image/svg+xml"}),i=URL.createObjectURL(a),r=new Image,l=document.createElement("canvas");l.width=t,l.height=n;let c=l.getContext("2d"),u=new s.GYF(new Uint8Array(64),4,4);u.generateMipmaps=!0,u.minFilter=s.NZq,u.magFilter=s.k6q;let d=(0,z.F)(u);return r.onload=()=>{"transparent"===o?c.clearRect(0,0,t,n):(c.fillStyle=o,c.fillRect(0,0,t,n)),c.transform(1,0,0,-1,0,n),c.drawImage(r,0,0,t,n),URL.revokeObjectURL(i),d.image={data:c.getImageData(0,0,t,n).data,width:t,height:n},d.needsUpdate=!0,d.resolve()},r.onerror=e=>{d.reject(e)},r.src=i,d}function k(e,t,n){return null!=n||(n=new s.I9Y),e>1?(n.x=t,n.y=t/e):(n.x=t*e,n.y=t),n}class H extends s.YJl{*initialize(e,t){let n=new s.I9Y,o=k(1,e.aspect>=1?360:240),a=new v.S({size:o,viscosity:.995,damping:1}).initialize(e.renderer),r=(0,i.mj)(new s.eaF(new s.bdM,new s.V9B),this),l={uTime:{value:0},uViewportSize:{value:new s.I9Y},uWaterMap:{value:a.currentTexture()},uImageFill:{value:this.imageFill},uImageStroke:{value:this.imageStroke},uScale:{value:1.9},uToggleRect:{value:new s.IUQ(...this.toggleRect)},uToggleValue:{value:0},uNormalMap:{value:p.e.loadTexture("../assets/textures/paper002_1K_NormalGL.jpg")}};l.uNormalMap.value.wrapS=l.uNormalMap.value.wrapT=s.GJx,r.material.onBeforeCompile=e=>h.bI.with(e).uniforms(l).defines({USE_UV:""}).fragment.top(w.H,g.M,f.x,y.O,m.I,"\n#ifndef GLSL_TEXTURE_BICUBIC\n#define GLSL_TEXTURE_BICUBIC\n\nvec4 cubic(float v){\n  vec4 n = vec4(1.0, 2.0, 3.0, 4.0) - v;\n  vec4 s = n * n * n;\n  float x = s.x;\n  float y = s.y - 4.0 * s.x;\n  float z = s.z - 4.0 * s.y + 6.0 * s.x;\n  float w = 6.0 - x - y - z;\n  return vec4(x, y, z, w) * (1.0/6.0);\n}\n\nvec4 textureBicubic(sampler2D sampler, vec2 texCoords){\n\n  vec2 texSize = vec2(textureSize(sampler, 0));\n  vec2 invTexSize = 1.0 / texSize;\n  \n  texCoords = texCoords * texSize - 0.5;\n   \n  vec2 fxy = fract(texCoords);\n  texCoords -= fxy;\n\n  vec4 xcubic = cubic(fxy.x);\n  vec4 ycubic = cubic(fxy.y);\n\n  vec4 c = texCoords.xxyy + vec2 (-0.5, +1.5).xyxy;\n  \n  vec4 s = vec4(xcubic.xz + xcubic.yw, ycubic.xz + ycubic.yw);\n  vec4 offset = c + vec4 (xcubic.yw, ycubic.yw) / s;\n  \n  offset *= invTexSize.xxyy;\n  \n  vec4 sample0 = texture(sampler, offset.xz);\n  vec4 sample1 = texture(sampler, offset.yz);\n  vec4 sample2 = texture(sampler, offset.xw);\n  vec4 sample3 = texture(sampler, offset.yw);\n\n  float sx = s.x / (s.x + s.y);\n  float sy = s.z / (s.z + s.w);\n\n  return mix(\n    mix(sample3, sample2, sx), \n    mix(sample1, sample0, sx), \n    sy);\n}\n#endif\n",C.j).fragment.top("\n        struct Toggle {\n          float roundedRectSdf;\n          float thumbSdf;\n        };\n\n        Toggle computeToggle(vec2 uv) {\n          Toggle toggle;\n\n          vec2 size = uToggleRect.zw;\n          float radius = size.y * 0.5;\n          vec2 center = uToggleRect.xy + size * 0.5;\n          toggle.roundedRectSdf = sdRoundedBox(uv - center, size * 0.5, vec4(radius));\n\n          float deltaX = size.x - size.y;\n          float onOff = easeInOut(uToggleValue, 4.0, 0.5);\n          vec2 thumbCenter = uToggleRect.xy + vec2(radius) + vec2(deltaX * onOff, 0.0);\n          toggle.thumbSdf = sdCircle(uv - thumbCenter, radius *  0.75);\n\n          return toggle;\n        }\n      ").fragment.after("map_fragment","\n        float aspect = uViewportSize.x / uViewportSize.y;\n        // vec2 imageUv = (vUv - 0.5) / vec2(1.0, aspect) + 0.5;\n        vec2 imageUv = (vUv - 0.5) * vec2(aspect, 1.0) / uScale + 0.5;\n        vec4 stroke = texture2D(uImageStroke, imageUv);\n        vec4 fill = texture2D(uImageFill, imageUv);\n        float inside = fill.a;\n\n        Toggle toggle = computeToggle(imageUv);\n\n        // water is sampled with bicubic filtering for smoother look\n        // vec4 water = textureBicubic(uWaterMap, vUv + 0.05 * inside);\n        vec2 outsideUv = vUv;\n        vec2 insideUv = scaleAround(vUv, vec2(0.4), 1.4);\n        insideUv.x = oneMinus(insideUv.x);\n        // insideUv.y = oneMinus(insideUv.y);\n        vec4 water = textureBicubic(uWaterMap, mix(outsideUv, insideUv, fill.a));\n\n        float variation = spow(water.r * 0.1, 5.0) / 400.0;\n        variation = slimited(variation, 1.0);\n        Vec3Ramp r = ramp(0.5 + variation * 0.45, \n          ".concat((0,h.eR)("#ff773dff")," * 4.0, \n          ").concat((0,h.eR)("#eadc73ff"),", \n          ").concat((0,h.eR)("#000000"),", \n          ").concat((0,h.eR)("#c3ff7aff"),",\n          ").concat((0,h.eR)("#71ebcaff")," * 1.5);\n        diffuseColor.rgb = mix(r.a, r.b, r.t);\n\n        // Add some fake lighting\n        vec2 normalUvOffset = vec2(hash(uTime), hash(uTime * 2.0));\n        vec3 normalMap = texture2D(uNormalMap, imageUv * 1.0 + normalUvOffset).xyz * 2.0 - 1.0;\n        normalMap.y *= -1.0;\n        vec3 normal = normalize(vec3(normalMap.xy, 1.0));\n        vec3 lightDir = normalize(vec3(-1.0, 1.0, -1.0));\n        float light = clamp01(dot(normal, lightDir) * 0.5 + 0.5);\n        float dimLight = easeInOut(light, 10.0, 0.95) * oneMinus(length(imageUv - 0.5));\n        diffuseColor.rgb *= vec3(1.0 - dimLight * 150.0);\n        diffuseColor.rgb += dimLight;\n\n        float strokeVisibilityIdle = 0.2 + pow(inverseLerp(-1.2, 1.0, snoise(vec3(imageUv * 2.8, uTime * 0.2))) \n          * inverseLerp(-1.2, 1.0, snoise(vec3(imageUv * 1.8 + 1.2, uTime * 0.2))), 1.5);\n        float strokeVisibilityMove = clamp01(pow(abs(water.r) * 0.2, 8.0) * 0.25);\n        float strokeVisibility = stroke.r * max(strokeVisibilityIdle, strokeVisibilityMove);\n        diffuseColor.rgb = screenBlending(diffuseColor.rgb, vec3(1.0) * strokeVisibility);\n\n        diffuseColor.rgb = pow(oneMinus(diffuseColor.rgb), vec3(6.0));\n        diffuseColor.rgb *= vec3(oneMinus(pow(oneMinus(light), 1.75)));\n\n        // float sdf = opOnion(toggle.thumbSdf + -mod(uTime, 1.0) * 0.01, 0.0);\n        // sdf = 1.0 - smoothstep(0.002, 0.0, sdf);\n        // diffuseColor.rgb *= vec3(sdf, sdf, 1.0);\n\n        float thumb = smoothstep(0.0005, 0.0, toggle.thumbSdf);\n        vec3 thumbColorOff = mix(").concat((0,h.eR)("#ff0008ff"),", ").concat((0,h.eR)("#000000"),", 1.0 - easeInOut(sin01(uTime * 0.5), 6.0, 0.95));\n        vec3 thumbColorOn = pow(").concat((0,h.eR)("#2500AD"),", vec3(2.2));\n        vec3 thumbColor = mix(thumbColorOff, thumbColorOn, easeInOut(uToggleValue, 4.0, 0.5));\n        diffuseColor.rgb = mix(diffuseColor.rgb, thumbColor, thumb);\n\n        diffuseColor.a = 1.0;\n\n        // debug\n        // diffuseColor = stroke;\n        // diffuseColor = fill;\n        // diffuseColor.rgb = vec3(fill.a);\n      "));let c=V.Q.send(x.n).assertPayload(),M=!1,z=()=>{M=!0,console.log("started recording pointer data"),this.recordingPointerBuffer=[]},T=()=>{M=!1;let e=function(e){let t=e.length,n=new ArrayBuffer(4*t),o=new DataView(n);for(let n=0;n<t;n++)o.setFloat32(4*n,e[n],!0);let a=new Uint8Array(n),i="";for(let e=0;e<a.length;e++)i+=String.fromCharCode(a[e]);return window.btoa(i)}(this.recordingPointerBuffer);console.log("recording pointer data:"),console.log(e),navigator.clipboard.writeText(e),this.recordingPointerBuffer=[]};yield(0,u.a)([[{code:"Space"},()=>this.state.playing=!this.state.playing],[{code:/Arrow/},()=>this.state.nextFrame=!0],[{code:"KeyR",modifiers:"shift"},()=>{M?T():z()}]]),yield(0,d.s)(e.domElement,{onTap:()=>{this.state.autoMove=!this.state.autoMove}});let H=new s.Pq0,S=e.pointer.intersectPlane("xy",{oldFactor:1}).clone(),P=e.pointer.intersectPlane("xy",{oldFactor:0}).clone();return yield e.onTick(i=>{if(!1===this.state.playing&&!1===this.state.nextFrame)return;this.state.nextFrame=!1;let s=e.aspect>1?1:(0,b.remapUnclamped)(e.aspect,1,390/663,.85,.64);l.uScale.value=1.25*s,l.uTime.value+=i.deltaTime,l.uToggleValue.value+=(!!this.state.autoMove-l.uToggleValue.value)*(0,b.clamp)(5*i.deltaTime,0,1);let{realSize:u}=c.dampedVertigo.state;l.uViewportSize.value.set(u.width,u.height),a.damping=e.pointer.buttonDown()?1:.995,S.copy(e.pointer.intersectPlane("xy",{oldFactor:1})),P.copy(e.pointer.intersectPlane("xy",{oldFactor:0})),S.intersected&&P.intersected?H.subVectors(P.point,S.point):H.set(0,0,0);let d=(0,b.clamp)(H.length()/i.deltaTime,0,50),x=(0,b.clamp)(Math.round(80/e.averageFps),1,5);for(let r=0;r<x;r++){let s=e.pointer.intersectPlane("xy",{oldFactor:r/x});s.intersected&&n.set((0,b.inverseLerp)(-u.width/2,u.width/2,s.point.x),(0,b.inverseLerp)(-u.height/2,u.height/2,s.point.y));let l=e.aspect>=1?360:240;k(u.x/u.y,l,o);let c="touch"===t.layoutObs.value.pointerType,v=c||e.pointer.buttonDown()?l/10:(0,b.lerpUnclamped)(0,l/10,Math.max(0,(0,b.inverseLerpUnclamped)(3,20,d))**.5),p=c?+!!e.pointer.buttonDown():1;if(a.setSize(o),a.pointer(n.x,n.y,v,-p),this.state.autoMove){if(i.frame%4>0)return;let e=2*this.state.autoMoveState,t=.5*e,n=2*e,o=.5+.16*Math.cos(t)+.02*Math.cos(n),r=.5+.16*Math.sin(2*t)+.02*Math.sin(n),s=l/10;a.pointer(o,r,s,-1),this.state.autoMoveState+=.02}a.update(i.deltaTime/x),M&&(this.recordingPointerBuffer.push(n.x,n.y,v,-p),this.recordingPointerBuffer.length>=4e3&&T())}l.uWaterMap.value=a.currentTexture(),r.scale.set(u.width,u.height,1)}),this}constructor(){super(),this.state={playing:!0,nextFrame:!1,autoMove:!1,autoMoveState:0},this.recordingPointerBuffer=[],this.name="home-text";let e=new l.c().parse('\n\n<svg width="1024" height="1024" viewBox="0 0 1024 1024" fill="none"\n  xmlns="http://www.w3.org/2000/svg">\n  <g id="home-text-b-svg">\n    \x3c!-- <rect width="1024" height="1024" fill="white"/> --\x3e\n    <g id="text">\n      <path d="M217.496 419.333L169.5 261.756H199.813L232.882 374.541H233.8L266.41 261.756H295.115L247.12 419.333H217.496Z" stroke="black" stroke-width="0.5"/>\n      <path d="M306.569 419.333V261.756H335.963V419.333H306.569Z" stroke="black" stroke-width="0.5"/>\n      <path d="M408.654 422.089C399.009 422.089 390.053 420.252 381.786 416.576C373.519 412.901 366.859 407.465 361.807 400.267C356.755 392.917 354.229 383.882 354.229 373.162C354.229 372.244 354.229 371.325 354.229 370.406C354.382 369.487 354.458 368.722 354.458 368.109H385.001C385.001 368.262 384.924 368.798 384.771 369.717C384.771 370.483 384.771 371.172 384.771 371.784C384.771 379.288 386.991 385.337 391.431 389.931C395.871 394.525 402.071 396.822 410.032 396.822C418.912 396.822 425.112 394.908 428.633 391.079C432.154 387.098 433.915 382.81 433.915 378.216C433.915 372.856 432.537 368.568 429.781 365.353C427.026 362.137 423.351 359.533 418.758 357.543C414.319 355.399 409.343 353.485 403.832 351.8C398.473 350.116 393.038 348.201 387.527 346.057C382.015 343.914 376.963 341.157 372.37 337.788C367.931 334.266 364.333 329.749 361.577 324.236C358.821 318.723 357.444 311.679 357.444 303.103C357.444 293.149 359.893 284.956 364.792 278.525C369.691 271.94 376.121 267.04 384.082 263.824C392.196 260.608 400.846 259 410.032 259C419.371 259 427.868 260.608 435.522 263.824C443.33 267.04 449.531 272.093 454.124 278.984C458.87 285.722 461.242 294.527 461.242 305.4V308.156H431.159V306.089C431.159 299.351 429.245 294.068 425.418 290.24C421.744 286.258 416.539 284.267 409.802 284.267C402.76 284.267 397.325 285.875 393.498 289.091C389.67 292.154 387.757 296.135 387.757 301.036C387.757 305.63 389.134 309.305 391.89 312.061C394.646 314.818 398.244 317.115 402.683 318.953C407.276 320.79 412.328 322.551 417.84 324.236C423.351 325.767 428.786 327.605 434.145 329.749C439.656 331.892 444.632 334.725 449.071 338.248C453.664 341.617 457.339 346.057 460.094 351.57C462.85 356.93 464.228 363.745 464.228 372.014C464.228 384.112 461.855 393.836 457.109 401.186C452.363 408.384 445.78 413.667 437.36 417.036C429.092 420.405 419.524 422.089 408.654 422.089Z" stroke="black" stroke-width="0.5"/>\n      <path d="M540.9 422.089C524.06 422.089 510.817 417.725 501.172 408.996C491.68 400.114 486.934 387.098 486.934 369.947V261.756H516.328V369.028C516.328 378.063 518.472 384.954 522.758 389.701C527.045 394.448 533.092 396.822 540.9 396.822C548.708 396.822 554.755 394.448 559.042 389.701C563.482 384.954 565.702 378.063 565.702 369.028V261.756H595.096V369.947C595.096 387.098 590.274 400.114 580.628 408.996C570.983 417.725 557.741 422.089 540.9 422.089Z" stroke="black" stroke-width="0.5"/>\n      <path d="M608.828 419.333L659.579 261.756H693.796L744.547 419.333H714.464L704.819 388.323H646.719L637.304 419.333H608.828ZM654.757 362.137H696.781L680.936 309.535C680.171 306.778 679.405 303.716 678.64 300.347C677.874 296.978 677.262 294.145 676.803 291.848C676.496 289.397 676.343 288.172 676.343 288.172H675.425C675.425 288.172 675.195 289.474 674.736 292.077C674.276 294.527 673.664 297.437 672.899 300.806C672.286 304.175 671.597 307.085 670.832 309.535L654.757 362.137Z" stroke="black" stroke-width="0.5"/>\n      <path d="M758.509 419.333V261.756H787.903V391.768H854.5V419.333H758.509Z" stroke="black" stroke-width="0.5"/>\n      <path d="M212.443 561.974V430.584H173.404V404.398H280.877V430.584H241.838V561.974H212.443Z" stroke="black" stroke-width="0.5"/>\n      <path d="M298.325 561.974V404.398H398.679V430.584H327.719V468.255H388.575V494.441H327.719V535.788H400.057V561.974H298.325Z" stroke="black" stroke-width="0.5"/>\n      <path d="M480.633 564.73C460.884 564.73 445.498 558.069 434.475 544.746C423.452 531.423 417.94 510.903 417.94 483.186C417.94 455.315 423.452 434.795 434.475 421.625C445.498 408.303 460.884 401.641 480.633 401.641C491.656 401.641 501.531 403.785 510.257 408.073C518.984 412.361 525.873 419.022 530.925 428.057C535.977 437.092 538.503 448.73 538.503 462.972H508.42C508.42 450.721 505.817 441.686 500.612 435.867C495.56 429.895 488.9 426.909 480.633 426.909C469.763 426.909 461.649 431.426 456.291 440.461C450.932 449.343 448.253 461.67 448.253 477.443V488.928C448.253 504.701 451.009 517.105 456.52 526.14C462.032 535.022 470.376 539.463 481.552 539.463C490.125 539.463 496.938 536.553 501.99 530.734C507.195 524.762 509.798 515.727 509.798 503.629H538.503C538.503 517.412 535.977 528.82 530.925 537.855C525.873 546.89 518.984 553.628 510.257 558.069C501.684 562.51 491.809 564.73 480.633 564.73Z" stroke="black" stroke-width="0.5"/>\n      <path d="M559.813 561.974V404.398H589.208V468.255H638.811V404.398H668.205V561.974H638.811V494.441H589.208V561.974H559.813Z" stroke="black" stroke-width="0.5"/>\n      <path d="M692.271 561.974V530.505H723.962V561.974H692.271Z" stroke="black" stroke-width="0.5"/>\n      <path d="M169.5 706L220.251 548.424H254.468L305.219 706H275.136L265.491 674.99H207.391L197.976 706H169.5ZM215.429 648.804H257.454L241.608 596.202C240.843 593.445 240.077 590.383 239.312 587.014C238.546 583.645 237.934 580.812 237.475 578.515C237.168 576.065 237.015 574.84 237.015 574.84H236.097C236.097 574.84 235.867 576.141 235.408 578.744C234.948 581.195 234.336 584.104 233.571 587.473C232.958 590.842 232.269 593.752 231.504 596.202L215.429 648.804Z" stroke="black" stroke-width="0.5"/>\n      <path d="M319.181 706V548.424H385.089C401.011 548.424 413.029 552.711 421.143 561.287C429.257 569.709 433.314 580.429 433.314 593.445C433.314 602.94 430.941 611.209 426.195 618.253C421.449 625.298 415.019 630.504 406.905 633.873L437.218 706H405.297L379.118 640.305H348.575V706H319.181ZM348.575 614.348H380.955C388.151 614.348 393.356 612.511 396.571 608.836C399.939 605.16 401.623 600.03 401.623 593.445C401.623 587.626 400.016 583.032 396.801 579.663C393.739 576.294 388.84 574.61 382.103 574.61H348.575V614.348Z" stroke="black" stroke-width="0.5"/>\n      <path d="M484.248 706V574.61H445.209V548.424H552.682V574.61H513.643V706H484.248Z" stroke="black" stroke-width="0.5"/>\n      <path d="M545.828 706V674.531H577.519V706H545.828Z" stroke="black" stroke-width="0.5"/>\n    </g>\n    <path id="baseline" d="M232 728.75H237.25V740.75M237.25 740.75H232M237.25 740.75H242M272 728.5V732.5M272 732.5V741M272 732.5C272 730.5 273.25 728.5 275.75 728.5C278.25 728.5 280 729.75 280 732.5V741M237.25 725V723M295.5 741V739M192.5 734.5H202C202 730.5 200 728.5 197.5 728.5C195 728.5 192.5 729.5 192.5 734.5ZM192.5 734.5C192.5 738.5 193.5 741 197.5 741C200.45 741 201.333 739 201.75 738M212 738.75C213.5 740.5 215 741 217.5 741C220 741 221.193 740.075 221.5 739C221.974 737.342 221.749 735.018 217 734.5C213.268 734.093 212.5 733.5 212.5 731.25C212.5 729.25 214.75 728.5 216.75 728.5C218.75 728.5 220.25 729.25 221.25 730.25M262.25 727.75H259.25V729.609M255 736.111C253.118 735.66 252.25 734.167 252.25 732.5C252.25 730.5 253.25 728.5 256.25 728.5C259.25 728.5 260.25 730.5 260.25 732.5C260.25 734.5 259 736.25 256.25 736.25C255.792 736.25 255.376 736.201 255 736.111ZM255 736.111C254 736.5 252.5 737 252.5 738C252.5 738.909 252.5 739.817 254 739.976M254 739.976C254.151 739.992 254.317 740 254.5 740C256.5 740 255.25 740 257.75 740C260.25 740 261.75 740.75 261.75 742.5C261.75 744.5 260 746 256 746C252 746 251.5 744 251.5 743C251.5 742 252 740.5 254 739.976ZM399.75 727.75H396.75V729.609M392.5 736.111C390.618 735.66 389.75 734.167 389.75 732.5C389.75 730.5 390.75 728.5 393.75 728.5C396.75 728.5 397.75 730.5 397.75 732.5C397.75 734.5 396.5 736.25 393.75 736.25C393.292 736.25 392.876 736.201 392.5 736.111ZM392.5 736.111C391.5 736.5 390 737 390 738C390 738.909 390 739.817 391.5 739.976M391.5 739.976C391.651 739.992 391.817 740 392 740C394 740 392.75 740 395.25 740C397.75 740 399.25 740.75 399.25 742.5C399.25 744.5 397.5 746 393.5 746C389.5 746 389 744 389 743C389 742 389.5 740.5 391.5 739.976ZM330.5 741V733M330.5 733V724.5H335.5C338 724.5 340 725.5 340 728.5C340 731.5 339 733 335.5 733H330.5ZM349.5 728.75H353.75V733.772M353.75 740.75H359.25M353.75 740.75H349.5M353.75 740.75V733.772M353.75 733.772C353.75 731 354.75 728.75 358 728.75H360.5M408.5 728.75H412.75V733.772M412.75 740.75H418.25M412.75 740.75H408.5M412.75 740.75V733.772M412.75 733.772C412.75 731 413.75 728.75 417 728.75H419.5M428.5 731C430 728 433.5 728.5 434.5 729C435.5 729.5 436.5 730.5 436.5 732.5C436.5 732.963 436.5 733.673 436.5 734.5M438.736 740.75H436.5C436.5 739.937 436.5 738.746 436.5 737.5M436.5 734.5C435.833 734.5 434.25 734.5 432.25 734.5C429.5 734.5 428 735.75 428 737.5C428 739.5 429 741 432 741C435 741 436 739 436.5 737.5M436.5 734.5C436.5 735.417 436.5 736.477 436.5 737.5M447.5 728.5V732M447.5 732V741M447.5 732C447.5 729.266 449 728.5 450.25 728.5C451.5 728.5 452.75 729.25 452.75 731V732M452.75 732V741M452.75 732C452.75 729.516 454 728.5 455.25 728.5C456.5 728.5 458 729.25 458 731V741M467.25 728.5V732M467.25 732V741M467.25 732C467.25 729.266 468.75 728.5 470 728.5C471.25 728.5 472.5 729.25 472.5 731V732M472.5 732V741M472.5 732C472.5 729.516 473.75 728.5 475 728.5C476.25 728.5 477.75 729.25 477.75 731V741M605.5 734.5H615C615 730.5 613 728.5 610.5 728.5C608 728.5 605.5 729.5 605.5 734.5ZM605.5 734.5C605.5 738.5 606.5 741 610.5 741C613.45 741 614.333 739 614.75 738M625.25 738.75C626.75 740.5 628.25 741 630.75 741C633.25 741 634.388 739.825 634.695 738.75C635.169 737.092 634.999 735.018 630.25 734.5C626.518 734.093 625.75 733.5 625.75 731.25C625.75 729.25 628 728.5 630 728.5C632 728.5 633.5 729.25 634.5 730.25M508 728.5V732.5M508 732.5V741M508 732.5C508 730.5 509.25 728.5 511.75 728.5C514.25 728.5 516 729.75 516 732.5V741M665.25 728.5V732.5M665.25 732.5V741M665.25 732.5C665.25 730.5 666.5 728.5 669 728.5C671.5 728.5 673.25 729.75 673.25 732.5V741M488 728.75H493.25V740.75M493.25 740.75H488M493.25 740.75H498M493.25 725V723M537.5 727.75H534.5V729.609M530.25 736.111C528.368 735.66 527.5 734.167 527.5 732.5C527.5 730.5 528.5 728.5 531.5 728.5C534.5 728.5 535.5 730.5 535.5 732.5C535.5 734.5 534.25 736.25 531.5 736.25C531.042 736.25 530.626 736.201 530.25 736.111ZM530.25 736.111C529.25 736.5 527.75 737 527.75 738C527.75 738.909 527.75 739.817 529.25 739.976M529.25 739.976C529.401 739.992 529.567 740 529.75 740C531.75 740 530.5 740 533 740C535.5 740 537 740.75 537 742.5C537 744.5 535.25 746 531.25 746C527.25 746 526.75 744 526.75 743C526.75 742 527.25 740.5 529.25 739.976ZM551.25 741V739M586.25 741V733M586.25 733V724.5H591.25C594.75 724.5 595.75 726.5 595.75 728.5C595.75 730.5 595.25 733 591.25 733H590.35M586.25 733H590.35M590.35 733L595.5 741M743.25 734.5H752.75C752.75 730.5 750.75 728.5 748.25 728.5C745.75 728.5 743.25 729.5 743.25 734.5ZM743.25 734.5C743.25 738.5 744.25 741 748.25 741C751.2 741 752.083 739 752.5 738M767.5 741V739M704.75 728.5V732.5M704.75 732.5V741M704.75 732.5C704.75 730.5 706 728.5 708.5 728.5C711 728.5 712.75 729.75 712.75 732.5V741M684.25 731.128C685.75 728.128 689.25 728.628 690.25 729.128C691.25 729.628 692.25 730.628 692.25 732.628V734.628M694.486 740.878H692.25V737.628M692.25 734.628H688C685.25 734.628 683.75 735.878 683.75 737.628C683.75 739.628 684.75 741.128 687.75 741.128C690.75 741.128 691.75 739.128 692.25 737.628M692.25 734.628V737.628M732.738 731.087C731.808 729.266 730.154 728.5 728.5 728.5C726 728.5 724 730.75 724 734.75C724 738.75 725 741 728.5 741C730.778 741 732.209 740.259 732.93 738.5M173 724.5V740.75H177.25C180.5 740.75 182.75 738.25 182.75 732.75C182.75 727.25 181 724.5 177.25 724.5H173ZM374.25 728.5C376.75 728.5 379 730.25 379 734.75C379 738.75 377.75 741 374.25 741C371 741 369.5 738.75 369.5 734.75C369.5 730.75 371.75 728.5 374.25 728.5ZM649.25 728.5C651.75 728.5 654.25 730.25 654.25 734.75C654.25 739.25 652.75 741 649.25 741C645.75 741 644.75 738.75 644.75 734.75C644.75 730.75 646.75 728.5 649.25 728.5Z" stroke="black" stroke-width="0.5"/>\n    <g id="toggle">\n      <path id="manual" d="M181.375 765.375C182.125 763.875 183.875 764.125 184.375 764.375C184.875 764.625 185.375 765.125 185.375 766.125V767.125M186.493 770.25H185.375V768.625M185.375 767.125H183.25C181.875 767.125 181.125 767.75 181.125 768.625C181.125 769.625 181.625 770.375 183.125 770.375C184.625 770.375 185.125 769.375 185.375 768.625M185.375 767.125V768.625M190 764.125V766.125M190 766.125V770.375M190 766.125C190 765.125 190.625 764.125 191.875 764.125C193.125 764.125 194 764.75 194 766.125V770.375M202 770.375V768.375M202 768.375V764.125M202 768.375C202 769.375 201.375 770.375 200.125 770.375C198.875 770.375 198 769.892 198 768.375V764.125M173 764.125V765.875M173 765.875V770.375M173 765.875C173 764.508 173.75 764.125 174.375 764.125C175 764.125 175.625 764.5 175.625 765.375V765.875M175.625 765.875V770.375M175.625 765.875C175.625 764.633 176.25 764.125 176.875 764.125C177.5 764.125 178.25 764.5 178.25 765.375V770.375M205.875 765.375C206.625 763.875 208.375 764.125 208.875 764.375C209.375 764.625 209.875 765.125 209.875 766.125V767.125M210.993 770.25H209.875V768.625M209.875 767.125H207.75C206.375 767.125 205.625 767.75 205.625 768.625C205.625 769.625 206.125 770.375 207.625 770.375C209.125 770.375 209.625 769.375 209.875 768.625M209.875 767.125V768.625M213.875 761.625H216.375V770.25M216.375 770.25H213.875M216.375 770.25H218.875" stroke="black" stroke-width="0.5"/>\n      <rect id="rect" x="230.156" y="757.281" width="31.4375" height="17.4375" rx="8.71875" stroke="black" stroke-width="0.5625"/>\n      <path id="auto" d="M273.125 765.125C273.875 763.625 275.625 763.875 276.125 764.125C276.625 764.375 277.125 764.875 277.125 765.875V766.875M278.243 770H277.125V768.375M277.125 766.875H275C273.625 766.875 272.875 767.5 272.875 768.375C272.875 769.375 273.375 770.125 274.875 770.125C276.375 770.125 276.875 769.125 277.125 768.375M277.125 766.875V768.375M285.5 770.125V768.125M285.5 768.125V763.875M285.5 768.125C285.5 769.125 284.875 770.125 283.625 770.125C282.375 770.125 281.5 769.642 281.5 768.125V763.875M288.625 764.125H291.125M291.125 764.125H294.375M291.125 764.125V761.875M291.125 764.125V770.125H294.375M299.875 763.875C301.125 763.875 302.25 764.75 302.25 767C302.25 769 301.625 770.125 299.875 770.125C298.25 770.125 297.5 769 297.5 767C297.5 765 298.625 763.875 299.875 763.875Z" stroke="black" stroke-width="0.5"/>\n    </g>\n  </g>\n</svg>\n\n'),t=e.xml,n=t.width.baseVal.value,o=t.height.baseVal.value,a=10/Math.max(n,o),i=e.paths.flatMap(e=>e.toShapes(!0)).map(e=>new s.MSw(e));!function(e){if(e.index){let t=e.index.array;for(let e=0,n=t.length;e<n;e+=3){let n=t[e+0],o=t[e+1];t[e+0]=o,t[e+1]=n}e.index.needsUpdate=!0}else{let t=e.attributes.position.count;for(let n of Object.values(e.attributes)){let{array:e,itemSize:o}=n;switch(n.needsUpdate=!0,o){case 3:{let n=new s.Pq0,a=new s.Pq0;for(let i=0;i<t;i+=3)n.fromArray(e,(i+0)*o),a.fromArray(e,(i+1)*o),n.toArray(e,(i+1)*o),a.toArray(e,(i+0)*o);break}case 2:{let n=new s.I9Y,a=new s.I9Y;for(let i=0;i<t;i+=3)n.fromArray(e,(i+0)*o),a.fromArray(e,(i+1)*o),n.toArray(e,(i+1)*o),a.toArray(e,(i+0)*o)}}}}if(e.attributes.normal){let t=e.attributes.normal;for(let e=0;e<t.count;e++)t.setXYZ(e,-t.getX(e),-t.getY(e),-t.getZ(e));t.needsUpdate=!0}}(c.pP(i,!1).translate(-n/2,-o/2,0).scale(a,-a,1)),this.imageFill=function(e,t){for(let t of(e=e.cloneNode(!0)).querySelectorAll("line"))t.remove();for(let t of e.querySelectorAll("#text *"))t.setAttribute("stroke","none"),t.setAttribute("fill","#f00");for(let t of e.querySelectorAll("#baseline, #toggle"))t.remove();return T(e.outerHTML,4096,4096)}(t,4096),this.imageStroke=function(e,t){for(let t of(e=e.cloneNode(!0)).querySelectorAll("line, path, rect"))t.setAttribute("stroke","#fff"),t.setAttribute("fill","none"),t.setAttribute("stroke-width","0.5");for(let t of e.querySelectorAll("#baseline"))t.setAttribute("stroke-width","0.6");return T(e.outerHTML,4096,4096,"black")}(t,4096);let r=t.querySelector("#toggle rect");this.toggleRect=new M.M_(r.x.baseVal.value,r.y.baseVal.value,r.width.baseVal.value,r.height.baseVal.value).relativeTo({x:0,y:0,width:n,height:o}).mirrorY(1)}}function S(){let e=(0,o.Fw)(),t=(0,r.Qs)();return(0,o.dB)("my-scene",function*(n){var o;e.pipeline.basicPasses.fxaa.enabled=!1,null==(o=document.querySelector("nextjs-portal"))||o.remove(),(0,i.mj)(new a.u,n),(0,i.mj)((yield*new H().initialize(e,t)),n)},[]),null}},38911:()=>{},39231:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});let o="\n\n  // Inigo Quilez\n  // https://iquilezles.org/articles/distfunctions2d/\n\n  // Circle - exact   (https://www.shadertoy.com/view/3ltSW2)\n  float sdCircle( vec2 p, float r )\n  {\n    return length(p) - r;\n  }\n\n  // Rounded Box - exact   (https://www.shadertoy.com/view/4llXD7 and https://www.youtube.com/watch?v=s5NGeUV2EyU)\n  float sdRoundedBox( in vec2 p, in vec2 b, in vec4 r )\n  {\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n  }\n\n  // Box - exact   (https://www.youtube.com/watch?v=62-pRVZuS5c)\n  float sdBox( in vec2 p, in vec2 b )\n  {\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n  }\n\n  // Segment - exact   (https://www.shadertoy.com/view/3tdSDj and https://www.youtube.com/watch?v=PMltMdi1Wzg)\n  float sdSegment( in vec2 p, in vec2 a, in vec2 b )\n  {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n  }\n\n  // Arc - exact   (https://www.shadertoy.com/view/wl23RK)\n  float sdArc( in vec2 p, in vec2 sc, in float ra, float rb )\n  {\n    // sc is the sin/cos of the arc's aperture\n    p.x = abs(p.x);\n    return ((sc.y*p.x>sc.x*p.y) ? length(p-sc*ra) : \n                                  abs(length(p)-ra)) - rb;\n  }\n\n  float sdRing( in vec2 p, in vec2 n, in float r, in float th )\n  {\n    p.x = abs(p.x);\n    p = mat2(n.x,n.y,-n.y,n.x)*p;\n    return max( abs(length(p)-r)-th*0.5,\n                length(vec2(p.x,max(0.0,abs(r-p.y)-th*0.5)))*sign(p.x) );\n  }\n\n  float opRound( in float d, in float r )\n  {\n    return d - r;\n  }\n\n  float opOnion( in float d, in float r )\n  {\n    return abs(d) - r;\n  }\n"},41854:(e,t,n)=>{"use strict";n.d(t,{Link:()=>i});var o=n(70691),a=n(25736);function i(e){let{word:t=""}=e;return(0,o.jsx)("button",{className:"cursor-pointer hover:text-[#f30]",onClick:a.g,children:t})}},55227:(e,t,n)=>{"use strict";n.d(t,{M:()=>r});var o=n(22899),a=n(1029);let i="\n\nstruct FloatRamp {\n  float a;\n  float b;\n  float t;\n};\n\nstruct Vec2Ramp {\n  vec2 a;\n  vec2 b;\n  float t;\n};\n\nstruct Vec3Ramp {\n  vec3 a;\n  vec3 b;\n  float t;\n};\n\nstruct Vec4Ramp {\n  vec4 a;\n  vec4 b;\n  float t;\n};\n\n".concat((0,a.N)("vecX",e=>{let t=e[0].toUpperCase()+e.slice(1)+"Ramp";return"\n\n// 1 stop (simple linear interpolation)\n".concat(t," ramp(float t, T a, T b) {\n  return ").concat(t,"(a, b, t);\n}\n\n// 2 stops\n").concat(t," ramp(float t, T a, T b, T c) {\n  if (t < 0.5) {\n    return ").concat(t,"(a, b, t * 2.0);\n  } else {\n    return ").concat(t,"(b, c, t * 2.0 - 1.0);\n  }\n}\n\n// 4 stops\n").concat(t," ramp(float t, T a, T b, T c, T d) {\n  if (t < 0.333) {\n    return ").concat(t,"(a, b, t * 3.0);\n  } else if (t < 0.666) {\n    return ").concat(t,"(b, c, t * 3.0 - 1.0);\n  } else {\n    return ").concat(t,"(c, d, t * 3.0 - 2.0);\n  }\n}\n\n// 5 stops\n").concat(t," ramp(float t, T a, T b, T c, T d, T e) {\n  if (t < 0.25) {\n    return ").concat(t,"(a, b, t * 4.0);\n  } else if (t < 0.5) {\n    return ").concat(t,"(b, c, t * 4.0 - 1.0);\n  } else if (t < 0.75) {\n    return ").concat(t,"(c, d, t * 4.0 - 2.0);\n  } else {\n    return ").concat(t,"(d, e, t * 4.0 - 3.0);\n  }\n}\n\n").slice(1,-1)})),r="\n#ifndef GLSL_RAMP\n#define GLSL_RAMP\n".concat(o.I,"\n").concat(i,"\n#endif\n")},61572:(e,t,n)=>{"use strict";n.d(t,{S:()=>r});var o=n(49797),a=n(13565);let i={...a.q.defaultParams,size:512,viscosity:.98,cellScale:1,damping:.98};class r extends a.q{get viscosity(){return this.updateUniforms.uViscosity.value}set viscosity(e){this.updateUniforms.uViscosity.value=e}get cellScale(){return this.updateUniforms.uCellScale.value}set cellScale(e){this.updateUniforms.uCellScale.value=e}get damping(){return this.updateUniforms.uDamping.value}set damping(e){this.updateUniforms.uDamping.value=e}pointer(e,t,n,o){let{uPointer:a}=this.updateUniforms;a.value.set(e,t,n,o)}constructor(e){super({filter:"linear",...e}),this.shaders({initial:{fragmentColor:"\n          gl_FragColor.rgb = vec3(0.0);\n          gl_FragColor.a = 1.0;\n        "},update:{uniforms:{uViscosity:{value:this.params.viscosity},uCellScale:{value:this.params.cellScale},uDamping:{value:this.params.damping},uPointer:{value:new o.IUQ(.5,.5,.1,1)}},fragmentTop:"\n          vec4 fetch(vec2 uv) {\n            if (uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0 || uv.y > 1.0) {\n              return vec4(0.0);\n            }\n            float margin = 0.2;\n            float edgeDist = min(min(uv.x, 1.0 - uv.x), min(uv.y, 1.0 - uv.y));\n            edgeDist = 1.0 - pow(1.0 - edgeDist, 15.0);\n            float edgeFade = smoothstep(0.0, margin, edgeDist);\n            return texture2D(uTexture, uv) * edgeFade;\n          }\n        ",fragmentColor:"\n          vec2 uv = vUv;\n          float viscosity = uViscosity;\n          vec2 cellSize = uCellScale / uTextureSize;\n\n          vec4 center = fetch(uv);\n          vec4 north = fetch(uv + vec2(0.0, cellSize.y));\n          vec4 south = fetch(uv - vec2(0.0, cellSize.y));\n          vec4 east = fetch(uv + vec2(cellSize.x, 0.0));\n          vec4 west = fetch(uv - vec2(cellSize.x, 0.0));\n\n          // x: previous height\n          // y: penultimate height\n          // z: unused\n          // w: unused\n\n          float newHeight = ((north.x + south.x + east.x + west.x) * 0.5 - center.y) * viscosity;\n\n          // Pointer influence\n          float radius = uPointer.z;\n          float strength = uPointer.w;\n          float dist = distance(uv * uTextureSize, uPointer.xy * uTextureSize) - radius;\n          float cellLength = length(cellSize);\n          float influence = smoothstep(cellLength * 0.5, -cellLength * 0.5, dist);\n          newHeight += influence * strength;\n\n          // Damping\n          newHeight *= uDamping;\n          center.x *= uDamping;\n\n          gl_FragColor = vec4(newHeight, center.x, 0.0, 1.0);\n        "}})}}r.defaultParams=i},67941:(e,t,n)=>{"use strict";n.d(t,{Qs:()=>o.useResponsive});var o=n(19264);n(74245)},74245:(e,t,n)=>{"use strict";n.d(t,{Ft:()=>c,Gy:()=>a,gm:()=>r,t4:()=>i});var o=n(85795),a=function(e){return e.Mobile="mobile",e.Tablet="tablet",e.Desktop="desktop",e}({}),i=function(e){return e.Portrait="portrait",e.Landscape="landscape",e}({}),r=function(e){return e.Touch="touch",e.Mouse="mouse",e}({});class s{constructor(){this.screenSize="desktop",this.orientation="landscape",this.pointerType="mouse"}}class l{get aspect(){return this.width/this.height}computeLayout(){var e,t;let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new s;return n.orientation=this.aspect>=1?"landscape":"portrait",e=this.width,this.height,n.screenSize=e<768?"mobile":e<1024?"tablet":"desktop",n}constructor(e,t){this.width=e,this.height=t}}class c{constructor(){this.layoutObs=new o.ObservableTree(new s),this.viewportObs=new o.ObservableTree(new l(1280,1024))}}},77515:(e,t,n)=>{"use strict";n.d(t,{e:()=>C});var o=n(28535),a=n(76999),i=n(57368),r=n(49797),s=n(5832),l=n(33589),c=new WeakMap;class u extends r.Nv2{dispose(){!(0,o._)(this,c)&&(super.dispose(),(0,i._)(this,c,!0),this.video&&(this.video.pause(),this.video.src="",this.video.parentNode&&this.video.parentNode.removeChild(this.video),this.video=null))}static fromUrl(e){let{loop:t=!0,autoplay:n=!0,muted:o=!0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=document.createElement("video");return a.src=e,a.loop=t,a.autoplay=n,a.muted=o,a.playsInline=!0,a.crossOrigin="anonymous",a.play(),new u(a)}constructor(e){super(e),(0,a._)(this,c,{writable:!0,value:void 0}),this.video=e,(0,i._)(this,c,!1)}}let d={video:["mp4","webm"],srgb:["jpg","jpeg","png","webp"],linear:["hdr","exr"]},x=e=>d.srgb.includes(e),v=e=>d.linear.includes(e),p=e=>d.video.includes(e),h=e=>x(e)||v(e);var f=new WeakMap,m=new WeakMap;class g{loadTexture(e,t){var n,a,c;let d,x,h=new URL(e,window.location.href).pathname.split("/").pop()||"unknown",g=null==(n=h.match(/[^.]+$/))?void 0:n[0];if(void 0===g)throw Error("No extension found in url: ".concat(e));if(p(g)){let t=(0,l.F)(u.fromUrl(e));return t.video.onloadedmetadata=()=>{t.image.width=t.video.videoWidth,t.image.height=t.video.videoHeight,t.resolve()},t.name=h,t}let C=(v(g)?(0,i._)(this,m,null!=(a=(0,o._)(this,m))?a:new s.Y):(0,i._)(this,f,null!=(c=(0,o._)(this,f))?c:new r.Tap)).load(e,e=>{var n;e.name=h,e.colorSpace=null!=(n=null==t?void 0:t.colorSpace)?n:v(g)?r.Zr2:r.er$,w(),d(e)},void 0,()=>{w();let t=Error("Cannot load texture (NOT FOUND?): ".concat(e));x(t)}),y=new Promise((e,t)=>{d=e,x=t});Object.assign(C,{then:y.then.bind(y),catch:y.catch.bind(y),finally:y.finally.bind(y)});let w=()=>{delete C.then,delete C.catch,delete C.finally};return C}load(e){var t;let n=null==(t=e.match(/[^.]+$/))?void 0:t[0];if(void 0===n)throw Error("No extension found in url: ".concat(e));if(h(n))return this.loadTexture(e);throw Error("Unsupported extension: ".concat(e))}constructor(){(0,a._)(this,f,{writable:!0,value:void 0}),(0,a._)(this,m,{writable:!0,value:void 0}),(0,i._)(this,f,null),(0,i._)(this,m,null)}}let C=new g},98114:(e,t,n)=>{"use strict";n.r(t),n.d(t,{FpsMeter:()=>s});var o=n(70691),a=n(18479),i=n(36508);let r={frequency:3,tickerName:"three",precision:1};function s(e){let{frequency:t,tickerName:n,precision:s,...l}={...r,...e},{ref:c}=(0,a.useEffects)(function*(){let e=i.Rv.get("three");yield e.onTick({timeInterval:1/3},()=>{c.current.innerText="".concat(e.averageFps.toFixed(s)," fps")})},[t,n,s]);return(0,o.jsx)("div",{ref:c,...l,children:"-- fps"})}}}]);