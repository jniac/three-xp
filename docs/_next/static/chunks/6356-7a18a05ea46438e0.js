(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6356],{3009:(e,n,t)=>{"use strict";t.d(n,{Zt:()=>a,zf:()=>i,QS:()=>s});let i="\n#ifndef GLSL_BEND\n#define GLSL_BEND\n  vec4 applyBend(vec4 position, float factor, mat4 bendMatrix, mat4 bendMatrixInverse) {\n    float q = 1.0 / factor;\n    \n    if (abs(factor) < 0.0001)\n      return position;\n    \n    position = bendMatrixInverse * position;\n    vec2 center = vec2(0.0, q);\n    float a = position.x / q;\n    float r = center.y - position.y;\n    position.x = center.x + r * sin(a);\n    position.y = center.y + -r * cos(a);\n    position = bendMatrix * position;\n    return position;\n  }\n#endif\n";var o=t(49797),r=t(7147);function a(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"white";return{uBendFactor:{value:0},uBendMatrix:{value:e.clone()},uBendMatrixInverse:{value:e.clone().invert()},uMyColor:{value:new o.Q1f(n)}}}function s(e,n){r.bI.with(e).uniforms(n).vertex.top(i).vertex.replace("project_vertex","\n  vec4 mvPosition = vec4( transformed, 1.0 );\n  #ifdef USE_BATCHING\n    mvPosition = batchingMatrix * mvPosition;\n  #endif\n  #ifdef USE_INSTANCING\n    mvPosition = instanceMatrix * mvPosition;\n  #endif\n  mvPosition = modelMatrix * mvPosition;\n  mvPosition = applyBend(mvPosition, uBendFactor, uBendMatrix, uBendMatrixInverse);\n  mvPosition = viewMatrix * mvPosition;\n  gl_Position = projectionMatrix * mvPosition;\n")}},14203:(e,n,t)=>{"use strict";t.d(n,{O:()=>o});var i=t(1029);let o="\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex \n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20201014 (stegu)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nfloat mod289(float x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0; \n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nfloat permute(float x) {\n  return mod289(((x*34.0)+10.0)*x);\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+10.0)*x);\n}\n\nvec4 permute(vec4 x) {\n  return mod289(((x*34.0)+10.0)*x);\n}\n\nfloat taylorInvSqrt(float r) {\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\n\n\n\n\n// 2D:\n\nfloat snoise(vec2 v) {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n		+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n// 3D: \n\nfloat snoise(vec3 v)\n{ \n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n  // First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n  // Permutations\n  i = mod289(i); \n  vec4 p = permute( permute( permute( \n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n  //Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n  // Mix final noise value\n  vec4 m = max(0.5 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 105.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\n\n\n// 4D:\n\nvec4 grad4(float j, vec4 ip)\n  {\n  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);\n  vec4 p,s;\n\n  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;\n  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);\n  s = vec4(lessThan(p, vec4(0.0)));\n  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www; \n\n  return p;\n}\n						\n// (sqrt(5) - 1)/4 = F4, used once below\n#define F4 0.309016994374947451\n\nfloat snoise(vec4 v) {\n  const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4\n                        0.276393202250021,  // 2 * G4\n                        0.414589803375032,  // 3 * G4\n                       -0.447213595499958); // -1 + 4 * G4\n\n  // First corner\n  vec4 i  = floor(v + dot(v, vec4(F4)) );\n  vec4 x0 = v -   i + dot(i, C.xxxx);\n\n  // Other corners\n\n  // Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)\n  vec4 i0;\n  vec3 isX = step( x0.yzw, x0.xxx );\n  vec3 isYZ = step( x0.zww, x0.yyz );\n  //  i0.x = dot( isX, vec3( 1.0 ) );\n  i0.x = isX.x + isX.y + isX.z;\n  i0.yzw = 1.0 - isX;\n  //  i0.y += dot( isYZ.xy, vec2( 1.0 ) );\n  i0.y += isYZ.x + isYZ.y;\n  i0.zw += 1.0 - isYZ.xy;\n  i0.z += isYZ.z;\n  i0.w += 1.0 - isYZ.z;\n\n  // i0 now contains the unique values 0,1,2,3 in each channel\n  vec4 i3 = clamp( i0, 0.0, 1.0 );\n  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );\n  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );\n\n  //  x0 = x0 - 0.0 + 0.0 * C.xxxx\n  //  x1 = x0 - i1  + 1.0 * C.xxxx\n  //  x2 = x0 - i2  + 2.0 * C.xxxx\n  //  x3 = x0 - i3  + 3.0 * C.xxxx\n  //  x4 = x0 - 1.0 + 4.0 * C.xxxx\n  vec4 x1 = x0 - i1 + C.xxxx;\n  vec4 x2 = x0 - i2 + C.yyyy;\n  vec4 x3 = x0 - i3 + C.zzzz;\n  vec4 x4 = x0 + C.wwww;\n\n  // Permutations\n  i = mod289(i); \n  float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);\n  vec4 j1 = permute( permute( permute( permute (\n             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))\n           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))\n           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))\n           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));\n\n  // Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope\n  // 7*7*6 = 294, which is close to the ring size 17*17 = 289.\n  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;\n\n  vec4 p0 = grad4(j0,   ip);\n  vec4 p1 = grad4(j1.x, ip);\n  vec4 p2 = grad4(j1.y, ip);\n  vec4 p3 = grad4(j1.z, ip);\n  vec4 p4 = grad4(j1.w, ip);\n\n  // Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n  p4 *= taylorInvSqrt(dot(p4,p4));\n\n  // Mix contributions from the five corners\n  vec3 m0 = max(0.57 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);\n  vec2 m1 = max(0.57 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);\n  m0 = m0 * m0;\n  m1 = m1 * m1;\n  return 60.1 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))\n               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;\n\n}\n\n\n\n\n// addons:\n// Fractal noise, based on Stefan Gustavson's Simplex noise\n".concat((0,i.N)(["vec2","vec3","vec4"],"\n  float fnoise(T p, int octaves, float persistence) {\n    float total = 0.0;           // Final noise value\n    float amplitude = 1.0;       // Initial amplitude\n    float frequency = 1.0;       // Initial frequency\n    float maxValue = 0.0;        // Used for normalization\n\n    for (int i = 0; i < octaves; i++) {\n      total += snoise(p * frequency) * amplitude;\n\n      maxValue += amplitude;   // Keep track of max amplitude\n      amplitude *= persistence; // Reduce amplitude for next octave\n      frequency *= 2.0;        // Increase frequency for next octave\n    }\n\n    // Normalize the result to stay within the range [0, 1]\n    return total / maxValue;\n  }\n\n  float fnoise(T p, int octaves) {\n    return fnoise(p, octaves, 0.5);\n  }\n\n  float fnoise(T p) {\n    return fnoise(p, 4, 0.5);\n  }\n"),"\n\nfloat snoiseFast4D(vec4 p) {\n  const float SCALAR = 0.01;\n  float a = SCALAR * dot(p.xy * 0.3, vec2(-127.1, 311.7));\n  float b = SCALAR * dot(p.zw * 0.8, vec2(269.5, -183.3));\n  float c = SCALAR * dot(p.wx * 6.0, vec2(23.14069, 2.665157));\n  float d = SCALAR * dot(p.zy * 1.3, vec2(-12.9898, 78.233));\n  return (snoise(vec2(a, b)) + snoise(vec2(d, c))) * 0.5;\n}\n\nfloat fnoiseFast4D(vec4 p, int octaves, float persistence) {\n  float total = 0.0;           // Final noise value\n  float amplitude = 1.0;       // Initial amplitude\n  float frequency = 1.0;       // Initial frequency\n  float maxValue = 0.0;        // Used for normalization\n\n  for (int i = 0; i < octaves; i++) {\n    total += snoiseFast4D(p * frequency) * amplitude;\n\n    maxValue += amplitude;   // Keep track of max amplitude\n    amplitude *= persistence; // Reduce amplitude for next octave\n    frequency *= 2.0;        // Increase frequency for next octave\n  }\n\n  // Normalize the result to stay within the range [0, 1]\n  return total / maxValue;\n}\n")},19264:(e,n,t)=>{"use strict";t.r(n),t.d(n,{ResponsiveProvider:()=>c,useResponsive:()=>s});var i=t(70691),o=t(67203),r=t(74245);let a=(0,o.createContext)(null);function s(){let e=(0,o.useContext)(a);if(!e)throw Error("useResponsive must be used within a ResponsiveProvider");return e}class l{constructor(){this.responsive=new r.Ft,this.frameId=-1,this.update=()=>{this.frameId=window.requestAnimationFrame(this.update);let{innerWidth:e,innerHeight:n}=window,{layoutObs:t,viewportObs:i}=this.responsive,o=navigator.maxTouchPoints>0?r.gm.Touch:r.gm.Mouse;if(e!==i.value.width||n!==i.value.height||o!==t.value.pointerType){for(let a of(i.mutate({width:e,height:n}),t.enqueueMutation(i.value.computeLayout()),t.enqueueMutation({pointerType:o}),t.flushMutations(),document.documentElement.style.setProperty("--viewport-width","".concat(e,"px")),document.documentElement.style.setProperty("--viewport-height","".concat(n,"px")),Object.values(r.Gy)))document.documentElement.classList.toggle(a,t.value.screenSize===a);for(let e of Object.values(r.t4))document.documentElement.classList.toggle(e,t.value.orientation===e);for(let e of Object.values(r.gm))document.documentElement.classList.toggle(e,t.value.pointerType===e)}},this.destroy=()=>{window.cancelAnimationFrame(this.frameId)},this.update()}}function c(e){let{children:n}=e,t=(0,o.useMemo)(()=>new l,[]);return(0,o.useEffect)(()=>t.destroy),(0,i.jsx)(a.Provider,{value:t.responsive,children:n})}},22899:(e,n,t)=>{"use strict";t.d(n,{I:()=>r});var i=t(65927);let o=["linear"];for(let e=1;e<=10;e++)o.push("easeIn".concat(e)),o.push("easeOut".concat(e)),o.push("easeInOut".concat(e)),o.push("easeOutIn".concat(e));let r="\n#ifndef GLSL_EASING\n#define GLSL_EASING\n\n".concat(i.S,"\n\nfloat easePow1(float x) {\n  return x;\n}\n\nfloat easePow2(float x) {\n  return x * x;\n}\n\nfloat easePow3(float x) {\n  return x * x * x;\n}\n\nfloat easePow4(float x) {\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow5(float x) {\n  float x0 = x;\n  x *= x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow6(float x) {\n  x *= x * x;\n  return x *= x;\n}\n\nfloat easePow7(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x;\n  return x0 * x;\n}\n\nfloat easePow8(float x) {\n  x *= x;\n  x *= x;\n  return x *= x;\n}\n\nfloat easePow9(float x) {\n  x *= x * x;\n  return x *= x * x;\n}\n\nfloat easePow10(float x) {\n  float x0 = x;\n  x *= x * x;\n  x *= x * x;\n  return x0 * x;\n}\n\nfloat linear(float x) {\n  return clamp01(x);\n}\n\n").concat(Array.from({length:10},(e,n)=>{let t=n+1;return"\n\n  float easeIn".concat(t," (float x) {\n    return easePow").concat(t,"(clamp01(x));\n  }\n  float easeOut").concat(t," (float x) {\n    return 1.0 - easePow").concat(t,"(clamp01(1.0 - x));\n  }\n  float easeInOut").concat(t," (float x) {\n    return x < 0.5 \n      ? 0.5 * easePow").concat(t,"(2.0 * x) \n      : 1.0 - 0.5 * easePow").concat(t,"(2.0 * (1.0 - x));\n  }\n  float easeOutIn").concat(t," (float x) {\n    return x < 0.5\n      ? 0.5 * (1.0 - easePow").concat(t,"(1.0 - x * 2.0))\n      : 1.0 - 0.5 * (1.0 - easePow").concat(t,"(2.0 * x - 1.0));\n  }\n\n").trim()}).join("\n\n"),"\n\n\n// https://www.desmos.com/calculator/mqou4lf9zc?lang=fr\nfloat easeInOut(float x, float p, float i) {\n  return  x <= 0.0 ? 0.0 :\n          x >= 1.0 ? 1.0 :\n          x <= i ? 1.0 / pow(i, p - 1.0) * pow(x, p) :\n          1.0 - 1.0 / pow(1.0 - i, p - 1.0) * pow(1.0 - x, p);\n}\n\n// https://www.desmos.com/calculator/nrjlezusdv\nfloat easeInThenOut(float x, float p) {\n  return 1.0 - pow(abs(2.0 * x - 1.0), p);\n}\n\n#endif\n")},26584:(e,n,t)=>{"use strict";t.d(n,{DevHideNextJs:()=>o});var i=t(67203);function o(){return(0,i.useEffect)(()=>{let e=document.querySelector("nextjs-portal");null==e||e.setAttribute("style","display: none !important")}),null}},28737:(e,n,t)=>{"use strict";t.d(n,{Leak:()=>d,O:()=>u});var i={};t.r(i),t.d(i,{distribute:()=>r.mn,every:()=>r.Si,findMaxBy:()=>r.vj,pairwise:()=>r.Ju,recordBy:()=>r.VY,some:()=>r.zN,split:()=>r.mn,uniqueBy:()=>r.pD});var o=t(30158),r=t(43107),a=t(38062),s=t(85795),l=t(17099),c=t(96122);function u(e){Object.assign(window,{...o,...s,...i,...e,PRNG:l.c,waveform:a.o,dedent:c.T})}function d(e){return u(e),null}},35375:(e,n,t)=>{"use strict";t.d(n,{$:()=>o});let i="/three-xp/assets/",o={development:!1,assetsPath:i,assets:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return"".concat(i).concat(e)}}},36398:(e,n,t)=>{"use strict";t.d(n,{AboutLayoutProvider:()=>p,B:()=>f});var i=t(70691),o=t(67203),r=t(21667),a=t(18479),s=t(42206),l=t(85795),c=t(67941);let u={bottomWeights:{default:{left:5,right:3},almostSquareAspect:{maxAspect:4/3,left:1,right:1}}};class d{get isReady(){return this.changeObs.value>0}constructor(){this.changeObs=new l.ObservableNumber(0),this.root=new s.$x({direction:"vertical"}).add(new s.$x("header",{size:["1rel",64]}),new s.$x({size:["1rel",2]}),new s.$x("bottom",{size:["1rel","1fr"]}).add(new s.$x("left",{size:["".concat(u.bottomWeights.default.left,"fr"),"1rel"]}),new s.$x("right",{size:["".concat(u.bottomWeights.default.right,"fr"),"1rel"]}))),this.header=this.root.find("header"),this.bottom=this.root.find("bottom"),this.left=this.root.find("left"),this.right=this.root.find("right")}}let x=(0,o.createContext)(null);function f(){return(0,o.useContext)(x)}function p(e){let{children:n}=e,t=(0,c.Qs)(),s=(0,o.useMemo)(()=>new d,[]),{ref:l}=(0,a.useEffects)(function*(e){let n=e.parentElement;yield(0,r.G)(n,{onSize:e=>{s.root.setSize(e.size.x,e.size.y),s.right.enabled="mobile"!==t.layoutObs.value.screenSize;let n=e.size.x/e.size.y,{bottomWeights:i}=u,o=n<i.almostSquareAspect.maxAspect?i.almostSquareAspect:i.default,[r,a]=s.bottom.children;r.setWidth("".concat(o.left,"fr")),a.setWidth("".concat(o.right,"fr")),s.root.computeLayout(),s.changeObs.value++,window.requestAnimationFrame(()=>{s.changeObs.value++})}})},[]);return(0,i.jsxs)(x.Provider,{value:s,children:[(0,i.jsx)("div",{ref:l,style:{display:"none"}}),n]})}},38062:(e,n,t)=>{"use strict";t.d(n,{o:()=>i});let i={triangle:function(e){let{frequency:n=1,phase:t=0,f:i=n,p:o=t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=e*i+o,a=2*r-Math.floor(2*r);return r-Math.floor(r)<.5?a:1-a}}},45553:(e,n,t)=>{"use strict";t.d(n,{z:()=>l});var i=t(49797);let o=new i.Pq0,r=new i.Pq0,a=new i.Pq0,s=new i.Pq0;function l(e,n,t){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:s;a.crossVectors(e,n),1e-6>a.lengthSq()&&(a.set(1,0,0).cross(e),1e-6>a.lengthSq()&&a.set(0,1,0).cross(e));let l=e.length(),c=n.length();o.copy(e).divideScalar(l),r.copy(n).divideScalar(c);let u=Math.acos(Math.min(Math.max(o.dot(r),-1),1));if(1e-6>Math.abs(u))i.lerpVectors(e,n,t);else{a.normalize();let e=u*t,n=Math.cos(e),s=Math.sin(e);i.copy(o).multiplyScalar(n).addScaledVector(r.copy(a).cross(o),s).multiplyScalar((1-t)*l+t*c)}return i}},55227:(e,n,t)=>{"use strict";t.d(n,{M:()=>a});var i=t(22899),o=t(1029);let r="\n\nstruct FloatRamp {\n  float a;\n  float b;\n  float t;\n};\n\nstruct Vec2Ramp {\n  vec2 a;\n  vec2 b;\n  float t;\n};\n\nstruct Vec3Ramp {\n  vec3 a;\n  vec3 b;\n  float t;\n};\n\nstruct Vec4Ramp {\n  vec4 a;\n  vec4 b;\n  float t;\n};\n\n".concat((0,o.N)("vecX",e=>{let n=e[0].toUpperCase()+e.slice(1)+"Ramp";return"\n\n// 1 stop (simple linear interpolation)\n".concat(n," ramp(float t, T a, T b) {\n  return ").concat(n,"(a, b, t);\n}\n\n// 2 stops\n").concat(n," ramp(float t, T a, T b, T c) {\n  if (t < 0.5) {\n    return ").concat(n,"(a, b, t * 2.0);\n  } else {\n    return ").concat(n,"(b, c, t * 2.0 - 1.0);\n  }\n}\n\n// 4 stops\n").concat(n," ramp(float t, T a, T b, T c, T d) {\n  if (t < 0.333) {\n    return ").concat(n,"(a, b, t * 3.0);\n  } else if (t < 0.666) {\n    return ").concat(n,"(b, c, t * 3.0 - 1.0);\n  } else {\n    return ").concat(n,"(c, d, t * 3.0 - 2.0);\n  }\n}\n\n// 5 stops\n").concat(n," ramp(float t, T a, T b, T c, T d, T e) {\n  if (t < 0.25) {\n    return ").concat(n,"(a, b, t * 4.0);\n  } else if (t < 0.5) {\n    return ").concat(n,"(b, c, t * 4.0 - 1.0);\n  } else if (t < 0.75) {\n    return ").concat(n,"(c, d, t * 4.0 - 2.0);\n  } else {\n    return ").concat(n,"(d, e, t * 4.0 - 3.0);\n  }\n}\n\n").slice(1,-1)})),a="\n#ifndef GLSL_RAMP\n#define GLSL_RAMP\n".concat(i.I,"\n").concat(r,"\n#endif\n")},56002:(e,n,t)=>{"use strict";t.d(n,{p:()=>i});let i='\n  // sizeMode: 0 for "contain", 1 for "cover"\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect, float sizeMode, vec2 align, vec2 scale) {\n    align.y = 1.0 - align.y; // Flip y-coordinate\n    if ((outerAspect > innerAspect) != (sizeMode == 1.0)) { // XOR condition for mode\n      float scaleFactor = outerAspect / innerAspect;\n      uv.x = (uv.x - align.x) * scaleFactor + align.x; // Adjust x-coordinate\n    } else {\n      float scaleFactor = innerAspect / outerAspect;\n      uv.y = (uv.y - align.y) * scaleFactor + align.y; // Adjust y-coordinate\n    }\n    uv = (uv - align) / scale + align;\n    return uv;\n  }\n\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect, float sizeMode, vec2 align, float scale) {\n    return applyUvSize(uv, outerAspect, innerAspect, sizeMode, align, vec2(scale));\n  }\n\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect, float sizeMode, vec2 align) {\n    return applyUvSize(uv, outerAspect, innerAspect, sizeMode, align, vec2(1.0));\n  }\n\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect, float sizeMode) {\n    return applyUvSize(uv, outerAspect, innerAspect, sizeMode, vec2(0.5));\n  }\n\n  vec2 applyUvSize(vec2 uv, float outerAspect, float innerAspect) {\n    return applyUvSize(uv, outerAspect, innerAspect, 1.0);\n  }\n'},67941:(e,n,t)=>{"use strict";t.d(n,{Gy:()=>o.Gy,Qs:()=>i.useResponsive});var i=t(19264),o=t(74245)},69178:(e,n,t)=>{"use strict";t.d(n,{AboutScene:()=>G});var i=t(28535),o=t(76999),r=t(57368),a=t(49797),s=t(19646),l=t(33540),c=t(31763),u=t(94065),d=t(77794),x=t(7147),f=t(79911),p=t(55227),v=t(14203),h=t(8144),m=t(56002),y=t(20487),g=t(67235),w=t(36508),b=t(28737),z=t(67941),S=t(36398),M=t(13565),A=t(35375);async function C(){let e="".concat(A.$.assetsPath,"me/about-bg-map.png"),n=await new Promise((n,t)=>{let i=new Image;i.onload=()=>n(i),i.onerror=t,i.src=e}),t=new a.GOR(n);return t.colorSpace=a.er$,{stencilMap:t,size:new a.I9Y(n.width,n.height)}}async function P(e){let{stencilMap:n,size:t}=await C(),i=new M.q({size:t,filter:"linear",generateMipmaps:!0,wrap:a.GJx}).shaders({initial:{uniforms:{uStencilMap:{value:n},uStencilMapSize:{value:t}},fragmentTop:"\n          ".concat("\n  const int MAX_KERNEL_RADIUS = 20;\n  // Computes the signed distance field for a binary texture.\n  // Use the red channel of the texture as the binary input (0.0 = outside, 1.0 = inside).\n  float signedDistanceField(sampler2D uTexture, vec2 vUv, vec2 uTexelSize, int uKernelRadius) {\n    float centerValue = texture2D(uTexture, vUv).r;\n    bool inside = centerValue > 0.5;\n\n    float minDistance = 1e20;\n    vec2 texelAspect = normalize(uTexelSize);\n\n    for (int dy = -MAX_KERNEL_RADIUS; dy <= MAX_KERNEL_RADIUS; dy++) {\n      for (int dx = -MAX_KERNEL_RADIUS; dx <= MAX_KERNEL_RADIUS; dx++) {\n        if (abs(dx) > uKernelRadius || abs(dy) > uKernelRadius) continue;\n\n        vec2 offset = vec2(float(dx), float(dy)) * uTexelSize;\n        vec2 sampleUv = vUv + offset;\n        float sampleValue = texture2D(uTexture, sampleUv).r;\n\n        if ((inside && sampleValue <= 0.5) || (!inside && sampleValue > 0.5)) {\n          float dist = length(offset / texelAspect);\n          minDistance = min(minDistance, dist);\n        }\n      }\n    }\n\n    return inside ? -minDistance : minDistance;\n  }\n","\n          ").concat(h.H,"\n        "),fragmentColor:'\n          vec4 stencilTexel = texture2D(uStencilMap, vUv);\n          int kernelRadius = 20;\n          vec2 texelSize = 1.0 / uStencilMapSize;\n          \n          float dist = \n            signedDistanceField(uStencilMap, vUv, texelSize, kernelRadius);\n          \n          dist = dist >= 0.0 \n            ? dist\n            : spow(dist * 1000.0, 2.0) / 1000.0; // compress negative distances \n          \n          dist /= length(texelSize * float(kernelRadius) / 1.414213); // normalize by max distance in kernel\n\n          gl_FragColor = vec4(dist, 0.0, stencilTexel.b, 1.0); // blue is "line id"\n          // gl_FragColor = vec4(stencilTexel.r, 1.0, 1.0, 1.0);\n      '}}).initialize(e);return{size:t,map:i.currentTexture()}}A.$.assetsPath;var T=t(77674),D=t(74740),j=t(30123),I=t(74842),L=t(44019),R=t(3009),q=t(45553),N=t(3293),E=t(44694),F=t(80446);class _{get length(){return this.getLength()}set length(e){this.setLength(e)}getSubdivisionCount(){let e=this.start.distanceTo(this.end);return e<=.05?2:Math.ceil(e/.08)}*positions(){yield*this.start;let e=this.getSubdivisionCount(),{_v:n}=(0,T._)(_,_,B);for(let t=1;t<e-1;t++)n.lerpVectors(this.start,this.end,t/e),yield*n,yield*n;yield*this.end}*colors(){yield*this.startColor;let e=this.getSubdivisionCount(),{_c:n}=(0,T._)(_,_,B);for(let t=1;t<e-1;t++)n.lerpColors(this.startColor,this.endColor,t/e),yield*n,yield*n;yield*this.endColor}getChild(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];let i=this;for(let e of n)i=i.children[e];return i}getLength(){return this.start.distanceTo(this.end)}setLength(e){let{_v:n}=(0,T._)(_,_,B),t=n.subVectors(this.end,this.start).normalize();return this.end.copy(this.start).addScaledVector(t,e),this}mulLength(e){let{_v:n}=(0,T._)(_,_,B);return n.subVectors(this.end,this.start).multiplyScalar(e),this.end.copy(this.start).add(n),this}isRoot(){return null===this.parent}isLeaf(){return 0===this.children.length}allDescendantsCount(){let e=1;for(let n of this.children)e+=n.allDescendantsCount();return e}*allDescendantsColors(){for(let e of this.allDescendants({includeSelf:!0}))yield*e.colors()}*allDescendantsPositions(){for(let e of this.allDescendants({includeSelf:!0}))yield*e.positions()}*allDescendants(){let{includeSelf:e=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};for(let n of(e&&(yield this),this.children))yield*n.allDescendants({includeSelf:!0})}*allAscendants(){let{includeSelf:e=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e&&(yield this);let n=this.parent;for(;n;)yield n,n=n.parent}*allLeaves(){let{includeSelf:e=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};for(let n of this.allDescendants({includeSelf:e}))n.isLeaf()&&(yield n)}split(e){let{angle:n="45deg",length:t=1,lengthVariationFactor:i=1,altDir:o,altDirWeight:r=0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=new a.Pq0().subVectors(this.end,this.start),l=s.length();if(s.divideScalar(l),o){let e=(0,L.jj)(o).normalize();(0,q.z)(s,e,r,s)}let c=(0,E.ey)(n);for(let n=0;n<e;n++){let o=t*Math.pow(i,F.n.number(-1,1)),r=new _(this.end,new a.Pq0().addVectors(this.end,s.clone().applyAxisAngle(this.normal,c).applyAxisAngle(s,2*Math.PI*n/e).multiplyScalar(o)),this.normal);r.parent=this,this.children.push(r)}return this}constructor(e,n,t){this.start=e,this.end=n,this.normal=t,this.parent=null,this.children=[],this.startColor=new a.Q1f("white"),this.endColor=new a.Q1f("white")}}var B={writable:!0,value:{_v:new a.Pq0,_c:new a.Q1f}};class U extends a.YJl{get noiseAmplitude(){return this.uNoiseAmplitude.value}set noiseAmplitude(e){this.uNoiseAmplitude.value=e}setPositionOnScene(e){return this.positionOnScene=e,this}enableBend(){let e={rotationZ:"90deg",rotationY:"20deg"},n=(0,R.Zt)((0,N.w)(e));return this.material.onBeforeCompile=e=>{x.bI.with(e).uniforms({...n,uTime:this.uTime,uNoiseAmplitude:this.uNoiseAmplitude}).vertex.top(R.zf,h.H,v.O).vertex.mainAfterAll("\n          // Debug: instance ID to color (displaying the segment)\n          // vColor = hash3(float(gl_InstanceID));\n        ");let t=e.vertexShader,i=e.vertexShader.indexOf("vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );"),o=e.vertexShader.indexOf("vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );");e.vertexShader=t.substring(0,i)+"\n          vec4 start = vec4( instanceStart, 1.0 );\n          vec4 end = vec4( instanceEnd, 1.0 );\n\n          start = modelMatrix * start;\n          end = modelMatrix * end;\n\n          start = applyBend(start, uBendFactor, uBendMatrix, uBendMatrixInverse);\n          end = applyBend(end, uBendFactor, uBendMatrix, uBendMatrixInverse);\n\n          float time = uTime * 0.15;\n          float noiseScale = 0.825;\n          float startNoise = snoise(vec4(start.xyz * noiseScale, time)) * instanceStart.y;\n          float endNoise = snoise(vec4(end.xyz * noiseScale, time)) * instanceEnd.y;\n\n          start.xz += vec2(1.0, -1.0) * startNoise * uNoiseAmplitude * 0.01;\n          end.xz += vec2(1.0, -1.0) * endNoise * uNoiseAmplitude * 0.01;\n\n          start = viewMatrix * start;\n          end = viewMatrix * end;\n        "+t.substring(o+54)},this.bendUniforms=n,this.bendTransform=e,this}updateBendTransform(e){return this.bendUniforms&&((0,N.w)(e,this.bendUniforms.uBendMatrix.value),this.bendUniforms.uBendMatrixInverse.value.copy(this.bendUniforms.uBendMatrix.value).invert()),this}update(e){if(this.uTime.value+=e,this.bendUniforms){let e=this.uTime.value;this.bendUniforms.uBendFactor.value=.33*this.bendAmplitude*(.1*Math.sin(1.5*e)+.03*Math.sin(3.34*e)+.01*Math.sin(4.732*e))}return this}constructor(e=256789,{splitIndices:n=[[2]]}={}){super(),this.uTime={value:0},this.uNoiseAmplitude={value:1},this.bendAmplitude=1,this.bendUniforms=null,this.bendTransform=null;let t=new _(new a.Pq0(0,0,0),new a.Pq0(0,1,0),new a.Pq0(1,0,0));for(let i of(F.n.setRandom("parkmiller",e),t.split(3,{angle:"15deg",lengthVariationFactor:1.8}),n))t.getChild(...i).mulLength(1.2).split(3,{angle:"20deg",lengthVariationFactor:1.4});for(let e of[...t.allLeaves()])e.split(6,{angle:"70deg",length:.28,altDir:[0,1,1],altDirWeight:.5}),e.split(1,{angle:"0deg",length:.17,altDir:[0,1,1],altDirWeight:.5});for(let e of[...t.allLeaves()])e.split(11,{angle:"70deg",length:.12,altDir:[0,1,0],altDirWeight:.5,lengthVariationFactor:1.1});for(let e of[...t.allLeaves()])e.split(13,{angle:"70deg",length:.04,altDir:[0,1,0],altDirWeight:.75,lengthVariationFactor:1.1});{let e=(0,N._)("#ecde0d").clone(),n=(0,N._)("#bbfffeff").clone(),i=0,o=new Set(t.allLeaves()),r=new Set,a=()=>{[o,r]=[r,o]},s=e=>Math.min(1,Math.max(0,e));for(;o.size>0;){for(let t of o)t.endColor.lerpColors(e,n,s(i/3)),t.startColor.lerpColors(e,n,s((i+1)/3)),t.parent&&r.add(t.parent);o.clear(),a(),i++}}let i=new D.n;i.setPositions([...t.allDescendantsPositions()]),i.setColors([...t.allDescendantsColors()]);let o=new j.G({color:"white",worldUnits:!0,linewidth:.0015,vertexColors:!0});(0,f.mj)(new I.b(i,o),this),this.scale.setScalar(.25),this.material=o}}var O=new WeakMap;class V extends d.u{drawLayout(e,n){this.clear();let{rect:t}=(0,i._)(this,O),o=["#f0f","#0ff","#ff0"].map(e=>new a.Q1f(e)),r=0,[s,l]=(0,u.wX)(n);for(let n of e.allLeaves())n.getUvRect({out:t,flipY:!0}).transform(-s/2,-l/2,s,l),this.rect(t,{color:o[r],diagonals:!0,corners:{size:.05}}),r=(r+1)%o.length;return this}constructor(...e){super(...e),(0,o._)(this,O,{writable:!0,value:void 0}),(0,r._)(this,O,{rect:new y.M_})}}function G(){let e=(0,z.Qs)(),n=(0,l.Fw)(),t=(0,S.B)();return(0,l.dB)("my-scene",async function*(i){(0,b.O)(),n.ticker.set({inactivityWaitDurationMinimum:"localhost"===window.location.hostname||window.location.hostname.startsWith("192.168.")?300:60});let o=new s.S(.5,!1);n.pipeline.composer.addPass(o),yield()=>n.pipeline.composer.removePass(o);let r=await P(n.renderer),l={uAboutMap:{value:r.map},uAboutMapSize:{value:r.size},uPlaneSize:{value:new a.I9Y},uTime:w.Rv.get("three").uTime},u=new a.V9B({transparent:!0});u.onBeforeCompile=e=>x.bI.with(e).defines("USE_UV").uniforms(l).fragment.top(h.H,v.O,m.p,p.M).fragment.top("\n        float siiiin(float x) {\n          return sin(x * 3.14159265);\n        }\n        float scroll(vec2 uv) {\n          float x = 0.0;\n          float lineId = texture(uAboutMap, uv).b;\n          x += 2.5 * lineId;\n          x += (lineId > 0.5 ? 1.0 : -1.0) * uTime * 0.002;\n          return x;\n        }\n      ").fragment.after("map_fragment","\n        float timeScale = 0.05;\n        vec2 uv = applyUvSize(vUv, uPlaneSize.x / uPlaneSize.y, uAboutMapSize.x / uAboutMapSize.y);\n        uv = scaleAround(uv, vec2(0.5), 1.14);\n        uv.y += -0.006; // nudge to better center vertically\n        uv.x += scroll(uv);\n        vec4 aboutTexel = texture(uAboutMap, uv);\n        float d = aboutTexel.r;\n        float n = fnoise(vec3(uv * 0.25 * vec2(1.0, 8.0), uTime * timeScale), 3);\n        float n2 = fnoise(vec3(uv * 0.25 * vec2(1.0, 8.0), (uTime + 1.3) * timeScale), 3);\n        // n = spow(n, 2.0);\n        d += n * 0.75;\n        // d += -0.5 * (sin(uTime) * 0.5 + 0.5);\n        d = smoothstep(0.0, 0.05, d);\n        // diffuseColor.rgb = mix(".concat((0,x.eR)("#979687"),", ").concat((0,x.eR)("#220793"),", d);\n        // diffuseColor.rgb = ").concat((0,x.eR)("#979687"),";\n        // diffuseColor.rgb = ").concat((0,x.eR)("#220793"),";\n\n        n2 = n2 * 0.8 + 0.5;\n\n        // diffuseColor.rgb = mix(").concat((0,x.eR)("#0993efff"),", ").concat((0,x.eR)("#220793"),", mix(n2, siiiin(n2 * 5.0), 0.15));\n        float t = mix(n2, siiiin(n2 * 5.0), 0.25);\n        Vec3Ramp r = ramp(t, ").concat((0,x.eR)("#0993efff"),", ").concat((0,x.eR)("#2556d2ff"),", ").concat((0,x.eR)("#220793"),");\n        diffuseColor.rgb = mix(r.a, r.b, r.t);\n\n        // gamma correction\n        diffuseColor.rgb = pow(diffuseColor.rgb, vec3(2.2));\n        diffuseColor.a *= oneMinus(d);\n      "));let d=(0,f.mj)(new a.eaF(new a.bdM,u),i),y=g.Q.send([n,c.n]).assertPayload(),S=(0,f.mj)(new V,i);S.visible=!1;let M=(0,f.mj)(new U,i).setPositionOnScene((e,n)=>{e===z.Gy.Mobile?(M.position.set(.06*n.x,-(.4*n.y),.75),M.scale.setScalar(.4),M.rotation.set(0,.25,0),M.material.linewidth=.003):(M.position.set(-.16*n.x,-(.48*n.y),.75),M.scale.setScalar(.25),M.rotation.set(0,.25,0),M.material.linewidth=.0015)}).enableBend();yield n.ticker.onTick(e=>{M.updateBendTransform({position:M.position,rotationZ:"90deg",rotationY:"20deg"}),M.update(e.deltaTime)}),yield t.changeObs.onChange({executeImmediately:!0},()=>{var n;if(!1===t.isReady)return;S.visible&&S.drawLayout(t.root,y.dampedVertigo.state.realSize);let[i,o]=y.dampedVertigo.state.realSize,r=t.left.getUvRect({flipY:!0}).transform(-i/2,-o/2,i,o);d.position.set(r.centerX,r.centerY,0),d.scale.set(r.width,r.height,1),l.uPlaneSize.value.set(r.width,r.height),null==(n=M.positionOnScene)||n.call(M,e.layoutObs.value.screenSize,y.dampedVertigo.state.realSize)})},[]),null}},70620:(e,n,t)=>{"use strict";t.d(n,{AboutDom:()=>x});var i=t(70691),o=t(55088),r=t(36575);function a(e){if(e.expand)return(0,i.jsx)("div",{style:{flex:1}});let{size:n="1em"}=e;return"number"==typeof n&&(n="".concat(n,"px")),(0,i.jsx)("div",{style:{width:n,height:n,flexBasis:n}})}let s={diamondTop:"#6060FF",diamondSides:"#3D3DE9",diamondBottom:"#2500AD",text:"#2500AD"};function l(e){let{colors:n=s}=e;return(0,i.jsxs)("svg",{width:"32",height:"32",viewBox:"0 0 32 32",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("defs",{children:(0,i.jsxs)("mask",{id:"circleMask",children:[(0,i.jsx)("rect",{width:"32",height:"32",fill:"black"}),(0,i.jsx)("circle",{cx:"16",cy:"16",r:"16",fill:"white"})]})}),(0,i.jsxs)("g",{mask:"url(#circleMask)",children:[(0,i.jsx)("rect",{width:"32",height:"32",fill:n.diamondSides}),(0,i.jsx)("path",{d:"M16 16L0 0H0L32 0Z",fill:n.diamondTop}),(0,i.jsx)("path",{d:"M16 16L32 0V32L32 32Z",fill:n.diamondSides}),(0,i.jsx)("path",{d:"M16 16L0 0V32L0 32Z",fill:n.diamondSides}),(0,i.jsx)("path",{d:"M16 16L32 32H0L32 0Z",fill:n.diamondBottom})]})]})}function c(e){let{colors:n=s}=e;return(0,i.jsxs)("div",{className:"flex flex-row items-center",children:[(0,i.jsx)(l,{colors:n}),(0,i.jsx)(a,{size:"10px"}),(0,i.jsx)("div",{style:{color:n.text},children:"Joseph M."})]})}var u=t(36398);function d(){return(0,i.jsx)("div",{className:"relative flex p-4",children:(0,i.jsx)(c,{colors:{diamondTop:"#8BB2FF",diamondSides:"#4A86FF",diamondBottom:"#185DE9",text:"#4A86FF"}})})}function x(){let e=(0,u.B)();(0,r.A)(e.changeObs);let[n,t]=e.bottom.children;return(0,i.jsxs)("div",{className:"layer thru flex flex-col",children:[(0,i.jsx)(d,{}),(0,i.jsx)("div",{className:"mx-4 h-[2px] bg-[#185DE9] rounded-[1px]"}),(0,i.jsxs)("div",{className:"flex-1 flex flex-row",children:[(0,i.jsx)("div",{style:{flex:"".concat(n.sizeX.value," 0")},children:(0,i.jsx)("div",{className:"w-full h-full p-4 flex flex-col justify-end items-start",children:(0,i.jsx)(o.A,{})})}),e.right.enabled&&(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("div",{className:"my-4 w-[2px] bg-[#185DE9] rounded-[1px]"}),(0,i.jsx)("div",{style:{flex:"".concat(t.sizeX.value," 0")},children:(0,i.jsx)("div",{className:"w-full h-full px-16 flex flex-col justify-center items-center text-sm text-[#a2c1ff]",children:"\nForm\xe9 \xe0 l’ENSAAMA (Olivier de Serres), je poursuis depuis plus de quinze ans un \nparcours professionnel \xe0 la crois\xe9e du design, de l’image et des technologies \nnum\xe9riques. Flasheur puis Directeur artistique en agence (TBWA, Euro RSCG), Motion \nDesigner, puis Creative Developer, j’ai eu l’occasion d’explorer diff\xe9rents\naspects de la cr\xe9ation visuelle, du graphisme au d\xe9veloppement d’outils interactifs \nen passant par le rendu 3D temps r\xe9el.\n\nJe con\xe7ois et je d\xe9veloppe des exp\xe9riences visuelles interactives, tout ou partie,\ndu design \xe0 la programmation, de l'intention \xe0 la r\xe9alisation technique. J'aime\ntout particuli\xe8rement travailler sur la notion d'espace \xe0 2 ou 3 dimensions,\net sur la mani\xe8re dont l'utilisateur peut interagir avec celui-ci.\n\nJ'interviens dans des \xe9coles d'art et de design (ENSAAMA, Eartsup, Paris XIII) \no\xf9 j'introduis aupr\xe8s des \xe9tudiants les techniques de cr\xe9ation num\xe9rique, qu'il \ns'agisse des outils du web (HTML, CSS, JavaScript) ou des logiciels de cr\xe9ation \ntemps r\xe9el comme Unity ou Unreal Engine.\n".split("\n\n").map((e,n)=>(0,i.jsx)("p",{className:"mb-4 last:mb-0 leading-relaxed",children:e},n))})})]})]})]})}},74245:(e,n,t)=>{"use strict";t.d(n,{Ft:()=>c,Gy:()=>o,gm:()=>a,t4:()=>r});var i=t(85795),o=function(e){return e.Mobile="mobile",e.Tablet="tablet",e.Desktop="desktop",e}({}),r=function(e){return e.Portrait="portrait",e.Landscape="landscape",e}({}),a=function(e){return e.Touch="touch",e.Mouse="mouse",e}({});class s{constructor(){this.screenSize="desktop",this.orientation="landscape",this.pointerType="mouse"}}class l{get aspect(){return this.width/this.height}computeLayout(){var e,n;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new s;return t.orientation=this.aspect>=1?"landscape":"portrait",e=this.width,this.height,t.screenSize=e<768?"mobile":e<1024?"tablet":"desktop",t}constructor(e,n){this.width=e,this.height=n}}class c{constructor(){this.layoutObs=new i.ObservableTree(new s),this.viewportObs=new i.ObservableTree(new l(1280,1024))}}},80446:(e,n,t)=>{"use strict";t.d(n,{n:()=>o});var i=t(79105);let o=function e(){let n=Math.random,t=()=>{};function o(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t)|0;return n}function r(){for(var e=arguments.length,t=Array(e),i=0;i<e;i++)t[i]=arguments[i];if(0===t.length)return n();if(1===t.length)return n()*t[0];if(2===t.length)return n()*(t[1]-t[0])+t[0];throw Error("Invalid arguments")}function a(){for(var e=arguments.length,t=Array(e),i=0;i<e;i++)t[i]=arguments[i];if(1===t.length)return Math.floor(n()*t[0]);if(2===t.length)return Math.floor(n()*(t[1]-t[0]))+t[0];throw Error("Invalid arguments")}function s(e){let{weightsAreNormalized:t=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(0===e.length)throw Error("Weights array is empty");if(!1===t){let t=e.reduce((e,n)=>e+n,0),i=n()*t,o=0;for(let n=0;n<e.length;n++)if(i<(o+=e[n]))return n;return e.length-1}{let t=n(),i=0;for(let n=0;n<e.length;n++)if(t<(i+=e[n]))return n;return e.length-1}}let l={new:function(){for(var n=arguments.length,t=Array(n),i=0;i<n;i++)t[i]=arguments[i];return e().setRandom(...t)},setRandom:function(){for(var e=arguments.length,r=Array(e),a=0;a<e;a++)r[a]=arguments[a];let[s,c=0]=r,u="string"==typeof c?o(c):c;if("parkmiller"===s){let e=i.Ts(u);n=()=>(e=i.K2(e),i.Tj(e)),t=n=>{e=i.Ts(n)}}else{if(void 0!==s&&"function"!=typeof s)throw Error("Invalid random function");n=null!=s?s:Math.random,t=()=>{}}return t(u),l},seed:function(e){return t("string"==typeof e?o(e):null!=e?e:0),l},get random(){return n},chance:function(e){return n()<e},number:r,float:r,f:r,sign:function(){return .5>n()?-1:1},int:a,i:a,hexColor:function(){let e=Math.floor(0xffffff*n());return"#".concat(e.toString(16).padStart(6,"0"))},pickIndex:s,pick:function(e,t){if(0===e.length)throw Error("Array is empty");if(t)return e[s(t)];let i=Math.floor(n()*e.length);return e[i]},createPicker:function(e){let n=e.map(e=>e[0]),t=e.map(e=>e[1]),i=n.reduce((e,n)=>e+n,0);for(let e=0;e<n.length;e++)n[e]/=i;return()=>t[s(n,{weightsAreNormalized:!0})]},direction2:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{x:0,y:0},t=n()*Math.PI*2;return e.x=Math.cos(t),e.y=Math.sin(t),e},direction3:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{x:0,y:0,z:0},t=n(),i=n(),o=2*Math.PI*t,r=Math.acos(1-2*i);return e.x=Math.sin(r)*Math.cos(o),e.y=Math.sin(r)*Math.sin(o),e.z=Math.cos(r),e},quaternion:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{x:0,y:0,z:0,w:1},t=n(),i=n(),o=n(),r=Math.sqrt(1-t),a=Math.sqrt(t);return e.x=r*Math.sin(2*Math.PI*i),e.y=r*Math.cos(2*Math.PI*i),e.z=a*Math.sin(2*Math.PI*o),e.w=a*Math.cos(2*Math.PI*o),e},shuffleIndexes:function*(e){if(e<=0)throw Error("N must be greater than 0");let t=0,i=Math.floor((2+2*n())*e);for(;1!==function(e,n){for(;0!==n;)[e,n]=[n,e%n];return e}(e,i);){if(++t>1e3)throw Error("Failed to find a suitable a value after 1000 attempts");i=e+Math.floor(n()*e)}let o=Math.floor(n()*e);for(let n=0;n<e;n++)yield(o+n*i)%e}};return l}()},92439:()=>{}}]);