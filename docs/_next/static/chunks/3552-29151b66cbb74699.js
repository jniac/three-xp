(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3552,3565],{1029:(e,t,n)=>{"use strict";n.d(t,{N:()=>r});let a={vecX:["float","vec2","vec3","vec4"]},r=(e,t)=>{let n=[],r=Array.isArray(e)?e:[e].map(e=>e in a?a[e]:e).flat();if("function"==typeof t)for(let e of r)n.push(t(e).replaceAll(/\bT\b/g,e));else for(let e of r)n.push(t.replaceAll(/\bT\b/g,e));return n.join("\n")}},6006:(e,t,n)=>{"use strict";n.d(t,{Link:()=>i});var a=n(70691);function r(){alert("Coming soon. Work in progress (27/10/25).")}function i(e){let{word:t=""}=e;return(0,a.jsx)("button",{className:"cursor-pointer hover:text-[#f30]",onClick:r,children:t})}},8089:(e,t,n)=>{"use strict";n.d(t,{Overlay:()=>y});var a=n(70691),r=n(18479),i=n(99332),o=n(21667),s=n(29717),l=n(79285),c=n(20487),u=n(85795),h=n(33540),d=n(26584),f=n(70620),m=n(36398),p=n(69178);function C(){return(0,a.jsx)("div",{style:{position:"fixed",fontFamily:"Lithops",visibility:"hidden"},children:"Loading Font"})}function v(){return(0,a.jsx)(m.AboutLayoutProvider,{children:(0,a.jsxs)(h.uB,{vertigoControls:{fixed:!0,size:1.4},fullscreenKey:{key:"f",modifiers:"shift"},children:[(0,a.jsx)(f.AboutDom,{}),(0,a.jsx)(C,{}),(0,a.jsx)(d.DevHideNextJs,{}),(0,a.jsx)(p.AboutScene,{})]})})}n(67941),n(92439);var x=n(23830),g=function(e){return e[e.M=1]="M",e[e.L=2]="L",e[e.Q=4]="Q",e[e.C=8]="C",e[e.Z=16]="Z",e}(g||{});let M={1:{flag:1,args:2,code:"M",description:"Move To"},2:{flag:2,args:2,code:"L",description:"Line To"},4:{flag:4,args:4,code:"Q",description:"Quadratic Bezier To"},8:{flag:8,args:6,code:"C",description:"Cubic Bezier To"},16:{flag:16,args:0,code:"Z",description:"Close Path"}};function w(e){return"object"==typeof e[0]?[e[0].x,e[0].y]:[e[0],e[1]]}class b{clear(){return this.commands=[],this.args=[],this.closed=!1,this}moveTo(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.clear(),this.commands.push(2),this.args.push(w(t)),this}insertLineAt(e){for(var t=arguments.length,n=Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];if(e<0&&(e+=this.commands.length),e<0||e>this.commands.length)throw Error("Command index out of range: ".concat(e));return this.commands.splice(e,0,2),this.args.splice(e,0,w(n)),this}lineTo(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.commands.push(2),this.args.push(w(t)),this}rect(e){let{x:t,y:n,width:a,height:r}=e;return this.commands.push(2),this.commands.push(2),this.commands.push(2),this.commands.push(2),this.args.push([t,n]),this.args.push([t+a,n]),this.args.push([t+a,n+r]),this.args.push([t,n+r]),this}quadraticBezierTo(e,t,n,a){return this.commands.push(4),this.args.push([e,t,n,a]),this}cubicBezierTo(e,t,n,a,r,i){return this.commands.push(8),this.args.push([e,t,n,a,r,i]),this}insertCubicBezierAt(e,t,n,a,r,i,o){if(e<0&&(e+=this.commands.length),e<0||e>this.commands.length)throw Error("Command index out of range: ".concat(e));return this.commands.splice(e,0,8),this.args.splice(e,0,[t,n,a,r,i,o]),this}closePath(){return this.closed=!0,this}loopIndex(e){if(e<0&&(e+=this.commands.length),e>=this.commands.length&&(e-=this.commands.length),e<0||e>=this.commands.length)throw Error("Command index out of range: ".concat(e));return e}getCommandInfo(e){return e=this.loopIndex(e),M[this.commands[e]]}setArgsAt(e,t){e=this.loopIndex(e);let n=this.getCommandInfo(e);if(t.length!==n.args)throw Error("Invalid number of arguments for command ".concat(n.code,": expected ").concat(n.args,", got ").concat(t.length));return this.args[e]=t,this}getPointAt(e,t){null!=t||(t={x:0,y:0}),e=this.loopIndex(e);let n=this.commands[e],a=this.args[e];switch(n){case 1:case 2:return t.x=a[0],t.y=a[1],t;case 8:return t.x=a[4],t.y=a[5],t;case 4:return t.x=a[2],t.y=a[3],t;default:return null}}getPreviousPoint(e){let t=this.commands.length;for(let n=1;n<=t;n++){let t=this.loopIndex(e-n),a=this.getPointAt(t);if(a)return[t,a]}throw Error("No previous point found before command index ".concat(e))}getNextPoint(e){let t=this.commands.length;for(let n=1;n<=t;n++){let t=this.loopIndex(e+n),a=this.getPointAt(t);if(a)return[t,a]}throw Error("No next point found after command index ".concat(e))}roundCorner(e){let t={x:0,y:0},n=[{x:0,y:0},{x:0,y:0},{x:0,y:0},{x:0,y:0}],a=new x.X,r=new x.X,i={index:0,point:t,angle:0,line1:a,line2:r},o=0;for(let s=0;s<this.commands.length;s++){let l,c,u=this.getPointAt(s,t);if(!u)continue;let[h,d]=this.getPreviousPoint(s),[f,m]=this.getNextPoint(s);a.fromStartEnd(d.x,d.y,u.x,u.y),r.fromStartEnd(u.x,u.y,m.x,m.y);let p=a.angleTo(r);if(1e-6>Math.abs(p)){o+=1;continue}i.index=o,i.angle=p;let{radius:C,tension:v=1}=e(i),x=p>0?-C:C;a.offset(x),r.offset(x),a.intersection(r,{out:t}),p>0?(l=a.angle()-Math.PI/2,c=r.angle()-Math.PI/2):(l=a.angle()+Math.PI/2,c=r.angle()+Math.PI/2),Math.abs(l-c)>Math.PI&&(l<c?l+=2*Math.PI:c+=2*Math.PI),function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,i=arguments.length>5?arguments[5]:void 0;null!=i||(i=[{x:0,y:0},{x:0,y:0},{x:0,y:0},{x:0,y:0}]);let{x:o,y:s}=e,[l,c,u,h]=i,d=Math.cos(n),f=Math.sin(n),m=Math.cos(a),p=Math.sin(a),C=4/3*Math.tan((a-n)/4)*r;l.x=o+t*d,l.y=s+t*f,c.x=o+t*(d-f*C),c.y=s+t*(f+d*C),u.x=o+t*(m+p*C),u.y=s+t*(p-m*C),h.x=o+t*m,h.y=s+t*p}(t,C,l,c,v,n),this.setArgsAt(s,[n[0].x,n[0].y]),this.insertCubicBezierAt(f,n[1].x,n[1].y,n[2].x,n[2].y,n[3].x,n[3].y),s+=1,o+=1}return this}getPathData(){let{precisionMax:e=2}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=t=>t.toFixed(e).replace(/\.?0+$/,""),n=e=>{let n=[];for(let a=0;a<e.length;a+=2)n.push("".concat(t(e[a])," ").concat(t(e[a+1])));return n.join(",")},a=[];switch(this.commands[0]){case 2:{let[e,n]=this.args[0];a.push("M".concat(t(e)," ").concat(t(n)));break}case 4:{let[,e]=this.getPreviousPoint(0),[n,r,i,o]=this.args[0];a.push("M".concat(t(e.x)," ").concat(t(e.y))),a.push("Q".concat(t(n)," ").concat(t(r),",").concat(t(i)," ").concat(t(o)));break}case 8:{let[,e]=this.getPreviousPoint(0),[n,r,i,o,s,l]=this.args[0];a.push("M".concat(t(e.x)," ").concat(t(e.y))),a.push("C".concat(t(n)," ").concat(t(r),",").concat(t(i)," ").concat(t(o),",").concat(t(s)," ").concat(t(l)))}}for(let e=1;e<this.commands.length;e++){let{code:t}=M[this.commands[e]];a.push("".concat(t).concat(n(this.args[e])))}return a.push("Z"),a.join(" ")}constructor(){this.commands=[],this.args=[],this.closed=!1}}function y(){let{ref:e}=(0,r.useEffects)(function*(e){let t=e.querySelector("svg"),n=e.querySelector("path#background"),a=e.querySelector("path#thumb-line"),r=e.querySelector("path#thumb-area"),h=new u.ObservableNumber(0),d=new u.ObservableNumber(0),f=()=>{let i=e.clientWidth,o=e.clientHeight,s=60*(1+.2*h.get()),u=(0,l.lerp)(12,16,h.get())*(1-d.get());n.setAttribute("d",b.instance.moveTo(16,16).lineTo(i/2-s/2-16,16).lineTo(i/2-s/2,16-u).lineTo(i/2+s/2,16-u).lineTo(i/2+s/2+16,16).lineTo(i-16,16).lineTo(i-16,o-16).lineTo(16,o-16).closePath().roundCorner(e=>({radius:16*(e.index>=1&&e.index<=4?3:1.5),tension:1.333})).getPathData());let f=12*d.get();a.setAttribute("d",b.instance.moveTo(i/2-s/2+10.656,16+f).lineTo(i/2+s/2-10.656,16+f).getPathData());let m=c.M_.instance.from({center:[i/2,16],size:[92,32]}).inflate(16);r.setAttribute("d",b.instance.clear().rect(m).closePath().getPathData()),t.setAttribute("viewBox","0 0 ".concat(i," ").concat(o)),t.setAttribute("width","".concat(i)),t.setAttribute("height","".concat(o)),e.style.transform="translateY(".concat((o-32)*(1-d.get()),"px)")};f(),yield h.onChange(f),yield d.onChange(f),yield(0,o.G)(e,{onSize:f}),yield(0,i.s)(r,{onEnter:()=>{s.X5.during(.3).onUpdate(e=>{let{progress:t}=e;return h.set(s.X5.ease("inOut(3, .333)")(t))})},onLeave:()=>{s.X5.during(.3).onUpdate(e=>{let{progress:t}=e;return h.set(s.X5.ease("inOut(3, .333)")(1-t))})},onTap:()=>{s.X5.tween({target:d,to:{value:+(.5>d.get())},ease:"inOut(3, .333)",duration:.5})}})},[]);return(0,a.jsxs)("div",{ref:e,className:"layer",children:[(0,a.jsxs)("svg",{children:[(0,a.jsx)("path",{id:"background",fill:"#220793"}),(0,a.jsx)("path",{id:"thumb-line",stroke:"#185de9",strokeWidth:4,strokeLinejoin:"round"}),(0,a.jsx)("path",{id:"thumb-area",fill:"transparent",style:{cursor:"pointer"}})]}),(0,a.jsx)("div",{className:"layer p-[16px]",style:{pointerEvents:"none"},children:(0,a.jsx)("div",{className:"relative w-full h-full",children:(0,a.jsx)(v,{})})})]})}b.instance=new b},8144:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var a=n(65927),r=n(1029);let i="\n".concat(a.S,"\n\n#ifndef GLSL_UTILS\n#define GLSL_UTILS\n\nfloat sin01(float x) {\n  return 0.5 + 0.5 * sin(x * 6.283185307179586);\n}\n\nvec2 scaleAround(vec2 p, vec2 c, float s) {\n  return c + (p - c) / s;\n}\n\n// Same as mix, but clamped.\n").concat((0,r.N)("vecX","\n  T lerp(in T a, in T b, in float x) {\n    return mix(a, b, clamp01(x));\n  }\n"),"\n\nfloat inverseLerpUnclamped(in float a, in float b, float x) {\n  return (x - a) / (b - a);\n}\n\nfloat inverseLerp(in float a, in float b, float x) {\n  return clamp01((x - a) / (b - a));\n}\n\nfloat remap(in float x, in float a, in float b, in float c, in float d) {\n  return c + (d - c) * inverseLerp(a, b, x);\n}\n\n// Remap from [-1, 1] to [0, 1]\nfloat remap1101(in float x) {\n  return clamp01(0.5 + 0.5 * x);\n}\n\n").concat((0,r.N)("vecX","\n  T oneMinus(in T x) {\n    return 1.0 - x;\n  }\n"),"\n\n// Returns x^p, but handles negative x values correctly.\nfloat spow(in float x, in float p) {\n  return x >= 0.0 ? pow(x, p) : -pow(-x, p);\n}\n\nfloat threshold(in float x, in float thresholdValue) {\n  return x < thresholdValue ? 0. : 1.;\n}\n\nfloat threshold(in float x, in float thresholdValue, in float width) {\n  return width < 1e-9 \n    ? (x < thresholdValue ? 0. : 1.)\n    : clamp01((x - thresholdValue + width * .5) / width);\n}\n\nmat3 extractRotation(mat4 matrix) {\n  return mat3(matrix[0].xyz, matrix[1].xyz, matrix[2].xyz);\n}\n\nvec2 rotate(vec2 p, float a) {\n  float c = cos(a);\n  float s = sin(a);\n  float x = c * p.x + s * p.y;\n  float y = -s * p.x + c * p.y;\n  return vec2(x, y);\n}\n\nvec2 rotateAround(vec2 p, float a, vec2 c) {\n  return c + rotate(p - c, a);\n}\n\nvec2 rotateScaleAround(vec2 p, float a, float s, vec2 c) {\n  return c + rotate((p - c) / s, a);\n}\n\nfloat positiveModulo(float x) {\n  x = mod(x, 1.0);\n  return x < 0.0 ? x + 1.0 : x;\n}\n\n// Modulo that keeps the result in the range [0, modulo]\nfloat positiveModulo(float x, float modulo) {\n  x = mod(x, modulo);\n  return x < 0.0 ? x + modulo : x;\n}\n\n// Modulo that keeps the result in the range [-m/2, m/2]\nfloat middleModulo(float x, float modulo) {\n  x = mod(x, modulo);\n  return x < -modulo / 2.0 ? x + modulo : x > modulo / 2.0 ? x - modulo : x;\n}\n\n// Limit a value to a maximum that the function tends to reach when x -> ∞\n// https://www.desmos.com/calculator/0vewkbnscu\nfloat limited(float x, float maxValue) {\n  return x <= 0.0 ? x : maxValue * x / (maxValue + x);\n}\n\n// Symmetric version of limited\n// \n// Limit a value to a maximum that the function tends to reach when x -> ∞\n// and a minimum (-maximum) that the function tends to reach when x -> -∞\n// https://www.desmos.com/calculator/0vewkbnscu\nfloat slimited(float x, float maxValue) {\n  return x <= 0.0\n    ? -limited(-x, maxValue)\n    : limited(x, maxValue);\n}\n\n// https://www.desmos.com/calculator/0vewkbnscu\nfloat limited(float x, float minValue, float maxValue) {\n  float d = maxValue - minValue;\n  float xd = x - minValue;\n  return x <= minValue ? x : minValue + d * xd / (d + xd);\n}\n\n// Symmetric version of limited\nfloat slimited(float x, float minValue, float maxValue) {\n  return x <= 0.0\n    ? -limited(-x, maxValue, minValue)\n    : limited(x, minValue, maxValue);\n}\n\nfloat sqLength(in vec2 p) {\n  return p.x * p.x + p.y * p.y;\n}\n\nfloat sqLength(in vec3 p) {\n  return p.x * p.x + p.y * p.y + p.z * p.z;\n}\n\nfloat pcurve(float x, float a, float b) {\n  float k = pow(a + b, a + b) / (pow(a, a) * pow(b, b));\n  return k * pow(x, a) * pow(1.0 - x, b);\n}\n\nfloat hash(float p) {\n  return fract(sin(p * 12.9898) * 43758.5453);\n}\n\nfloat hash(vec2 p) {\n  return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat hash(vec3 p) {\n  return fract(sin(dot(p, vec3(12.9898, 78.233, 45.164))) * 43758.5453);\n}\n\nfloat hash(vec4 p) {\n  return fract(sin(dot(p, vec4(12.9898, 78.233, 45.164, 94.673))) * 43758.5453);\n}\n\nvec2 hash2(float p) {\n  return vec2(hash(p), hash(p + 1.0));\n}\n\nvec2 hash2(vec2 p) {\n  return vec2(hash(p.x), hash(p.y));\n}\n\nvec2 hash2(vec3 p) {\n  return vec2(hash(p.xy), hash(p.yz));\n}\n\nvec2 hash2(vec4 p) {\n  return vec2(hash(p.xyz), hash(p.yzw));\n}\n\nvec3 hash3(float p) {\n  return vec3(hash2(p),  hash(p + 2.0));\n}\n\nvec3 hash3(vec2 p) {\n  return vec3(hash2(p), hash(p));\n}\n\nvec3 hash3(vec3 p) {\n  return vec3(hash(p.x), hash(p.y), hash(p.z));\n}\n\nvec3 hash3(vec4 p) {\n  return vec3(hash(p.xy), hash(p.yz), hash(p.zw));\n}\n\nfloat hash_alt(float p) {\n  return fract(sin(p * 127.1) * 311.7);\n}\n\nfloat hash_alt(vec2 p) {\n  return fract(sin(dot(p, vec2(127.1, 311.7))) * 269.5);\n}\n\nfloat hash_alt(vec3 p) {\n  return fract(sin(dot(p, vec3(127.1, 311.7, 74.7))) * 269.5);\n}\n\nfloat hash_alt(vec4 p) {\n  return fract(sin(dot(p, vec4(127.1, 311.7, 74.7, 113.5))) * 269.5);\n}\n\n").concat((0,r.N)("vecX","\n  T min3(in T a, in T b, in T c) {\n    return min(min(a, b), c);\n  }\n"),"\n\n").concat((0,r.N)("vecX","\n  T min4(in T a, in T b, in T c, in T d) {\n    return min(min(a, b), min(c, d));\n  }\n"),"\n\n#endif // GLSL_UTILS\n")},13565:(e,t,n)=>{"use strict";n.d(t,{q:()=>x});var a=n(28535),r=n(76999),i=n(57368),o=n(49797),s=n(94065),l=n(73446),c=n(8144),u=n(96122);let h=[3,5,7,9,11].map(e=>(function(e,t){let n=function(e,t){if(e%2==0)throw Error("Kernel size must be odd");let n=Math.floor(e/2);null!=t||(t=e/3);let a=2*t*t,r=[],i=0;for(let e=-n;e<=n;e++)for(let t=-n;t<=n;t++){let n=Math.exp(-(t*t+e*e)/a);r.push(n),i+=n}for(let e=0;e<r.length;e++)r[e]/=i;return r}(e,void 0),a=[];for(let t=0;t<e;t++){let r=n.slice(t*e,(t+1)*e).map(e=>"  ".concat(e.toFixed(5))).join(", ");a.push(r)}let r="kernel".concat(e,"x").concat(e),i="const float[".concat(e*e,"] ").concat(r," = float[").concat(e*e,"](\n").concat(a.join(",\n"),");"),o=Math.floor(e/2);return i+"\n\n"+(0,u.T)("\n    vec4 gaussianBlur".concat(e,"x").concat(e,"(vec2 uv, float scale) {\n      vec2 texelSize = scale / uTextureSize;\n      vec4 color = vec4(0.0);\n      for (int x = -").concat(o,"; x <= ").concat(o,"; x++) {\n        for (int y = -").concat(o,"; y <= ").concat(o,"; y++) {\n          vec2 offset = vec2(float(x), float(y)) * texelSize;\n          color += texture2D(uTexture, uv + offset) * ").concat(r,"[x + ").concat(o," + (y + ").concat(o,") * ").concat(e,"];\n        }\n      }\n      return color;\n    }\n\n    vec4 gaussianBlur").concat(e,"x").concat(e,"(vec2 uv) {\n      return gaussianBlur").concat(e,"x").concat(e,"(uv, 1.0);\n    }\n  "))})(e)).join("\n\n"),d={glsl_blending:l.x,glsl_blur_3_11:h,glsl_sdf_2d:"\n  // 2D SDF functions\n  float sdSegment(in vec2 p, in vec2 a, in vec2 b) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n  }\n\n  float sdRoundedSegment(in vec2 p, in vec2 a, in vec2 b, float r) {\n    return sdSegment(p, a, b) - r;\n  }\n",glsl_utils:c.H},f={fragmentTop:"",fragmentColor:"\n    gl_FragColor = vec4(vUv, 1., 1.);\n  ",texture:null,uniforms:{}};class m extends o.BKk{constructor(e,t){let n={...f,...t},a={...{uTexture:{value:null},uTextureSize:{value:new o.I9Y},uTime:{value:0},uDeltaTime:{value:0}},...n.uniforms},r=Array.from(e).map(e=>d[e]).filter(e=>!!e).join("\n\n");a.uTexture.value=n.texture,super({uniforms:a,vertexShader:"\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = vec4(position, 1.);\n        }\n      ",fragmentShader:"\n        varying vec2 vUv;\n        uniform sampler2D uTexture;\n        uniform vec2 uTextureSize;\n        uniform float uTime;\n        uniform float uDeltaTime;\n\n        ".concat(r,"\n\n        ").concat(Object.entries(n.uniforms).map(e=>{let[t,{value:n}]=e,a=function e(t){if(Array.isArray(t)){if(0===t.length)throw Error("GpuCompute: cannot infer uniform type for empty array");let n=e(t[0]);for(let a=1;a<t.length;a++)if(e(t[a])!==n)throw Error("GpuCompute: cannot infer uniform type for array with mixed types");return"".concat(n,"[").concat(t.length,"]")}if("number"==typeof t)return"float";if(t instanceof o.I9Y)return"vec2";if(t instanceof o.Pq0)return"vec3";if(t instanceof o.IUQ)return"vec4";if(t instanceof o.Q1f)return"vec3";if(t instanceof o.gPd)return"sampler2D";throw Error("GpuCompute: cannot infer uniform type for value: ".concat(t))}(n);return"uniform ".concat(a," ").concat(t,";")}).join("\n"),"\n\n        ").concat(n.fragmentTop,"\n\n        void main() {\n          ").concat(n.fragmentColor,"\n        }\n      ")}),this.uniforms=a}}let p={size:1024,type:o.ix0,generateMipmaps:!1,filter:"nearest",wrap:o.GJx,wrapS:void 0,wrapT:void 0};var C=new WeakMap,v=new WeakMap;class x{get initialized(){return!!(0,a._)(this,C)}get renderer(){var e;return null==(e=(0,a._)(this,C))?void 0:e.renderer}get updateUniforms(){if(!this.state.updateMaterial)throw Error("GpuCompute: shaders not set");return this.state.updateMaterial.uniforms}setSize(e){let{width:t,height:n}=(0,s.wX)(e);return(this.state.size.x!==t||this.state.size.y!==n)&&(this.state.size.set(t,n),this.state.rtA.setSize(t,n),this.state.rtB.setSize(t,n)),this}enableGlslLib(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];for(let e of t)d[e]?(0,a._)(this,v).add(e):console.warn("GpuCompute: unknown glsl lib: ".concat(e));return this}shaders(e){return this.state.initialMaterial=new m((0,a._)(this,v),e.initial),this.state.updateMaterial=new m((0,a._)(this,v),e.update),this}initialize(e){let{orthoCamera:t,plane:n}=this.parts,{rtA:a}=this.state;(0,i._)(this,C,{renderer:e});let{initialMaterial:r}=this.state;return r&&(r.uniforms.uTextureSize.value.copy(this.state.size),r.uniforms.uTexture.value=null,r.uniforms.uTime.value=0,r.uniforms.uDeltaTime.value=0,n.material=r),e.setRenderTarget(a),e.render(n,t),e.setRenderTarget(null),this.state.frame=0,this}update(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(!(0,a._)(this,C))throw Error("GpuCompute: not initialized");let{renderer:t}=(0,a._)(this,C),{orthoCamera:n,plane:r}=this.parts,{rtA:i,rtB:o,time:s,frame:l,updateMaterial:c}=this.state;return this.state.time+=e,c&&(c.uniforms.uTextureSize.value.copy(this.state.size),c.uniforms.uTexture.value=l%2==0?i.texture:o.texture,c.uniforms.uTime.value=s,c.uniforms.uDeltaTime.value=e,c.needsUpdate=!0,r.material=c),t.setRenderTarget(l%2==0?o:i),t.render(r,n),t.setRenderTarget(null),this.state.frame+=1,this}currentTexture(){return this.state.frame%2==0?this.state.rtA.texture:this.state.rtB.texture}previousTexture(){return this.state.frame%2==0?this.state.rtB.texture:this.state.rtA.texture}constructor(e){(0,r._)(this,C,{writable:!0,value:void 0}),(0,r._)(this,v,{writable:!0,value:void 0}),this.parts={orthoCamera:new o.qUd(-1,1,1,-1,0,1),plane:new o.eaF(new o.bdM(2,2),void 0)},(0,i._)(this,v,new Set);let t={...this.constructor.defaultParams,...e};this.params=t;let{type:n,generateMipmaps:a,filter:l,wrap:c,wrapS:u=c,wrapT:h=c}=t,d="nearest"===l?o.hxR:a?o.NZq:o.k6q,f="nearest"===l?o.hxR:o.k6q,m=(0,s.wX)(t.size),p=new o.nWS(m.width,m.height,{minFilter:d,magFilter:f,generateMipmaps:a,format:o.GWd,wrapS:u,wrapT:h,type:n}),x=new o.nWS(m.width,m.height,{minFilter:d,magFilter:f,generateMipmaps:a,format:o.GWd,wrapS:u,wrapT:h,type:n});p.texture.name="GpuCompute.rtA",x.texture.name="GpuCompute.rtB",this.state={size:m,rtA:p,rtB:x,time:0,frame:0}}}x.defaultParams=p},21264:(e,t,n)=>{"use strict";n.d(t,{RDiv:()=>s});var a=n(70691),r=n(36575),i=n(67941);let o=new Set(["className","style"]);function s(e){let{mobile:t,desktop:n,tablet:s,...l}=e,c=(0,i.Qs)(),u=(0,r.A)(c.layoutObs),h={...l},d={mobile:t,desktop:n,tablet:s}[u.screenSize];if(d)for(let e of Object.keys(d)){if(!1===o.has(e)){console.warn("RDiv does not support overriding '".concat(e,"' (for the moment?)"));continue}switch(e){case"className":var f,m,p,C;let t=new Set(null!=(p=null==(f=l.className)?void 0:f.split(/\s+/))?p:[]),n=new Set(null!=(C=null==(m=d.className)?void 0:m.split(/\s+/))?C:[]);for(let e of n)if(e.startsWith("p-"))for(let e of t)e.startsWith("p-")&&t.delete(e);h.className=[...t,...n].join(" ");break;case"style":h.style={...h.style,...d.style}}}return(0,a.jsx)("div",{...h})}},24057:(e,t,n)=>{"use strict";n.d(t,{HomeScene:()=>L});var a=n(33540),r=n(77794),i=n(79911),o=n(36575),s=n(67941),l=n(49797),c=n(79782),u=n(38921),h=n(63106),d=n(99332),f=n(31763),m=n(61572),p=n(77515),C=n(7147),v=n(73446),x=n(22899),g=n(55227),M=n(39231),w=n(14203),b=n(8144),y=n(79285),V=n(20487),H=n(67235),k=n(33589);function T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:512,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:512,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"transparent",r=new Blob([e],{type:"image/svg+xml"}),i=URL.createObjectURL(r),o=new Image,s=document.createElement("canvas");s.width=t,s.height=n;let c=s.getContext("2d"),u=new l.GYF(new Uint8Array(64),4,4);u.generateMipmaps=!0,u.minFilter=l.NZq,u.magFilter=l.k6q;let h=(0,k.F)(u);return o.onload=()=>{"transparent"===a?c.clearRect(0,0,t,n):(c.fillStyle=a,c.fillRect(0,0,t,n)),c.transform(1,0,0,-1,0,n),c.drawImage(o,0,0,t,n),URL.revokeObjectURL(i),h.image={data:c.getImageData(0,0,t,n).data,width:t,height:n},h.needsUpdate=!0,h.resolve()},o.onerror=e=>{h.reject(e)},o.src=i,h}function S(e,t,n){return null!=n||(n=new l.I9Y),e>1?(n.x=t,n.y=t/e):(n.x=t*e,n.y=t),n}class z extends l.YJl{*initialize(e,t){let n=new l.I9Y,a=S(1,e.aspect>=1?360:240),r=new m.S({size:a,viscosity:.995,damping:1}).initialize(e.renderer),o=(0,i.mj)(new l.eaF(new l.bdM,new l.V9B),this),s={uTime:{value:0},uViewportSize:{value:new l.I9Y},uWaterMap:{value:r.currentTexture()},uWaterOldMap:{value:r.previousTexture()},uWaterOldMixFactor:{value:0},uImageFill:{value:this.imageFill},uImageStroke:{value:this.imageStroke},uScale:{value:1.9},uToggleRect:{value:new l.IUQ(...this.toggleRect)},uToggleValue:{value:0},uNormalMap:{value:p.e.loadTexture("../assets/textures/paper002_1K_NormalGL.jpg")}};s.uNormalMap.value.wrapS=s.uNormalMap.value.wrapT=l.GJx,o.material.onBeforeCompile=e=>C.bI.with(e).uniforms(s).defines({USE_UV:""}).fragment.top(b.H,g.M,v.x,w.O,x.I,"\n#ifndef GLSL_TEXTURE_BICUBIC\n#define GLSL_TEXTURE_BICUBIC\n\nvec4 cubic(float v){\n  vec4 n = vec4(1.0, 2.0, 3.0, 4.0) - v;\n  vec4 s = n * n * n;\n  float x = s.x;\n  float y = s.y - 4.0 * s.x;\n  float z = s.z - 4.0 * s.y + 6.0 * s.x;\n  float w = 6.0 - x - y - z;\n  return vec4(x, y, z, w) * (1.0/6.0);\n}\n\nvec4 textureBicubic(sampler2D sampler, vec2 texCoords){\n\n  vec2 texSize = vec2(textureSize(sampler, 0));\n  vec2 invTexSize = 1.0 / texSize;\n  \n  texCoords = texCoords * texSize - 0.5;\n   \n  vec2 fxy = fract(texCoords);\n  texCoords -= fxy;\n\n  vec4 xcubic = cubic(fxy.x);\n  vec4 ycubic = cubic(fxy.y);\n\n  vec4 c = texCoords.xxyy + vec2 (-0.5, +1.5).xyxy;\n  \n  vec4 s = vec4(xcubic.xz + xcubic.yw, ycubic.xz + ycubic.yw);\n  vec4 offset = c + vec4 (xcubic.yw, ycubic.yw) / s;\n  \n  offset *= invTexSize.xxyy;\n  \n  vec4 sample0 = texture(sampler, offset.xz);\n  vec4 sample1 = texture(sampler, offset.yz);\n  vec4 sample2 = texture(sampler, offset.xw);\n  vec4 sample3 = texture(sampler, offset.yw);\n\n  float sx = s.x / (s.x + s.y);\n  float sy = s.z / (s.z + s.w);\n\n  return mix(\n    mix(sample3, sample2, sx), \n    mix(sample1, sample0, sx), \n    sy);\n}\n#endif\n",M.j).fragment.top("\n        struct Toggle {\n          float roundedRectSdf;\n          float thumbSdf;\n        };\n\n        Toggle computeToggle(vec2 uv) {\n          Toggle toggle;\n\n          vec2 size = uToggleRect.zw;\n          float radius = size.y * 0.5;\n          vec2 center = uToggleRect.xy + size * 0.5;\n          toggle.roundedRectSdf = sdRoundedBox(uv - center, size * 0.5, vec4(radius));\n\n          float deltaX = size.x - size.y;\n          float onOff = easeInOut(uToggleValue, 4.0, 0.5);\n          vec2 thumbCenter = uToggleRect.xy + vec2(radius) + vec2(deltaX * onOff, 0.0);\n          toggle.thumbSdf = sdCircle(uv - thumbCenter, radius *  0.75);\n\n          return toggle;\n        }\n      ").fragment.after("map_fragment","\n        float aspect = uViewportSize.x / uViewportSize.y;\n        // vec2 imageUv = (vUv - 0.5) / vec2(1.0, aspect) + 0.5;\n        vec2 imageUv = (vUv - 0.5) * vec2(aspect, 1.0) / uScale + 0.5;\n        vec4 stroke = texture2D(uImageStroke, imageUv);\n        vec4 fill = texture2D(uImageFill, imageUv);\n        float inside = fill.a;\n\n        Toggle toggle = computeToggle(imageUv);\n\n        // water is sampled with bicubic filtering for smoother look\n        // vec4 water = textureBicubic(uWaterMap, vUv + 0.05 * inside);\n        vec2 outsideUv = vUv;\n        vec2 insideUv = scaleAround(vUv, vec2(0.4), 1.4);\n        insideUv.x = oneMinus(insideUv.x);\n        // insideUv.y = oneMinus(insideUv.y);\n        \n        vec4 water = textureBicubic(uWaterMap, mix(outsideUv, insideUv, fill.a));\n        float mixFactor = uWaterOldMixFactor;\n        // mixFactor = sin(uTime * 6.0) * 0.5 + 0.5;\n        if (mixFactor > 0.0) {\n          vec4 waterOld = textureBicubic(uWaterOldMap, mix(outsideUv, insideUv, fill.a));\n          water = mix(water, waterOld, mixFactor);\n        }\n\n        float variation = spow(water.r * 0.1, 5.0) / 400.0;\n        variation = slimited(variation, 1.0);\n        Vec3Ramp r = ramp(0.5 + variation * 0.45, \n          ".concat((0,C.eR)("#ff773dff")," * 4.0, \n          ").concat((0,C.eR)("#eadc73ff"),", \n          ").concat((0,C.eR)("#000000"),", \n          ").concat((0,C.eR)("#c3ff7aff"),",\n          ").concat((0,C.eR)("#71ebcaff")," * 1.5);\n        diffuseColor.rgb = mix(r.a, r.b, r.t);\n\n        // Add some fake lighting\n        vec2 normalUvOffset = vec2(hash(uTime), hash(uTime * 2.0));\n        vec3 normalMap = texture2D(uNormalMap, imageUv * 1.0 + normalUvOffset).xyz * 2.0 - 1.0;\n        normalMap.y *= -1.0;\n        vec3 normal = normalize(vec3(normalMap.xy, 1.0));\n        vec3 lightDir = normalize(vec3(-1.0, 1.0, -1.0));\n        float light = clamp01(dot(normal, lightDir) * 0.5 + 0.5);\n        float dimLight = easeInOut(light, 10.0, 0.95) * oneMinus(length(imageUv - 0.5));\n        diffuseColor.rgb *= vec3(1.0 - dimLight * 150.0);\n        diffuseColor.rgb += dimLight;\n\n        float strokeVisibilityIdle = 0.2 + pow(inverseLerp(-1.2, 1.0, snoise(vec3(imageUv * 2.8, uTime * 0.2))) \n          * inverseLerp(-1.2, 1.0, snoise(vec3(imageUv * 1.8 + 1.2, uTime * 0.2))), 1.5);\n        float strokeVisibilityMove = clamp01(pow(abs(water.r) * 0.2, 8.0) * 0.25);\n        float strokeVisibility = stroke.r * max(strokeVisibilityIdle, strokeVisibilityMove);\n        diffuseColor.rgb = screenBlending(diffuseColor.rgb, vec3(1.0) * strokeVisibility);\n\n        diffuseColor.rgb = pow(oneMinus(diffuseColor.rgb), vec3(6.0));\n        diffuseColor.rgb *= vec3(oneMinus(pow(oneMinus(light), 1.75)));\n\n        // float sdf = opOnion(toggle.thumbSdf + -mod(uTime, 1.0) * 0.01, 0.0);\n        // sdf = 1.0 - smoothstep(0.002, 0.0, sdf);\n        // diffuseColor.rgb *= vec3(sdf, sdf, 1.0);\n\n        float thumb = smoothstep(0.0005, 0.0, toggle.thumbSdf);\n        vec3 thumbColorOff = mix(").concat((0,C.eR)("#ff0008ff"),", ").concat((0,C.eR)("#000000"),", 1.0 - easeInOut(sin01(uTime * 0.5), 6.0, 0.95));\n        vec3 thumbColorOn = pow(").concat((0,C.eR)("#2500AD"),", vec3(2.2));\n        vec3 thumbColor = mix(thumbColorOff, thumbColorOn, easeInOut(uToggleValue, 4.0, 0.5));\n        diffuseColor.rgb = mix(diffuseColor.rgb, thumbColor, thumb);\n\n        diffuseColor.a = 1.0;\n\n        // debug\n        // diffuseColor = stroke;\n        // diffuseColor = fill;\n        // diffuseColor.rgb = vec3(fill.a);\n      "));let c=H.Q.send([e,f.n]).assertPayload(),u=!1,V=()=>{u=!0,console.log("started recording pointer data"),this.recordingPointerBuffer=[]},k=()=>{u=!1;let e=function(e){let t=e.length,n=new ArrayBuffer(4*t),a=new DataView(n);for(let n=0;n<t;n++)a.setFloat32(4*n,e[n],!0);let r=new Uint8Array(n),i="";for(let e=0;e<r.length;e++)i+=String.fromCharCode(r[e]);return window.btoa(i)}(this.recordingPointerBuffer);console.log("recording pointer data:"),console.log(e),navigator.clipboard.writeText(e),this.recordingPointerBuffer=[]};yield(0,h.a)([[{code:"Space"},()=>this.state.playing=!this.state.playing],[{code:/Arrow/},()=>this.state.nextFrame=!0],[{code:"KeyR",modifiers:"shift"},()=>{u?k():V()}]]),yield(0,d.s)(e.domElement,{onTap:()=>{this.state.autoMove=!this.state.autoMove}});let T=new l.Pq0,z=e.pointer.intersectPlane("xy",{oldFactor:1}).clone(),L=e.pointer.intersectPlane("xy",{oldFactor:0}).clone();return yield e.onTick(i=>{if(!1===this.state.playing&&!1===this.state.nextFrame)return;this.state.nextFrame=!1;let l=e.aspect>1?1:(0,y.remapUnclamped)(e.aspect,1,390/663,.85,.64);s.uScale.value=1.25*l,s.uTime.value+=i.deltaTime,s.uToggleValue.value+=(!!this.state.autoMove-s.uToggleValue.value)*(0,y.clamp)(5*i.deltaTime,0,1);let{realSize:h}=c.dampedVertigo.state;s.uViewportSize.value.set(h.width,h.height),r.damping=e.pointer.buttonDown()?1:.995,z.copy(e.pointer.intersectPlane("xy",{oldFactor:1})),L.copy(e.pointer.intersectPlane("xy",{oldFactor:0})),z.intersected&&L.intersected?T.subVectors(L.point,z.point):T.set(0,0,0);let d=(0,y.clamp)(T.length()/i.deltaTime,0,50),f=0,m=(0,y.clamp)(Math.round(80/e.averageFps),1,5);for(let o=0;o<m;o++){let l=e.pointer.intersectPlane("xy",{oldFactor:o/m});l.intersected&&n.set((0,y.inverseLerp)(-h.width/2,h.width/2,l.point.x),(0,y.inverseLerp)(-h.height/2,h.height/2,l.point.y));let c=e.aspect>=1?360:240;S(h.x/h.y,c,a);let p="touch"===t.layoutObs.value.pointerType,C=p||e.pointer.buttonDown()?c/10:(0,y.lerpUnclamped)(0,c/10,Math.max(0,(0,y.inverseLerpUnclamped)(3,20,d))**.5),v=p?+!!e.pointer.buttonDown():1;if(r.setSize(a),r.pointer(n.x,n.y,C,-v),this.state.autoMove){if(f=1-(0,y.inverseLerpUnclamped)(0,20,i.frame%20),s.uWaterOldMixFactor.value=f,i.frame%20>0)return;let e=2*this.state.autoMoveState,t=.5*e,n=2*e,a=.5+.16*Math.cos(t)+.02*Math.cos(n),o=.5+.16*Math.sin(2*t)+.02*Math.sin(n),l=c/10;r.pointer(a,o,l,-1),this.state.autoMoveState+=.02}r.update(i.deltaTime/m),u&&(this.recordingPointerBuffer.push(n.x,n.y,C,-v),this.recordingPointerBuffer.length>=4e3&&k())}s.uWaterMap.value=r.currentTexture(),s.uWaterOldMap.value=r.previousTexture(),s.uWaterOldMixFactor.value=f,o.scale.set(h.width,h.height,1)}),Object.assign(window,{homeText:this}),this}constructor(e=s.Gy.Desktop){super(),this.state={playing:!0,nextFrame:!1,autoMove:!1,autoMoveState:0},this.recordingPointerBuffer=[],this.foo=0,this.name="home-text";let t=new c.c().parse(e===s.Gy.Mobile?'\n\n<svg width="1024" height="1024" viewBox="0 0 1024 1024" fill="none"\n  xmlns="http://www.w3.org/2000/svg">\n  <g id="home-text-b-mobile-svg">\n    \x3c!-- <rect width="1024" height="1024" fill="white"/> --\x3e\n    <g id="text">\n      <path d="M217.496 369.333L169.5 211.756H199.813L232.882 324.541H233.8L266.41 211.756H295.115L247.12 369.333H217.496Z" stroke="black" stroke-width="0.5"/>\n      <path d="M306.569 369.333V211.756H335.963V369.333H306.569Z" stroke="black" stroke-width="0.5"/>\n      <path d="M408.654 372.089C399.009 372.089 390.053 370.252 381.786 366.576C373.519 362.901 366.859 357.465 361.807 350.267C356.755 342.917 354.229 333.882 354.229 323.162C354.229 322.244 354.229 321.325 354.229 320.406C354.382 319.487 354.458 318.722 354.458 318.109H385.001C385.001 318.262 384.924 318.798 384.771 319.717C384.771 320.483 384.771 321.172 384.771 321.784C384.771 329.288 386.991 335.337 391.431 339.931C395.871 344.525 402.071 346.822 410.032 346.822C418.912 346.822 425.112 344.908 428.633 341.079C432.154 337.098 433.915 332.81 433.915 328.216C433.915 322.856 432.537 318.568 429.781 315.353C427.026 312.137 423.351 309.533 418.758 307.543C414.319 305.399 409.343 303.485 403.832 301.8C398.473 300.116 393.038 298.201 387.527 296.057C382.015 293.914 376.963 291.157 372.37 287.788C367.931 284.266 364.333 279.749 361.577 274.236C358.821 268.723 357.444 261.679 357.444 253.103C357.444 243.149 359.893 234.956 364.792 228.525C369.691 221.94 376.121 217.04 384.082 213.824C392.196 210.608 400.846 209 410.032 209C419.371 209 427.868 210.608 435.522 213.824C443.33 217.04 449.531 222.093 454.124 228.984C458.87 235.722 461.242 244.527 461.242 255.4V258.156H431.159V256.089C431.159 249.351 429.245 244.068 425.418 240.24C421.744 236.258 416.539 234.267 409.802 234.267C402.76 234.267 397.325 235.875 393.498 239.091C389.67 242.154 387.757 246.135 387.757 251.036C387.757 255.63 389.134 259.305 391.89 262.061C394.646 264.818 398.244 267.115 402.683 268.953C407.276 270.79 412.328 272.551 417.84 274.236C423.351 275.767 428.786 277.605 434.145 279.749C439.656 281.892 444.632 284.725 449.071 288.248C453.664 291.617 457.339 296.057 460.094 301.57C462.85 306.93 464.228 313.745 464.228 322.014C464.228 334.112 461.855 343.836 457.109 351.186C452.363 358.384 445.78 363.667 437.36 367.036C429.092 370.405 419.524 372.089 408.654 372.089Z" stroke="black" stroke-width="0.5"/>\n      <path d="M536.65 372.089C519.81 372.089 506.567 367.725 496.922 358.996C487.43 350.114 482.684 337.098 482.684 319.947V211.756H512.078V319.028C512.078 328.063 514.222 334.954 518.508 339.701C522.795 344.448 528.842 346.822 536.65 346.822C544.458 346.822 550.505 344.448 554.792 339.701C559.232 334.954 561.452 328.063 561.452 319.028V211.756H590.846V319.947C590.846 337.098 586.024 350.114 576.378 358.996C566.733 367.725 553.491 372.089 536.65 372.089Z" stroke="black" stroke-width="0.5"/>\n      <path d="M600.828 369.333L651.579 211.756H685.796L736.547 369.333H706.464L696.819 338.323H638.719L629.304 369.333H600.828ZM646.757 312.137H688.781L672.936 259.535C672.171 256.778 671.405 253.716 670.64 250.347C669.874 246.978 669.262 244.145 668.803 241.848C668.496 239.397 668.343 238.172 668.343 238.172H667.425C667.425 238.172 667.195 239.474 666.736 242.077C666.276 244.527 665.664 247.437 664.899 250.806C664.286 254.175 663.597 257.085 662.832 259.535L646.757 312.137Z" stroke="black" stroke-width="0.5"/>\n      <path d="M750.509 369.333V211.756H779.903V341.768H846.5V369.333H750.509Z" stroke="black" stroke-width="0.5"/>\n      <path d="M212.443 511.974V380.584H173.404V354.398H280.877V380.584H241.838V511.974H212.443Z" stroke="black" stroke-width="0.5"/>\n      <path d="M298.325 511.974V354.398H398.679V380.584H327.719V418.255H388.575V444.441H327.719V485.788H400.057V511.974H298.325Z" stroke="black" stroke-width="0.5"/>\n      <path d="M480.633 514.73C460.884 514.73 445.498 508.069 434.475 494.746C423.452 481.423 417.94 460.903 417.94 433.186C417.94 405.315 423.452 384.795 434.475 371.625C445.498 358.303 460.884 351.641 480.633 351.641C491.656 351.641 501.531 353.785 510.257 358.073C518.984 362.361 525.873 369.022 530.925 378.057C535.977 387.092 538.503 398.73 538.503 412.972H508.42C508.42 400.721 505.817 391.686 500.612 385.867C495.56 379.895 488.9 376.909 480.633 376.909C469.763 376.909 461.649 381.426 456.291 390.461C450.932 399.343 448.253 411.67 448.253 427.443V438.928C448.253 454.701 451.009 467.105 456.52 476.14C462.032 485.022 470.376 489.463 481.552 489.463C490.125 489.463 496.938 486.553 501.99 480.734C507.195 474.762 509.798 465.727 509.798 453.629H538.503C538.503 467.412 535.977 478.82 530.925 487.855C525.873 496.89 518.984 503.628 510.257 508.069C501.684 512.51 491.809 514.73 480.633 514.73Z" stroke="black" stroke-width="0.5"/>\n      <path d="M559.813 511.974V354.398H589.208V418.255H638.811V354.398H668.205V511.974H638.811V444.441H589.208V511.974H559.813Z" stroke="black" stroke-width="0.5"/>\n      <path d="M692.271 511.974V480.505H723.962V511.974H692.271Z" stroke="black" stroke-width="0.5"/>\n      <path d="M169.5 656L220.251 498.424H254.468L305.219 656H275.136L265.491 624.99H207.391L197.976 656H169.5ZM215.429 598.804H257.454L241.608 546.202C240.843 543.445 240.077 540.383 239.312 537.014C238.546 533.645 237.934 530.812 237.475 528.515C237.168 526.065 237.015 524.84 237.015 524.84H236.097C236.097 524.84 235.867 526.141 235.408 528.744C234.948 531.195 234.336 534.104 233.571 537.473C232.958 540.842 232.269 543.752 231.504 546.202L215.429 598.804Z" stroke="black" stroke-width="0.5"/>\n      <path d="M319.181 656V498.424H385.089C401.011 498.424 413.029 502.711 421.143 511.287C429.257 519.709 433.314 530.429 433.314 543.445C433.314 552.94 430.941 561.209 426.195 568.253C421.449 575.298 415.019 580.504 406.905 583.873L437.218 656H405.297L379.118 590.305H348.575V656H319.181ZM348.575 564.348H380.955C388.151 564.348 393.356 562.511 396.571 558.836C399.939 555.16 401.623 550.03 401.623 543.445C401.623 537.626 400.016 533.032 396.801 529.663C393.739 526.294 388.84 524.61 382.103 524.61H348.575V564.348Z" stroke="black" stroke-width="0.5"/>\n      <path d="M484.248 656V524.61H445.209V498.424H552.682V524.61H513.643V656H484.248Z" stroke="black" stroke-width="0.5"/>\n      <path d="M545.828 656V624.531H577.519V656H545.828Z" stroke="black" stroke-width="0.5"/>\n    </g>\n    <g id="baseline">\n      <path id="design" d="M279.199 708.35H288.649V729.95M288.649 729.95H279.199M288.649 729.95H297.199M351.198 707.9V715.1M351.198 715.1V730.4M351.198 715.1C351.198 711.5 353.448 707.9 357.948 707.9C362.448 707.9 365.598 710.15 365.598 715.1V730.4M288.649 701.6V698M393.498 730.4V726.8M208.1 718.7H225.199C225.199 711.5 221.6 707.9 217.1 707.9C212.6 707.9 208.1 709.7 208.1 718.7ZM208.1 718.7C208.1 725.9 209.9 730.4 217.1 730.4C222.41 730.4 223.999 726.8 224.749 725M243.199 726.35C245.899 729.5 248.599 730.4 253.099 730.4C257.599 730.4 259.746 728.735 260.299 726.8C261.152 723.816 260.747 719.633 252.199 718.7C245.483 717.966 244.099 716.9 244.099 712.85C244.099 709.25 248.149 707.9 251.749 707.9C255.349 707.9 258.049 709.25 259.849 711.05M333.648 706.55H328.248V709.896M320.599 721.6C317.212 720.788 315.649 718.1 315.649 715.1C315.649 711.5 317.449 707.9 322.849 707.9C328.248 707.9 330.048 711.5 330.048 715.1C330.048 718.7 327.798 721.85 322.849 721.85C322.024 721.85 321.275 721.762 320.599 721.6ZM320.599 721.6C318.799 722.3 316.099 723.2 316.099 725C316.099 726.635 316.099 728.271 318.799 728.556M318.799 728.556C319.07 728.585 319.369 728.6 319.699 728.6C323.299 728.6 321.049 728.6 325.548 728.6C330.048 728.6 332.748 729.95 332.748 733.1C332.748 736.7 329.598 739.4 322.399 739.4C315.199 739.4 314.299 735.8 314.299 734C314.299 732.2 315.199 729.5 318.799 728.556ZM173 700.7V729.95H180.65C186.5 729.95 190.55 725.45 190.55 715.55C190.55 705.65 187.4 700.7 180.65 700.7H173Z" stroke="black" stroke-width="0.6"/>\n      <path id="programming" d="M297.649 757.549H292.249V760.895M284.599 772.6C281.212 771.788 279.649 769.1 279.649 766.099C279.649 762.499 281.449 758.899 286.849 758.899C292.249 758.899 294.049 762.499 294.049 766.099C294.049 769.699 291.799 772.849 286.849 772.849C286.025 772.849 285.275 772.762 284.599 772.6ZM284.599 772.6C282.799 773.299 280.099 774.199 280.099 775.999C280.099 777.635 280.099 779.27 282.799 779.555M282.799 779.555C283.071 779.584 283.37 779.599 283.699 779.599C287.299 779.599 285.049 779.599 289.549 779.599C294.049 779.599 296.749 780.949 296.749 784.099C296.749 787.699 293.599 790.399 286.399 790.399C279.199 790.399 278.299 786.799 278.299 784.999C278.299 783.199 279.199 780.499 282.799 779.555ZM173 781.399V766.999M173 766.999V751.699H182C186.5 751.699 190.1 753.499 190.1 758.899C190.1 764.299 188.3 766.999 182 766.999H173ZM207.2 759.349H214.85V768.39M214.85 780.949H224.749M214.85 780.949H207.2M214.85 780.949V768.39M214.85 768.39C214.85 763.399 216.65 759.349 222.5 759.349H226.999M313.399 759.349H321.049V768.39M321.049 780.949H330.948M321.049 780.949H313.399M321.049 780.949V768.39M321.049 768.39C321.049 763.399 322.848 759.349 328.698 759.349H333.198M349.398 763.399C352.098 757.999 358.398 758.899 360.198 759.799C361.998 760.699 363.798 762.499 363.798 766.099C363.798 766.932 363.798 768.211 363.798 769.699M367.824 780.949H363.798C363.798 779.486 363.798 777.341 363.798 775.099M363.798 769.699C362.598 769.699 359.748 769.699 356.148 769.699C351.198 769.699 348.498 771.949 348.498 775.099C348.498 778.699 350.298 781.399 355.698 781.399C361.098 781.399 362.898 777.799 363.798 775.099M363.798 769.699C363.798 771.35 363.798 773.257 363.798 775.099M383.598 758.899V765.199M383.598 765.199V781.399M383.598 765.199C383.598 760.279 386.298 758.899 388.548 758.899C390.798 758.899 393.048 760.249 393.048 763.399V765.199M393.048 765.199V781.399M393.048 765.199C393.048 760.729 395.298 758.899 397.548 758.899C399.798 758.899 402.498 760.249 402.498 763.399V781.399M419.148 758.899V765.199M419.148 765.199V781.399M419.148 765.199C419.148 760.279 421.848 758.899 424.097 758.899C426.347 758.899 428.597 760.249 428.597 763.399V765.199M428.597 765.199V781.399M428.597 765.199C428.597 760.729 430.847 758.899 433.097 758.899C435.347 758.899 438.047 760.249 438.047 763.399V781.399M492.497 758.899V766.099M492.497 766.099V781.399M492.497 766.099C492.497 762.499 494.747 758.899 499.247 758.899C503.747 758.899 506.897 761.149 506.897 766.099V781.399M456.497 759.349H465.947V780.949M465.947 780.949H456.497M465.947 780.949H474.497M465.947 752.599V749M545.596 757.549H540.196V760.895M532.546 772.6C529.16 771.788 527.596 769.1 527.596 766.099C527.596 762.499 529.396 758.899 534.796 758.899C540.196 758.899 541.996 762.499 541.996 766.099C541.996 769.699 539.746 772.849 534.796 772.849C533.972 772.849 533.223 772.762 532.546 772.6ZM532.546 772.6C530.746 773.299 528.046 774.199 528.046 775.999C528.046 777.635 528.046 779.27 530.746 779.555M530.746 779.555C531.018 779.584 531.317 779.599 531.646 779.599C535.246 779.599 532.996 779.599 537.496 779.599C541.996 779.599 544.696 780.949 544.696 784.099C544.696 787.699 541.546 790.399 534.346 790.399C527.146 790.399 526.246 786.799 526.246 784.999C526.246 783.199 527.146 780.499 530.746 779.555ZM570.346 781.399V777.799M251.749 758.899C256.249 758.899 260.299 762.049 260.299 770.149C260.299 777.349 258.049 781.399 251.749 781.399C245.899 781.399 243.199 777.349 243.199 770.149C243.199 762.949 247.249 758.899 251.749 758.899Z" stroke="black" stroke-width="0.6"/>\n      <path id="resonance" d="M207.65 817.999H224.749C224.749 810.799 221.15 807.199 216.65 807.199C212.15 807.199 207.65 808.999 207.65 817.999ZM207.65 817.999C207.65 825.199 209.45 829.699 216.65 829.699C221.96 829.699 223.549 826.099 224.299 824.299M243.199 825.649C245.899 828.799 248.599 829.699 253.099 829.699C257.599 829.699 259.647 827.584 260.2 825.649C261.052 822.665 260.747 818.932 252.199 817.999C245.483 817.266 244.099 816.199 244.099 812.149C244.099 808.549 248.149 807.199 251.749 807.199C255.349 807.199 258.049 808.549 259.849 810.349M315.199 807.199V814.399M315.199 814.399V829.699M315.199 814.399C315.199 810.799 317.449 807.199 321.949 807.199C326.448 807.199 329.598 809.449 329.598 814.399V829.699M173 829.699V815.299M173 815.299V799.999H182C188.3 799.999 190.1 803.599 190.1 807.199C190.1 810.799 189.2 815.299 182 815.299H180.38M173 815.299H180.38M180.38 815.299L189.65 829.699M455.597 817.999H472.697C472.697 810.799 469.097 807.199 464.597 807.199C460.097 807.199 455.597 808.999 455.597 817.999ZM455.597 817.999C455.597 825.199 457.397 829.699 464.597 829.699C469.907 829.699 471.497 826.099 472.247 824.299M499.247 829.699V826.099M386.298 807.199V814.399M386.298 814.399V829.699M386.298 814.399C386.298 810.799 388.548 807.199 393.048 807.199C397.548 807.199 400.698 809.449 400.698 814.399V829.699M349.398 811.929C352.098 806.53 358.398 807.43 360.198 808.33C361.998 809.23 363.798 811.029 363.798 814.629V818.229M367.824 829.479H363.798V823.629M363.798 818.229H356.148C351.198 818.229 348.498 820.479 348.498 823.629C348.498 827.229 350.298 829.929 355.698 829.929C361.098 829.929 362.898 826.329 363.798 823.629M363.798 818.229V823.629M436.675 811.856C435.001 808.578 432.024 807.199 429.047 807.199C424.547 807.199 420.948 811.249 420.948 818.449C420.948 825.649 422.747 829.699 429.047 829.699C433.148 829.699 435.723 828.364 437.022 825.199M286.399 807.199C290.899 807.199 295.399 810.349 295.399 818.449C295.399 826.549 292.699 829.699 286.399 829.699C280.099 829.699 278.299 825.649 278.299 818.449C278.299 811.249 281.899 807.199 286.399 807.199Z" stroke="black" stroke-width="0.6"/>\n    </g>\n    <g id="toggle">\n      <path id="manual" d="M189.75 888.75C191.25 885.75 194.75 886.25 195.75 886.75C196.75 887.25 197.75 888.25 197.75 890.25V892.25M199.986 898.5H197.75V895.25M197.75 892.25H193.5C190.75 892.25 189.25 893.5 189.25 895.25C189.25 897.25 190.25 898.75 193.25 898.75C196.25 898.75 197.25 896.75 197.75 895.25M197.75 892.25V895.25M207 886.25V890.25M207 890.25V898.75M207 890.25C207 888.25 208.25 886.25 210.75 886.25C213.25 886.25 215 887.5 215 890.25V898.75M231 898.75V894.75M231 894.75V886.25M231 894.75C231 896.75 229.75 898.75 227.25 898.75C224.75 898.75 223 897.785 223 894.75V886.25M173 886.25V889.75M173 889.75V898.75M173 889.75C173 887.016 174.5 886.25 175.75 886.25C177 886.25 178.25 887 178.25 888.75V889.75M178.25 889.75V898.75M178.25 889.75C178.25 887.266 179.5 886.25 180.75 886.25C182 886.25 183.5 887 183.5 888.75V898.75M238.75 888.75C240.25 885.75 243.75 886.25 244.75 886.75C245.75 887.25 246.75 888.25 246.75 890.25V892.25M248.986 898.5H246.75V895.25M246.75 892.25H242.5C239.75 892.25 238.25 893.5 238.25 895.25C238.25 897.25 239.25 898.75 242.25 898.75C245.25 898.75 246.25 896.75 246.75 895.25M246.75 892.25V895.25M254.75 881.25H259.75V898.5M259.75 898.5H254.75M259.75 898.5H264.75" stroke="black" stroke-width="0.5"/>\n      <rect id="rect" x="287" y="872.25" width="63.5" height="35.5" rx="17.75" stroke="black" stroke-width="0.5"/>\n      <path id="auto" d="M373.25 888.25C374.75 885.25 378.25 885.75 379.25 886.25C380.25 886.75 381.25 887.75 381.25 889.75V891.75M383.486 898H381.25V894.75M381.25 891.75H377C374.25 891.75 372.75 893 372.75 894.75C372.75 896.75 373.75 898.25 376.75 898.25C379.75 898.25 380.75 896.25 381.25 894.75M381.25 891.75V894.75M398 898.25V894.25M398 894.25V885.75M398 894.25C398 896.25 396.75 898.25 394.25 898.25C391.75 898.25 390 897.285 390 894.25V885.75M404.25 886.25H409.25M409.25 886.25H415.75M409.25 886.25V881.75M409.25 886.25V898.25H415.75M426.75 885.75C429.25 885.75 431.5 887.5 431.5 892C431.5 896 430.25 898.25 426.75 898.25C423.5 898.25 422 896 422 892C422 888 424.25 885.75 426.75 885.75Z" stroke="black" stroke-width="0.5"/>\n    </g>\n  </g>\n</svg>\n\n':'\n\n<svg width="1024" height="1024" viewBox="0 0 1024 1024" fill="none"\n  xmlns="http://www.w3.org/2000/svg">\n  <g id="home-text-b-svg">\n    \x3c!-- <rect width="1024" height="1024" fill="white"/> --\x3e\n    <g id="text">\n      <path d="M217.496 419.333L169.5 261.756H199.813L232.882 374.541H233.8L266.41 261.756H295.115L247.12 419.333H217.496Z" stroke="black" stroke-width="0.5"/>\n      <path d="M306.569 419.333V261.756H335.963V419.333H306.569Z" stroke="black" stroke-width="0.5"/>\n      <path d="M408.654 422.089C399.009 422.089 390.053 420.252 381.786 416.576C373.519 412.901 366.859 407.465 361.807 400.267C356.755 392.917 354.229 383.882 354.229 373.162C354.229 372.244 354.229 371.325 354.229 370.406C354.382 369.487 354.458 368.722 354.458 368.109H385.001C385.001 368.262 384.924 368.798 384.771 369.717C384.771 370.483 384.771 371.172 384.771 371.784C384.771 379.288 386.991 385.337 391.431 389.931C395.871 394.525 402.071 396.822 410.032 396.822C418.912 396.822 425.112 394.908 428.633 391.079C432.154 387.098 433.915 382.81 433.915 378.216C433.915 372.856 432.537 368.568 429.781 365.353C427.026 362.137 423.351 359.533 418.758 357.543C414.319 355.399 409.343 353.485 403.832 351.8C398.473 350.116 393.038 348.201 387.527 346.057C382.015 343.914 376.963 341.157 372.37 337.788C367.931 334.266 364.333 329.749 361.577 324.236C358.821 318.723 357.444 311.679 357.444 303.103C357.444 293.149 359.893 284.956 364.792 278.525C369.691 271.94 376.121 267.04 384.082 263.824C392.196 260.608 400.846 259 410.032 259C419.371 259 427.868 260.608 435.522 263.824C443.33 267.04 449.531 272.093 454.124 278.984C458.87 285.722 461.242 294.527 461.242 305.4V308.156H431.159V306.089C431.159 299.351 429.245 294.068 425.418 290.24C421.744 286.258 416.539 284.267 409.802 284.267C402.76 284.267 397.325 285.875 393.498 289.091C389.67 292.154 387.757 296.135 387.757 301.036C387.757 305.63 389.134 309.305 391.89 312.061C394.646 314.818 398.244 317.115 402.683 318.953C407.276 320.79 412.328 322.551 417.84 324.236C423.351 325.767 428.786 327.605 434.145 329.749C439.656 331.892 444.632 334.725 449.071 338.248C453.664 341.617 457.339 346.057 460.094 351.57C462.85 356.93 464.228 363.745 464.228 372.014C464.228 384.112 461.855 393.836 457.109 401.186C452.363 408.384 445.78 413.667 437.36 417.036C429.092 420.405 419.524 422.089 408.654 422.089Z" stroke="black" stroke-width="0.5"/>\n      <path d="M540.9 422.089C524.06 422.089 510.817 417.725 501.172 408.996C491.68 400.114 486.934 387.098 486.934 369.947V261.756H516.328V369.028C516.328 378.063 518.472 384.954 522.758 389.701C527.045 394.448 533.092 396.822 540.9 396.822C548.708 396.822 554.755 394.448 559.042 389.701C563.482 384.954 565.702 378.063 565.702 369.028V261.756H595.096V369.947C595.096 387.098 590.274 400.114 580.628 408.996C570.983 417.725 557.741 422.089 540.9 422.089Z" stroke="black" stroke-width="0.5"/>\n      <path d="M608.828 419.333L659.579 261.756H693.796L744.547 419.333H714.464L704.819 388.323H646.719L637.304 419.333H608.828ZM654.757 362.137H696.781L680.936 309.535C680.171 306.778 679.405 303.716 678.64 300.347C677.874 296.978 677.262 294.145 676.803 291.848C676.496 289.397 676.343 288.172 676.343 288.172H675.425C675.425 288.172 675.195 289.474 674.736 292.077C674.276 294.527 673.664 297.437 672.899 300.806C672.286 304.175 671.597 307.085 670.832 309.535L654.757 362.137Z" stroke="black" stroke-width="0.5"/>\n      <path d="M758.509 419.333V261.756H787.903V391.768H854.5V419.333H758.509Z" stroke="black" stroke-width="0.5"/>\n      <path d="M212.443 561.974V430.584H173.404V404.398H280.877V430.584H241.838V561.974H212.443Z" stroke="black" stroke-width="0.5"/>\n      <path d="M298.325 561.974V404.398H398.679V430.584H327.719V468.255H388.575V494.441H327.719V535.788H400.057V561.974H298.325Z" stroke="black" stroke-width="0.5"/>\n      <path d="M480.633 564.73C460.884 564.73 445.498 558.069 434.475 544.746C423.452 531.423 417.94 510.903 417.94 483.186C417.94 455.315 423.452 434.795 434.475 421.625C445.498 408.303 460.884 401.641 480.633 401.641C491.656 401.641 501.531 403.785 510.257 408.073C518.984 412.361 525.873 419.022 530.925 428.057C535.977 437.092 538.503 448.73 538.503 462.972H508.42C508.42 450.721 505.817 441.686 500.612 435.867C495.56 429.895 488.9 426.909 480.633 426.909C469.763 426.909 461.649 431.426 456.291 440.461C450.932 449.343 448.253 461.67 448.253 477.443V488.928C448.253 504.701 451.009 517.105 456.52 526.14C462.032 535.022 470.376 539.463 481.552 539.463C490.125 539.463 496.938 536.553 501.99 530.734C507.195 524.762 509.798 515.727 509.798 503.629H538.503C538.503 517.412 535.977 528.82 530.925 537.855C525.873 546.89 518.984 553.628 510.257 558.069C501.684 562.51 491.809 564.73 480.633 564.73Z" stroke="black" stroke-width="0.5"/>\n      <path d="M559.813 561.974V404.398H589.208V468.255H638.811V404.398H668.205V561.974H638.811V494.441H589.208V561.974H559.813Z" stroke="black" stroke-width="0.5"/>\n      <path d="M692.271 561.974V530.505H723.962V561.974H692.271Z" stroke="black" stroke-width="0.5"/>\n      <path d="M169.5 706L220.251 548.424H254.468L305.219 706H275.136L265.491 674.99H207.391L197.976 706H169.5ZM215.429 648.804H257.454L241.608 596.202C240.843 593.445 240.077 590.383 239.312 587.014C238.546 583.645 237.934 580.812 237.475 578.515C237.168 576.065 237.015 574.84 237.015 574.84H236.097C236.097 574.84 235.867 576.141 235.408 578.744C234.948 581.195 234.336 584.104 233.571 587.473C232.958 590.842 232.269 593.752 231.504 596.202L215.429 648.804Z" stroke="black" stroke-width="0.5"/>\n      <path d="M319.181 706V548.424H385.089C401.011 548.424 413.029 552.711 421.143 561.287C429.257 569.709 433.314 580.429 433.314 593.445C433.314 602.94 430.941 611.209 426.195 618.253C421.449 625.298 415.019 630.504 406.905 633.873L437.218 706H405.297L379.118 640.305H348.575V706H319.181ZM348.575 614.348H380.955C388.151 614.348 393.356 612.511 396.571 608.836C399.939 605.16 401.623 600.03 401.623 593.445C401.623 587.626 400.016 583.032 396.801 579.663C393.739 576.294 388.84 574.61 382.103 574.61H348.575V614.348Z" stroke="black" stroke-width="0.5"/>\n      <path d="M484.248 706V574.61H445.209V548.424H552.682V574.61H513.643V706H484.248Z" stroke="black" stroke-width="0.5"/>\n      <path d="M545.828 706V674.531H577.519V706H545.828Z" stroke="black" stroke-width="0.5"/>\n    </g>\n    <path id="baseline" d="M232 728.75H237.25V740.75M237.25 740.75H232M237.25 740.75H242M272 728.5V732.5M272 732.5V741M272 732.5C272 730.5 273.25 728.5 275.75 728.5C278.25 728.5 280 729.75 280 732.5V741M237.25 725V723M295.5 741V739M192.5 734.5H202C202 730.5 200 728.5 197.5 728.5C195 728.5 192.5 729.5 192.5 734.5ZM192.5 734.5C192.5 738.5 193.5 741 197.5 741C200.45 741 201.333 739 201.75 738M212 738.75C213.5 740.5 215 741 217.5 741C220 741 221.193 740.075 221.5 739C221.974 737.342 221.749 735.018 217 734.5C213.268 734.093 212.5 733.5 212.5 731.25C212.5 729.25 214.75 728.5 216.75 728.5C218.75 728.5 220.25 729.25 221.25 730.25M262.25 727.75H259.25V729.609M255 736.111C253.118 735.66 252.25 734.167 252.25 732.5C252.25 730.5 253.25 728.5 256.25 728.5C259.25 728.5 260.25 730.5 260.25 732.5C260.25 734.5 259 736.25 256.25 736.25C255.792 736.25 255.376 736.201 255 736.111ZM255 736.111C254 736.5 252.5 737 252.5 738C252.5 738.909 252.5 739.817 254 739.976M254 739.976C254.151 739.992 254.317 740 254.5 740C256.5 740 255.25 740 257.75 740C260.25 740 261.75 740.75 261.75 742.5C261.75 744.5 260 746 256 746C252 746 251.5 744 251.5 743C251.5 742 252 740.5 254 739.976ZM399.75 727.75H396.75V729.609M392.5 736.111C390.618 735.66 389.75 734.167 389.75 732.5C389.75 730.5 390.75 728.5 393.75 728.5C396.75 728.5 397.75 730.5 397.75 732.5C397.75 734.5 396.5 736.25 393.75 736.25C393.292 736.25 392.876 736.201 392.5 736.111ZM392.5 736.111C391.5 736.5 390 737 390 738C390 738.909 390 739.817 391.5 739.976M391.5 739.976C391.651 739.992 391.817 740 392 740C394 740 392.75 740 395.25 740C397.75 740 399.25 740.75 399.25 742.5C399.25 744.5 397.5 746 393.5 746C389.5 746 389 744 389 743C389 742 389.5 740.5 391.5 739.976ZM330.5 741V733M330.5 733V724.5H335.5C338 724.5 340 725.5 340 728.5C340 731.5 339 733 335.5 733H330.5ZM349.5 728.75H353.75V733.772M353.75 740.75H359.25M353.75 740.75H349.5M353.75 740.75V733.772M353.75 733.772C353.75 731 354.75 728.75 358 728.75H360.5M408.5 728.75H412.75V733.772M412.75 740.75H418.25M412.75 740.75H408.5M412.75 740.75V733.772M412.75 733.772C412.75 731 413.75 728.75 417 728.75H419.5M428.5 731C430 728 433.5 728.5 434.5 729C435.5 729.5 436.5 730.5 436.5 732.5C436.5 732.963 436.5 733.673 436.5 734.5M438.736 740.75H436.5C436.5 739.937 436.5 738.746 436.5 737.5M436.5 734.5C435.833 734.5 434.25 734.5 432.25 734.5C429.5 734.5 428 735.75 428 737.5C428 739.5 429 741 432 741C435 741 436 739 436.5 737.5M436.5 734.5C436.5 735.417 436.5 736.477 436.5 737.5M447.5 728.5V732M447.5 732V741M447.5 732C447.5 729.266 449 728.5 450.25 728.5C451.5 728.5 452.75 729.25 452.75 731V732M452.75 732V741M452.75 732C452.75 729.516 454 728.5 455.25 728.5C456.5 728.5 458 729.25 458 731V741M467.25 728.5V732M467.25 732V741M467.25 732C467.25 729.266 468.75 728.5 470 728.5C471.25 728.5 472.5 729.25 472.5 731V732M472.5 732V741M472.5 732C472.5 729.516 473.75 728.5 475 728.5C476.25 728.5 477.75 729.25 477.75 731V741M605.5 734.5H615C615 730.5 613 728.5 610.5 728.5C608 728.5 605.5 729.5 605.5 734.5ZM605.5 734.5C605.5 738.5 606.5 741 610.5 741C613.45 741 614.333 739 614.75 738M625.25 738.75C626.75 740.5 628.25 741 630.75 741C633.25 741 634.388 739.825 634.695 738.75C635.169 737.092 634.999 735.018 630.25 734.5C626.518 734.093 625.75 733.5 625.75 731.25C625.75 729.25 628 728.5 630 728.5C632 728.5 633.5 729.25 634.5 730.25M508 728.5V732.5M508 732.5V741M508 732.5C508 730.5 509.25 728.5 511.75 728.5C514.25 728.5 516 729.75 516 732.5V741M665.25 728.5V732.5M665.25 732.5V741M665.25 732.5C665.25 730.5 666.5 728.5 669 728.5C671.5 728.5 673.25 729.75 673.25 732.5V741M488 728.75H493.25V740.75M493.25 740.75H488M493.25 740.75H498M493.25 725V723M537.5 727.75H534.5V729.609M530.25 736.111C528.368 735.66 527.5 734.167 527.5 732.5C527.5 730.5 528.5 728.5 531.5 728.5C534.5 728.5 535.5 730.5 535.5 732.5C535.5 734.5 534.25 736.25 531.5 736.25C531.042 736.25 530.626 736.201 530.25 736.111ZM530.25 736.111C529.25 736.5 527.75 737 527.75 738C527.75 738.909 527.75 739.817 529.25 739.976M529.25 739.976C529.401 739.992 529.567 740 529.75 740C531.75 740 530.5 740 533 740C535.5 740 537 740.75 537 742.5C537 744.5 535.25 746 531.25 746C527.25 746 526.75 744 526.75 743C526.75 742 527.25 740.5 529.25 739.976ZM551.25 741V739M586.25 741V733M586.25 733V724.5H591.25C594.75 724.5 595.75 726.5 595.75 728.5C595.75 730.5 595.25 733 591.25 733H590.35M586.25 733H590.35M590.35 733L595.5 741M743.25 734.5H752.75C752.75 730.5 750.75 728.5 748.25 728.5C745.75 728.5 743.25 729.5 743.25 734.5ZM743.25 734.5C743.25 738.5 744.25 741 748.25 741C751.2 741 752.083 739 752.5 738M767.5 741V739M704.75 728.5V732.5M704.75 732.5V741M704.75 732.5C704.75 730.5 706 728.5 708.5 728.5C711 728.5 712.75 729.75 712.75 732.5V741M684.25 731.128C685.75 728.128 689.25 728.628 690.25 729.128C691.25 729.628 692.25 730.628 692.25 732.628V734.628M694.486 740.878H692.25V737.628M692.25 734.628H688C685.25 734.628 683.75 735.878 683.75 737.628C683.75 739.628 684.75 741.128 687.75 741.128C690.75 741.128 691.75 739.128 692.25 737.628M692.25 734.628V737.628M732.738 731.087C731.808 729.266 730.154 728.5 728.5 728.5C726 728.5 724 730.75 724 734.75C724 738.75 725 741 728.5 741C730.778 741 732.209 740.259 732.93 738.5M173 724.5V740.75H177.25C180.5 740.75 182.75 738.25 182.75 732.75C182.75 727.25 181 724.5 177.25 724.5H173ZM374.25 728.5C376.75 728.5 379 730.25 379 734.75C379 738.75 377.75 741 374.25 741C371 741 369.5 738.75 369.5 734.75C369.5 730.75 371.75 728.5 374.25 728.5ZM649.25 728.5C651.75 728.5 654.25 730.25 654.25 734.75C654.25 739.25 652.75 741 649.25 741C645.75 741 644.75 738.75 644.75 734.75C644.75 730.75 646.75 728.5 649.25 728.5Z" stroke="black" stroke-width="0.5"/>\n    <g id="toggle">\n      <path id="manual" d="M181.375 765.375C182.125 763.875 183.875 764.125 184.375 764.375C184.875 764.625 185.375 765.125 185.375 766.125V767.125M186.493 770.25H185.375V768.625M185.375 767.125H183.25C181.875 767.125 181.125 767.75 181.125 768.625C181.125 769.625 181.625 770.375 183.125 770.375C184.625 770.375 185.125 769.375 185.375 768.625M185.375 767.125V768.625M190 764.125V766.125M190 766.125V770.375M190 766.125C190 765.125 190.625 764.125 191.875 764.125C193.125 764.125 194 764.75 194 766.125V770.375M202 770.375V768.375M202 768.375V764.125M202 768.375C202 769.375 201.375 770.375 200.125 770.375C198.875 770.375 198 769.892 198 768.375V764.125M173 764.125V765.875M173 765.875V770.375M173 765.875C173 764.508 173.75 764.125 174.375 764.125C175 764.125 175.625 764.5 175.625 765.375V765.875M175.625 765.875V770.375M175.625 765.875C175.625 764.633 176.25 764.125 176.875 764.125C177.5 764.125 178.25 764.5 178.25 765.375V770.375M205.875 765.375C206.625 763.875 208.375 764.125 208.875 764.375C209.375 764.625 209.875 765.125 209.875 766.125V767.125M210.993 770.25H209.875V768.625M209.875 767.125H207.75C206.375 767.125 205.625 767.75 205.625 768.625C205.625 769.625 206.125 770.375 207.625 770.375C209.125 770.375 209.625 769.375 209.875 768.625M209.875 767.125V768.625M213.875 761.625H216.375V770.25M216.375 770.25H213.875M216.375 770.25H218.875" stroke="black" stroke-width="0.5"/>\n      <rect id="rect" x="230.156" y="757.281" width="31.4375" height="17.4375" rx="8.71875" stroke="black" stroke-width="0.5625"/>\n      <path id="auto" d="M273.125 765.125C273.875 763.625 275.625 763.875 276.125 764.125C276.625 764.375 277.125 764.875 277.125 765.875V766.875M278.243 770H277.125V768.375M277.125 766.875H275C273.625 766.875 272.875 767.5 272.875 768.375C272.875 769.375 273.375 770.125 274.875 770.125C276.375 770.125 276.875 769.125 277.125 768.375M277.125 766.875V768.375M285.5 770.125V768.125M285.5 768.125V763.875M285.5 768.125C285.5 769.125 284.875 770.125 283.625 770.125C282.375 770.125 281.5 769.642 281.5 768.125V763.875M288.625 764.125H291.125M291.125 764.125H294.375M291.125 764.125V761.875M291.125 764.125V770.125H294.375M299.875 763.875C301.125 763.875 302.25 764.75 302.25 767C302.25 769 301.625 770.125 299.875 770.125C298.25 770.125 297.5 769 297.5 767C297.5 765 298.625 763.875 299.875 763.875Z" stroke="black" stroke-width="0.5"/>\n    </g>\n  </g>\n</svg>\n\n'),n=t.xml,a=n.width.baseVal.value,r=n.height.baseVal.value,i=10/Math.max(a,r),o=t.paths.flatMap(e=>e.toShapes(!0)).map(e=>new l.MSw(e));!function(e){if(e.index){let t=e.index.array;for(let e=0,n=t.length;e<n;e+=3){let n=t[e+0],a=t[e+1];t[e+0]=a,t[e+1]=n}e.index.needsUpdate=!0}else{let t=e.attributes.position.count;for(let n of Object.values(e.attributes)){let{array:e,itemSize:a}=n;switch(n.needsUpdate=!0,a){case 3:{let n=new l.Pq0,r=new l.Pq0;for(let i=0;i<t;i+=3)n.fromArray(e,(i+0)*a),r.fromArray(e,(i+1)*a),n.toArray(e,(i+1)*a),r.toArray(e,(i+0)*a);break}case 2:{let n=new l.I9Y,r=new l.I9Y;for(let i=0;i<t;i+=3)n.fromArray(e,(i+0)*a),r.fromArray(e,(i+1)*a),n.toArray(e,(i+1)*a),r.toArray(e,(i+0)*a)}}}}if(e.attributes.normal){let t=e.attributes.normal;for(let e=0;e<t.count;e++)t.setXYZ(e,-t.getX(e),-t.getY(e),-t.getZ(e));t.needsUpdate=!0}}(u.pP(o,!1).translate(-a/2,-r/2,0).scale(i,-i,1)),this.imageFill=function(e,t){for(let t of(e=e.cloneNode(!0)).querySelectorAll("line"))t.remove();for(let t of e.querySelectorAll("#text *"))t.setAttribute("stroke","none"),t.setAttribute("fill","#f00");for(let t of e.querySelectorAll("#baseline, #toggle"))t.remove();return T(e.outerHTML,4096,4096)}(n,4096),this.imageStroke=function(e,t){for(let t of(e=e.cloneNode(!0)).querySelectorAll("line, path, rect"))t.setAttribute("stroke","#fff"),t.setAttribute("fill","none"),t.setAttribute("stroke-width","0.5");for(let t of e.querySelectorAll("#baseline"))t.setAttribute("stroke-width","0.6");return T(e.outerHTML,4096,4096,"black")}(n,4096);let h=n.querySelector("#toggle rect");this.toggleRect=new V.M_(h.x.baseVal.value,h.y.baseVal.value,h.width.baseVal.value,h.height.baseVal.value).relativeTo({x:0,y:0,width:a,height:r}).mirrorY(1)}}function L(){let e=(0,a.Fw)(),t=(0,s.Qs)(),{screenSize:n}=(0,o.A)(t.layoutObs);return(0,a.dB)("my-scene",function*(a){var o;e.pipeline.basicPasses.fxaa.enabled=!1,null==(o=document.querySelector("nextjs-portal"))||o.remove(),(0,i.mj)(new r.u,a),(0,i.mj)((yield*new z(n).initialize(e,t)),a)},[n]),null}},38911:()=>{},39231:(e,t,n)=>{"use strict";n.d(t,{j:()=>a});let a="\n\n  // Inigo Quilez\n  // https://iquilezles.org/articles/distfunctions2d/\n\n  // Circle - exact   (https://www.shadertoy.com/view/3ltSW2)\n  float sdCircle( vec2 p, float r )\n  {\n    return length(p) - r;\n  }\n\n  // Rounded Box - exact   (https://www.shadertoy.com/view/4llXD7 and https://www.youtube.com/watch?v=s5NGeUV2EyU)\n  float sdRoundedBox( in vec2 p, in vec2 b, in vec4 r )\n  {\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n  }\n\n  // Box - exact   (https://www.youtube.com/watch?v=62-pRVZuS5c)\n  float sdBox( in vec2 p, in vec2 b )\n  {\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n  }\n\n  // Segment - exact   (https://www.shadertoy.com/view/3tdSDj and https://www.youtube.com/watch?v=PMltMdi1Wzg)\n  float sdSegment( in vec2 p, in vec2 a, in vec2 b )\n  {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n  }\n\n  // Arc - exact   (https://www.shadertoy.com/view/wl23RK)\n  float sdArc( in vec2 p, in vec2 sc, in float ra, float rb )\n  {\n    // sc is the sin/cos of the arc's aperture\n    p.x = abs(p.x);\n    return ((sc.y*p.x>sc.x*p.y) ? length(p-sc*ra) : \n                                  abs(length(p)-ra)) - rb;\n  }\n\n  float sdRing( in vec2 p, in vec2 n, in float r, in float th )\n  {\n    p.x = abs(p.x);\n    p = mat2(n.x,n.y,-n.y,n.x)*p;\n    return max( abs(length(p)-r)-th*0.5,\n                length(vec2(p.x,max(0.0,abs(r-p.y)-th*0.5)))*sign(p.x) );\n  }\n\n  float opRound( in float d, in float r )\n  {\n    return d - r;\n  }\n\n  float opOnion( in float d, in float r )\n  {\n    return abs(d) - r;\n  }\n"},61572:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var a=n(49797),r=n(13565);let i={...r.q.defaultParams,size:512,viscosity:.98,cellScale:1,damping:.98};class o extends r.q{get viscosity(){return this.updateUniforms.uViscosity.value}set viscosity(e){this.updateUniforms.uViscosity.value=e}get cellScale(){return this.updateUniforms.uCellScale.value}set cellScale(e){this.updateUniforms.uCellScale.value=e}get damping(){return this.updateUniforms.uDamping.value}set damping(e){this.updateUniforms.uDamping.value=e}pointer(e,t,n,a){let{uPointer:r}=this.updateUniforms;r.value.set(e,t,n,a)}constructor(e){super({filter:"linear",...e}),this.shaders({initial:{fragmentColor:"\n          gl_FragColor.rgb = vec3(0.0);\n          gl_FragColor.a = 1.0;\n        "},update:{uniforms:{uViscosity:{value:this.params.viscosity},uCellScale:{value:this.params.cellScale},uDamping:{value:this.params.damping},uPointer:{value:new a.IUQ(.5,.5,.1,1)}},fragmentTop:"\n          vec4 fetch(vec2 uv) {\n            if (uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0 || uv.y > 1.0) {\n              return vec4(0.0);\n            }\n            float margin = 0.2;\n            float edgeDist = min(min(uv.x, 1.0 - uv.x), min(uv.y, 1.0 - uv.y));\n            edgeDist = 1.0 - pow(1.0 - edgeDist, 15.0);\n            float edgeFade = smoothstep(0.0, margin, edgeDist);\n            return texture2D(uTexture, uv) * edgeFade;\n          }\n        ",fragmentColor:"\n          vec2 uv = vUv;\n          float viscosity = uViscosity;\n          vec2 cellSize = uCellScale / uTextureSize;\n\n          vec4 center = fetch(uv);\n          vec4 north = fetch(uv + vec2(0.0, cellSize.y));\n          vec4 south = fetch(uv - vec2(0.0, cellSize.y));\n          vec4 east = fetch(uv + vec2(cellSize.x, 0.0));\n          vec4 west = fetch(uv - vec2(cellSize.x, 0.0));\n\n          // x: previous height\n          // y: penultimate height\n          // z: unused\n          // w: unused\n\n          float newHeight = ((north.x + south.x + east.x + west.x) * 0.5 - center.y) * viscosity;\n\n          // Pointer influence\n          float radius = uPointer.z;\n          float strength = uPointer.w;\n          float dist = distance(uv * uTextureSize, uPointer.xy * uTextureSize) - radius;\n          float cellLength = length(cellSize);\n          float influence = smoothstep(cellLength * 0.5, -cellLength * 0.5, dist);\n          newHeight += influence * strength;\n\n          // Damping\n          newHeight *= uDamping;\n          center.x *= uDamping;\n\n          gl_FragColor = vec4(newHeight, center.x, 0.0, 1.0);\n        "}})}}o.defaultParams=i},65927:(e,t,n)=>{"use strict";n.d(t,{S:()=>a});let a="\n#ifndef GLSL_BASIC\n#define GLSL_BASIC\n\nfloat clamp01(float x) {\n  return x < 0.0 ? 0.0 : x > 1.0 ? 1.0 : x;\n}\n\nvec2 clamp01(vec2 x) {\n  return vec2(clamp01(x.x), clamp01(x.y));\n}\n\nvec3 clamp01(vec3 x) {\n  return vec3(clamp01(x.x), clamp01(x.y), clamp01(x.z));\n}\n\nvec4 clamp01(vec4 x) {\n  return vec4(clamp01(x.x), clamp01(x.y), clamp01(x.z), clamp01(x.w));\n}\n\n#endif\n"},73446:(e,t,n)=>{"use strict";n.d(t,{x:()=>r});var a=n(1029);let r="\n#ifndef BLENDING\n#define BLENDING\n\n".concat((0,a.N)("vecX","\n  T multiplyBlending(in T a, in T b) {\n    return a * b;\n  }\n"),"\n\n").concat((0,a.N)("vecX","\n  T screenBlending(in T a, in T b) {\n    return 1.0 - (1.0 - a) * (1.0 - b);\n  }\n"),"\n\nfloat overlayBlending(in float a, in float b) {\n  return a < 0.5 ? (2.0 * a * b) : (1.0 - 2.0 * (1.0 - a) * (1.0 - b));\n}\n\nvec2 overlayBlending(in vec2 a, in vec2 b) {\n  return vec2(\n    overlayBlending(a.x, b.x),\n    overlayBlending(a.y, b.y));\n}\n\nvec3 overlayBlending(in vec3 a, in vec3 b) {\n  return vec3(\n    overlayBlending(a.x, b.x),\n    overlayBlending(a.y, b.y),\n    overlayBlending(a.z, b.z));\n}\n\nvec4 overlayBlending(in vec4 a, in vec4 b) {\n  return vec4(\n    overlayBlending(a.x, b.x),\n    overlayBlending(a.y, b.y),\n    overlayBlending(a.z, b.z),\n    overlayBlending(a.w, b.w));\n}\n\n").concat((0,a.N)("vecX","\n  T darkenBlending(in T a, in T b) {\n    return max(a, b);\n  }\n"),"\n\n").concat((0,a.N)("vecX","\n  T lightenBlending(in T a, in T b) {\n    return max(a, b);\n  }\n"),"\n\n").concat((0,a.N)("vecX","\n  T differenceBlending(in T a, in T b) {\n    return abs(a - b);\n  }\n"),"\n\n#endif\n")},77515:(e,t,n)=>{"use strict";n.d(t,{e:()=>g});var a=n(28535),r=n(76999),i=n(57368),o=n(49797),s=n(5832),l=n(33589),c=new WeakMap;class u extends o.Nv2{dispose(){!(0,a._)(this,c)&&(super.dispose(),(0,i._)(this,c,!0),this.video&&(this.video.pause(),this.video.src="",this.video.parentNode&&this.video.parentNode.removeChild(this.video),this.video=null))}static fromUrl(e){let{loop:t=!0,autoplay:n=!0,muted:a=!0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=document.createElement("video");return r.src=e,r.loop=t,r.autoplay=n,r.muted=a,r.playsInline=!0,r.crossOrigin="anonymous",r.play(),new u(r)}constructor(e){super(e),(0,r._)(this,c,{writable:!0,value:void 0}),this.video=e,(0,i._)(this,c,!1)}}let h={video:["mp4","webm"],srgb:["jpg","jpeg","png","webp"],linear:["hdr","exr"]},d=e=>h.srgb.includes(e),f=e=>h.linear.includes(e),m=e=>h.video.includes(e),p=e=>d(e)||f(e);var C=new WeakMap,v=new WeakMap;class x{loadTexture(e,t){var n,r,c;let h,d,p=new URL(e,window.location.href).pathname.split("/").pop()||"unknown",x=null==(n=p.match(/[^.]+$/))?void 0:n[0];if(void 0===x)throw Error("No extension found in url: ".concat(e));if(m(x)){let t=(0,l.F)(u.fromUrl(e));return t.video.onloadedmetadata=()=>{t.image.width=t.video.videoWidth,t.image.height=t.video.videoHeight,t.resolve()},t.name=p,t}let g=(f(x)?(0,i._)(this,v,null!=(r=(0,a._)(this,v))?r:new s.Y):(0,i._)(this,C,null!=(c=(0,a._)(this,C))?c:new o.Tap)).load(e,e=>{var n;e.name=p,e.colorSpace=null!=(n=null==t?void 0:t.colorSpace)?n:f(x)?o.Zr2:o.er$,w(),h(e)},void 0,()=>{w();let t=Error("Cannot load texture (NOT FOUND?): ".concat(e));d(t)}),M=new Promise((e,t)=>{h=e,d=t});Object.assign(g,{then:M.then.bind(M),catch:M.catch.bind(M),finally:M.finally.bind(M)});let w=()=>{delete g.then,delete g.catch,delete g.finally};return g}load(e){var t;let n=null==(t=e.match(/[^.]+$/))?void 0:t[0];if(void 0===n)throw Error("No extension found in url: ".concat(e));if(p(n))return this.loadTexture(e);throw Error("Unsupported extension: ".concat(e))}constructor(){(0,r._)(this,C,{writable:!0,value:void 0}),(0,r._)(this,v,{writable:!0,value:void 0}),(0,i._)(this,C,null),(0,i._)(this,v,null)}}let g=new x},96122:(e,t,n)=>{"use strict";function a(e){let t=e.split("\n"),n=0;for(let e of t){let t=e.match(/^(\s*)\S/);if(t){n=t[1].length;break}}return t.map(e=>e.slice(Math.min(e.length,n))).join("\n")}n.d(t,{T:()=>a})},98114:(e,t,n)=>{"use strict";n.r(t),n.d(t,{FpsMeter:()=>s});var a=n(70691),r=n(18479),i=n(36508);let o={frequency:3,tickerName:"three",precision:1};function s(e){let{frequency:t,tickerName:n,precision:s,...l}={...o,...e},{ref:c}=(0,r.useEffects)(function*(){let e=i.Rv.get("three");yield e.onTick({timeInterval:1/3},()=>{c.current.innerText="".concat(e.averageFps.toFixed(s)," fps")})},[t,n,s]);return(0,a.jsx)("div",{ref:c,...l,children:"-- fps"})}}}]);