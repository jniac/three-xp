"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7840],{66851:(t,e,n)=>{n.d(e,{_:()=>s,w:()=>o});var a=n(49797),r=n(96273);let i=new a.kn4;function o(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i;return(0,r.vl)(t,e)}let l=new a.Q1f;function s(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l;return e.set(t)}},67840:(t,e,n)=>{n.d(e,{w:()=>g});var a=n(49797),r=n(96273),i=n(66851),o=n(79285);function l(){return[...new Set(["�",..."abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",..."\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff",..."0123456789",..." @#.,!?\xbf:;-+*/=%&|()[]{}<>$'’\""])].join("")}class s{constructor(){let t=l(),e=new a.I9Y(16,24),n=e.x/e.y,r=function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new a.I9Y;return n.x=Math.ceil(Math.sqrt(t/e)),n.y=Math.ceil(t/n.x),n}(t.length,n),i=e.clone().multiplyScalar(3),s=(0,o.ceilPowerOfTwo)(i.x*r.x),u=(0,o.ceilPowerOfTwo)(i.y*r.y),d=s/(i.x*r.x),c=u/(i.y*r.y);if("undefined"==typeof document){this.canvas=null,this.texture=null,this.symbols="",this.charGrid=new a.I9Y;return}let h=document.createElement("canvas");h.width=s,h.height=u;let x=h.getContext("2d");x.font="".concat(.8*i.y,"px monospace"),x.textBaseline="top",x.fillStyle="black",x.fillRect(0,0,s,u),x.fillStyle="white",x.transform(d,0,0,c,0,0);for(let e=0;e<t.length;e++){let n=Math.floor(e/r.x),a=(e-n*r.x+.12)*i.x,o=i.y*(n+.19999999999999996);x.fillText(t[e],a,o)}this.canvas=h,this.texture=new a.GOR(h),this.symbols=t,this.charGrid=r}}s.getDefaultSymbols=l;let u={oriented:0,billboard:1},d={nodeMaterial:!1,textCount:1e3,lineLength:24,lineCount:2,charSize:new a.I9Y(.2,.3),textSize:1,textOffset:0,orientation:"billboard",textDefaults:{color:"#ff00ff",size:1}};class c{get textCount(){return this.metadata.textCount}get lineCount(){return this.metadata.lineCount}get lineLength(){return this.metadata.lineLength}get strideHeaderByteSize(){return this.metadata.strideHeaderByteSize}get strideByteSize(){return this.metadata.strideByteSize}get textureSize(){return new a.I9Y(this.metadata.textureWidth,this.metadata.textureHeight)}encode(){let t=JSON.stringify(this.metadata),e=new TextEncoder().encode(t),n=e.length,a=new Uint8Array(4);new DataView(a.buffer).setUint32(0,n,!0);let r=new Uint8Array(4+n+this.array.length);return r.set(a,0),r.set(e,4),r.set(this.array,4+n),r}static decode(t){let e=new DataView(t.buffer).getUint32(0,!0),n=t.slice(4,4+e),a=JSON.parse(new TextDecoder().decode(n)),r=new c(a.symbols,a.textCount,a.lineCount,a.lineLength),i=t.slice(4+e);return r.array.set(i),r}info(){return"data: ".concat(this.array.length," bytes, ").concat(this.textureSize.x,"x").concat(this.textureSize.y)}getTextAt(t){let{array:e}=this,{symbols:n,lineLength:a,strideByteSize:r,strideHeaderByteSize:i}=this.metadata,o=t*r,l=e[o+0],s=e[o+16],u=t=>t.toString(16).padStart(2,"0"),d="#".concat(u(e[o+4])).concat(u(e[o+4+1])).concat(u(e[o+4+2])),c=e[o+4+3],h="#".concat(u(e[o+8])).concat(u(e[o+8+1])).concat(u(e[o+8+2])),x=e[o+8+3],f=[];for(let t=0;t<l;t++){let r=o+i+t*a,l=[];for(let t=0;t<s;t++){let a=n[e[r+t]];l.push(a)}f.push(l.join(""))}return{text:f.join("\n"),textColor:d,textOpacity:c,backgroundColor:h,backgroundOpacity:x,currentLineCount:l,currentLineLength:s}}setSizeAt(t,e){let{array:n}=this,{strideByteSize:a}=this.metadata;return new DataView(n.buffer).setFloat32(t*a+12,e),this}setColorAt(t,e){let{color:n,opacity:a,textColor:r=n,textOpacity:l=a,backgroundColor:s=r,backgroundOpacity:u=+(null!=a?!!a:!!e.backgroundColor)}=e,{array:d}=this,{strideByteSize:c}=this.metadata;{let e=t*c+4;if(void 0!==r){let{r:t,g:n,b:a}=(0,i._)(r);d[e+0]=255*t,d[e+1]=255*n,d[e+2]=255*a}void 0!==l&&(d[e+3]=(0,o.toff)(l))}{let e=t*c+8;if(void 0!==s){let{r:t,g:n,b:a}=(0,i._)(s);d[e+0]=255*t,d[e+1]=255*n,d[e+2]=255*a}void 0!==u&&(d[e+3]=(0,o.toff)(u))}return this.texture.needsUpdate=!0,this}setTextAt(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{trim:a=!1,size:r=1,...i}=n;this.setColorAt(t,i),this.setSizeAt(t,r);let{array:o}=this,{symbols:l,lineCount:s,lineLength:u,strideByteSize:d,strideHeaderByteSize:c}=this.metadata,h=(a?e.trim():e).split("\n");h.length>s&&(console.warn("TextHelper: Text has more lines than ".concat(s,", truncating.")),h=h.slice(0,s)),h=h.map(t=>(a&&(t=t.trim()),t.length>u)?(console.warn("TextHelper: Line length is greater than ".concat(u," characters, clamping.")),t.slice(0,u)):t),o[t*d+0]=h.length;let x=t*d,f=h.length;for(let t=0;t<s;t++){let e=0;t<f&&(o[x+16+4*t]=h[t].length,e=h[t].length);let n=x+c+t*u;for(let a=0;a<u;a++){let r=n+a;if(t>=f||a>=e)o[r]=0;else{let e=l.indexOf(h[t].charAt(a));o[r]=-1===e?0:e}}}this.texture.needsUpdate=!0}constructor(t,e,n,r,{defaultColor:l="#ffffff",defaultTextOpacity:s=1,defaultBackgroundOpacity:u=0}={}){let d=16+4*n,c=d+4*Math.ceil(n*r/4),h=Math.ceil((d+e*c)/4),x=(0,o.ceilPowerOfTwo)(Math.sqrt(h)),f=Math.ceil(h/x);this.metadata={symbols:t,textCount:e,lineCount:n,lineLength:r,strideHeaderByteSize:d,strideByteSize:c,textureWidth:x,textureHeight:f};let v=new Uint8Array(x*f*4),{r:g,g:p,b:y}=(0,i._)(l);for(let t=0;t<e;t++){let e=t*c;v[(e+=4)+0]=255*g,v[e+1]=255*p,v[e+2]=255*y,v[e+3]=255*s,v[(e+=4)+0]=255*g,v[e+1]=255*p,v[e+2]=255*y,v[e+3]=255*u}this.array=v,this.texture=new a.GYF(v,x,f,a.GWd,a.OUM),this.texture.needsUpdate=!0}}var h=n(17953),x=n(81074),f=n(60041);let v=0;class g extends a.ZLX{applyTransform(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];let i=(0,r.GD)(e),o=new a.kn4,l=this.instanceMatrix.array.length;for(let t=0;t<l;t+=16)o.fromArray(this.instanceMatrix.array,t).multiply(i).toArray(this.instanceMatrix.array,t);return this}addTo(t){return t?t.add(this):this.removeFromParent(),this}onTop(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e3;return 0!==t?(this.renderOrder=t,this.material.depthTest=!1,this.material.depthWrite=!1,this.material.transparent=!0):(this.renderOrder=0,this.material.depthTest=!0,this.material.depthWrite=!0,this.material.transparent=!1),this}setData(t){return this.data=t,this}clearAllText(){return this.instanceMatrix.array.fill(0),this.instanceMatrix.needsUpdate=!0,this}setTextAt(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this.data.setTextAt(t,e,{...this.options.textDefaults,...n}),this.setMatrixAt(t,(0,i.w)(n)),this.instanceMatrix.needsUpdate=!0,this}setColorAt(t,e){this.data.setColorAt(t,{color:e})}setTextColorAt(t,e){return this.data.setColorAt(t,e),this}getDataStringView(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;return function(t,e,n,a,r){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:3,l=Array.from({length:e.length/4},(t,n)=>{let a=4*n,r=e[a+0],i=e[a+1];return[r,i,e[a+2],e[a+3]]}).slice(i*n/4,o*n/4),s=[];s.push("\nData texture array (".concat(e.length," bytes):")),s.push("\ndataStride: ".concat(n," (").concat(n/4," x 4 bytes)"));let u=4+a;for(let e=0;e<l.length;e++){let i=e%(n/4);0===i&&(s.push("\npack #".concat(e/(n/4))),s.push("info:")),4===i&&s.push("lines (".concat(a,"):")),i===u&&s.push("chars (".concat(r,"):"));let[o,d,c,h]=l[e],x="".concat(e.toString().padEnd(3)," - ").concat((4*e).toString().padEnd(4),":   ").concat(o.toString().padStart(3),", ").concat(d.toString().padStart(3),", ").concat(c.toString().padStart(3),", ").concat(h.toString().padStart(3));i>=u&&(x+="     ".concat(t.symbols[o]).concat(t.symbols[d]).concat(t.symbols[c]).concat(t.symbols[h])),s.push("  "+x)}return s.join("\n")}(this.atlas,this.data.array,this.data.strideByteSize,this.options.lineCount,this.options.lineLength,t,e)}constructor(t){let e={...d,...t},n=new s,i=new c(n.symbols,e.textCount,e.lineCount,e.lineLength),o=function(t,e,n){let i={...d,...t},o=new a.I9Y(i.textSize*i.lineLength*i.charSize.x,i.textSize*i.lineCount*i.charSize.y);return{uCameraMatrix:{value:new a.kn4},uOrientation:{value:function(t){if("string"==typeof t){if(t in u)return u[t];throw Error("Invalid orientation: ".concat(t))}if(Object.values(u).includes(t))return t;throw Error("Invalid orientation: ".concat(t))}(i.orientation)},uTextOffset:{value:(0,r.wX)(i.textOffset)},uPlaneSize:{value:o},uCharSize:{value:i.charSize},uLineLength:{value:i.lineLength},uLineCount:{value:i.lineCount},uAtlasCharGrid:{value:n.charGrid},uDataStrideHeader:{value:e.strideHeaderByteSize},uDataStride:{value:e.strideByteSize/4},uDataTexture:{value:e.texture},uDataTextureSize:{value:e.textureSize},uBoxBorderWidth:{value:0}}}(e,i,n),l=o.uPlaneSize.value;super(new a.bdM(l.width,l.height),e.nodeMaterial?function(t,e){let n=new x.P8l;n.name="TextHelperMaterial",n.transparent=!0,n.alphaTest=.5,n.side=a.$EB,console.warn("TextHelperMaterial is not supported in WebGPU yet, do not expect it to work.");let r=(0,h.PiW)(t.uDataTextureSize.value).onFrameUpdate(()=>t.uDataTextureSize.value),i=(0,h.PiW)(t.uDataStride.value).onFrameUpdate(()=>t.uDataStride.value);function o(e,n){let a=r.x,o=(0,h.WQq)((0,h.lKK)(e,i),n),l=(0,h.y4m)(o,a),s=(0,h.jbE)(o,(0,h.lKK)(l,a));return(0,h.wHr)(t.uDataTexture.value,(0,h.ZcS)(s,l))}(0,h.PiW)(t.uDataStrideHeader.value).onFrameUpdate(()=>t.uDataStrideHeader.value),(0,h.PiW)(t.uAtlasCharGrid.value).onFrameUpdate(()=>t.uAtlasCharGrid.value);let l=o(h.cGD,0);(0,h.PCg)((0,h.lKK)(l.r,255)),(0,h.PCg)(o(h.cGD,1)),(0,h.PCg)(o(h.cGD,2)),(0,h.fVC)(1);let s=(0,h.PiW)(1).onRenderUpdate(()=>t.uOrientation.value);return n.positionNode=(0,h.Fn)(()=>{let t=(0,h.eR5)().toVar();return(0,h.If)(s.equal(0),()=>{t.assign(h.WVU)}).Else(()=>{t.assign((0,h.w00)(h.FLB).mul(h.WVU))}),t})(),n.colorNode=(0,h.yWT)("yellow"),n}(o,0):function(t,e){let n=new a.V9B({map:e.texture,transparent:!0,alphaTest:.5,side:a.$EB});return n.name="TextHelperMaterial",n.onBeforeCompile=e=>f.b.with(e).uniforms(t).varying({vInstanceId:"float",vTextColor:"vec4",vBackgroundColor:"vec4",vCurrentLineCount:"float"}).top("\n      vec4 getData4(int instanceId, int offset) {\n        int width = int(uDataTextureSize.x);\n        int index = instanceId * int(uDataStride) + offset;\n        int dataY = index / width;\n        int dataX = index - dataY * width;\n        return texelFetch(uDataTexture, ivec2(dataX, dataY), 0);\n      }\n      vec4 getData4(float instanceId, int offset) {\n        return getData4(int(instanceId), offset);\n      }\n        \n      vec2 getCharOffset(float instanceId, float charIndex) {\n        int p = int(uDataStrideHeader + charIndex);\n        int q = p / 4;\n        int r = p - q * 4; // p % 4;\n        vec4 charIndexes = getData4(instanceId, q);\n        float i = charIndexes[r] * 255.0;\n        float x = mod(i, uAtlasCharGrid.x);\n        float y = floor(i / uAtlasCharGrid.x);\n        return vec2(x, uAtlasCharGrid.y - y - 1.0) / uAtlasCharGrid;\n      }\n      vec2 getCharOffset(float instanceId, float line, float char) {\n        // return vec2(line * 82.0 + char, 0.0) / uAtlasCharGrid;\n        return getCharOffset(instanceId, line * uLineLength + char);\n      }\n    ").vertex.replace("project_vertex","\n      vec4 infoTexel = getData4(gl_InstanceID, 0);\n      vCurrentLineCount = infoTexel.r * 255.0;\n\n      vTextColor = getData4(gl_InstanceID, 1);\n      vBackgroundColor = getData4(gl_InstanceID, 2);\n\n      vec4 sizeBytes = getData4(gl_InstanceID, 3) * 255.0;\n      uint encoded =\n        uint(sizeBytes.x) << 24 |\n        uint(sizeBytes.y) << 16 |\n        uint(sizeBytes.z) << 8  |\n        uint(sizeBytes.w);\n      float size = uintBitsToFloat(encoded);\n\n      vec4 mvPosition = vec4(transformed * size, 1.0);\n\n      mat4 textMatrix = uOrientation < 0.5\n        ? modelMatrix * instanceMatrix\n        : mat4(\n          uCameraMatrix[0],\n          uCameraMatrix[1],\n          uCameraMatrix[2],\n          modelMatrix * vec4(instanceMatrix[3].xyz, 1.0));\n\n      mvPosition.xy += uTextOffset;\n\n      mvPosition = viewMatrix * textMatrix * mvPosition;\n\n      gl_Position = projectionMatrix * mvPosition;\n\n      vInstanceId = float(gl_InstanceID);\n    ").fragment.top("\n      float sdBox(in vec2 p, in vec2 b) {\n        vec2 d = abs(p) - b;\n        return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n      }\n\n      vec4 getCharColor() {\n        vec2 uv = vMapUv * vec2(uLineLength, uLineCount);\n\n        uv.y += (uLineCount - vCurrentLineCount) * 0.5;\n        float lineIndex = floor((uLineCount - uv.y));\n\n        if (lineIndex < 0.0 || lineIndex >= vCurrentLineCount)\n          discard;\n\n        float currentLineLength = getData4(vInstanceId, 4 + int(lineIndex)).r * 255.0;\n        // vec2 ddx = dFdx(uv);\n        // vec2 ddy = dFdy(uv);\n        uv.x += (uLineLength - currentLineLength) * -0.5;\n        float charIndex = floor(uv.x);\n\n        if (charIndex < 0.0 || charIndex >= currentLineLength)\n          discard;\n\n        uv = fract(uv);\n        // diffuseColor = vec4(uv, 1.0, 1.0);\n        uv /= uAtlasCharGrid;\n\n        uv += getCharOffset(vInstanceId, lineIndex, charIndex);\n        // float lod = log2(max(length(dFdx(vMapUv)), length(dFdy(vMapUv))));\n        vec4 charColor = textureLod(map, uv, 0.0);\n        // Use textureGrad for better quality, when the square texture will be used\n        // vec4 sampledDiffuseColor = textureGrad(map, uv, ddx, ddy);\n        float char = charColor.r;\n        \n        return vec4(\n          mix(vBackgroundColor.rgb, vTextColor.rgb, charColor.r),\n          mix(vBackgroundColor.a, vTextColor.a, charColor.r));\n      }\n\n      vec4 getCharColorWithBorder() {\n        if (uBoxBorderWidth > 0.0) {\n          vec2 p = (vMapUv - 0.5) * uPlaneSize;\n          float d = sdBox(p, uPlaneSize * 0.5) + uBoxBorderWidth;\n          if (d > 0.0) {\n            return vTextColor;\n          }\n        }\n        return getCharColor();\n      }\n    ").fragment.replace("map_fragment","\n      diffuseColor = getCharColorWithBorder();\n    "),n}(o,n),e.textCount),this.textHelperId=v++,this.onBeforeRender=(t,e,n,a,r,i)=>{o.uCameraMatrix.value.copy(n.matrixWorld)},this.frustumCulled=!1,this.layers,this.options=e,this.atlas=n,this.data=i,this.derived={planeSize:l}}}g.defaultOptions=d,g.Atlas=s,g.Data=c}}]);