"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3405],{77535:function(n,e,t){t.d(e,{T:function(){return a},a:function(){return r}});let r=function(n,e){let{h:t=.3,w:r=1,p:a=3,q:o=1,a:i=.3}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},l=e**o;n.x=(e+i*Math.sin(l*Math.PI*2))*r,n.y=t*Math.pow(Math.sin(l*Math.PI),a)},a="\nvec2 looping(float t, float h, float w, float p, float q, float a) {\n  float t2 = pow(t, q);\n  return vec2(\n    (t + a * sin(t2 * PI * 2.0)) * w,\n    h * pow(sin(t2 * PI), p)\n  );\n}\n\nvec2 looping(float t) {\n  return looping(t, 0.3, 1.0, 3.0, 1.0, 0.3);\n}\n"},32678:function(n,e,t){t.d(e,{w:function(){return s}});var r=t(64740),a=t(783);let o={axis:"x",length:1,radialSegments:12,radius:.01,coneRatio:.1,radiusScale:1,vertexColor:!0,baseCap:"flat",color:"white"},i=new r.Color;function l(n){let{axis:e,length:t,radius:l,radialSegments:c,coneRatio:s,radiusScale:f,vertexColor:u,baseCap:m,color:p}={...o,...n},h=l*f,g=t*s,_=new r.ConeGeometry(3*h,g,c),v=new r.CylinderGeometry(h,h,1,c,1,!0),d=t-g,x=t-.5*g;_.rotateZ(-Math.PI/2).translate(x,0,0),v.scale(1,d,1).rotateZ(-Math.PI/2).translate(.5*d,0,0);let b="none"===m?new r.BufferGeometry:"flat"===m?new r.CircleGeometry(h,c).rotateY(-Math.PI/2):new r.SphereGeometry(h,c,3,0,2*Math.PI,0,.5*Math.PI).rotateZ(Math.PI/2).rotateX(Math.PI/2),w=(0,a.n4)([_,v,b]);switch(e){case"y":w.rotateZ(Math.PI/2);break;case"z":w.rotateY(-Math.PI/2)}if(u){let n=w.attributes.position.count,e=new r.BufferAttribute(new Float32Array(3*n),3);w.setAttribute("color",e),i.set(p);for(let t=0;t<n;t++)e.setXYZ(t,i.r,i.g,i.b)}return w}let c={xColor:"#ff3333",yColor:"#33cc66",zColor:"#3366ff"};class s extends r.BufferGeometry{constructor(n){super();let{xColor:e,yColor:t,zColor:r,...o}={...c,...n},i=l({...o,axis:"x",color:e}),s=l({...o,axis:"y",color:t}),f=l({...o,axis:"z",color:r}),u=(0,a.n4)([i,s,f]);this.copy(u),u.dispose()}}},75952:function(n,e,t){t.d(e,{P:function(){return a}});var r=t(64740);class a extends r.ShaderMaterial{constructor(n){let{vertexColors:e=!0,...t}=null!=n?n:{};super({...t,uniforms:{uSunPosition:{value:new r.Vector3(.5,.7,.3)}},vertexColors:e,vertexShader:"\nvarying vec3 vWorldNormal;\nvarying vec3 vColor;\n\nvoid main() {\n  vWorldNormal = mat3(modelMatrix) * normal;\n  vColor = color;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader:"\nvarying vec3 vWorldNormal;\nvarying vec3 vColor;\n\nuniform vec3 uSunPosition;\n\nvoid main() {\n  vec3 lightDirection = normalize(uSunPosition);\n  float light = dot(vWorldNormal, lightDirection) * 0.5 + 0.5;\n  light = pow(light, 2.0);\n  light = mix(0.1, 1.0, light);\n  gl_FragColor = vec4(vColor * light, 1.0);\n}\n"}),this.sunPosition=this.uniforms.uSunPosition.value}}},42685:function(n,e,t){t.d(e,{b:function(){return d},R:function(){return b}});var r=t(12030),a=t(64740);let o=["common","uv_pars_vertex","displacementmap_pars_vertex","color_pars_vertex","fog_pars_vertex","normal_pars_vertex","morphtarget_pars_vertex","skinning_pars_vertex","shadowmap_pars_vertex","logdepthbuf_pars_vertex","clipping_planes_pars_vertex","uv_vertex","color_vertex","morphcolor_vertex","beginnormal_vertex","morphnormal_vertex","skinbase_vertex","skinnormal_vertex","defaultnormal_vertex","normal_vertex","begin_vertex","morphtarget_vertex","skinning_vertex","displacementmap_vertex","project_vertex","logdepthbuf_vertex","clipping_planes_vertex","worldpos_vertex","shadowmap_vertex","fog_vertex","common","packing","dithering_pars_fragment","color_pars_fragment","uv_pars_fragment","map_pars_fragment","alphamap_pars_fragment","alphatest_pars_fragment","alphahash_pars_fragment","aomap_pars_fragment","lightmap_pars_fragment","emissivemap_pars_fragment","iridescence_fragment","cube_uv_reflection_fragment","envmap_common_pars_fragment","envmap_physical_pars_fragment","fog_pars_fragment","lights_pars_begin","normal_pars_fragment","lights_physical_pars_fragment","transmission_pars_fragment","shadowmap_pars_fragment","bumpmap_pars_fragment","normalmap_pars_fragment","clearcoat_pars_fragment","iridescence_pars_fragment","roughnessmap_pars_fragment","metalnessmap_pars_fragment","logdepthbuf_pars_fragment","clipping_planes_pars_fragment","clipping_planes_fragment","logdepthbuf_fragment","map_fragment","color_fragment","alphamap_fragment","alphatest_fragment","alphahash_fragment","roughnessmap_fragment","metalnessmap_fragment","normal_fragment_begin","normal_fragment_maps","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","emissivemap_fragment","lights_physical_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","aomap_fragment","transmission_fragment","opaque_fragment","tonemapping_fragment","colorspace_fragment","fog_fragment","premultiplied_alpha_fragment","dithering_fragment"];var i=t(45003);class l{static from(n,e){if(e instanceof i.Observable){if("number"==typeof e.value)return new l(n,e);throw Error("Observable value must be a number")}let t=typeof e;return"object"===t&&e.constructor===Object&&"value"in e?new l(n,e):"string"===t?new l(n,{value:new a.Color(e)}):new l(n,{value:e})}get value(){return this.target.value}computeDeclaration(){let n=this.name,e=this.target.value;if("number"==typeof e)return"uniform float ".concat(n,";");if(e.isVector2)return"uniform vec2 ".concat(n,";");if(e.isVector3||e.isColor)return"uniform vec3 ".concat(n,";");if(e.isVector4||e.isQuaternion)return"uniform vec4 ".concat(n,";");if(e.isMatrix3)return"uniform mat3 ".concat(n,";");if(e.isMatrix4)return"uniform mat4 ".concat(n,";");if(e.isTexture)return e.isCubeTexture?"uniform samplerCube ".concat(n,";"):"uniform sampler2D ".concat(n,";");if(e instanceof Float32Array)return"uniform float ".concat(n,"[").concat(e.length,"];");throw console.log("unhandled value:",e),Error('unhandled value: "'.concat(null==e?void 0:e.constructor.name,'"'))}constructor(n,e){this.name=n,this.target=e}}function c(){let n=(0,r._)(["","s*",""],["","\\s*",""]);return c=function(){return n},n}let s=null,f=n=>(s=n,d),u="// ShaderForge (injected code) ->",m="// <- ShaderForge",p=n=>"".concat(u,"\n").concat(n.trim(),"\n").concat(m),h=n=>{let e=n=>n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),t=RegExp(String.raw(c(),e(m),e(u)),"g");return n.replaceAll(t,"")};class g{getPattern(n){let{throwError:e=!0}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t="#include <".concat(n,">"),r=this.type;if(e&&!1===s[r].includes(t))throw Error('"'.concat(t,'" is not present in the shader template program.'));return{pattern:t,type:r}}replace(n,e){let{type:t,pattern:r}=this.getPattern(n),a=p(e);return s[t]=s[t].replace(r,a),d}inject(n,e,t){let{type:r,pattern:a}=this.getPattern(e),o="after"===n?"".concat(a,"\n").concat(p(t)):"".concat(p(t),"\n").concat(a);return s[r]=s[r].replace(a,o),d}injectTokenComments(){for(let n of o){let{type:e,pattern:t}=this.getPattern(n,{throwError:!1});s[e]=s[e].replace(t,"\n        ".concat(t,"\n        // ShaderForge TOKEN: ").concat(n,"\n      "))}return d}header(n){let e=this.type;return s[e]="".concat(n,"\n").concat(s[e]),d}before(n,e){return this.inject("before",n,e)}after(n,e){return this.inject("after",n,e)}top(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];return s[this.type]=s[this.type].replace("void main() {","\n      ".concat(p(e.join("\n\n")),"\n      void main() {\n    ")),d}mainBeforeAll(n){return s[this.type]=s[this.type].replace("void main() {","void main() {\n        ".concat(p(n))),d}mainAfterAll(n){return s[this.type]=s[this.type].replace(/}\s*$/,"\n      ".concat(p(n),"\n    }")),d}uniforms(n){if("string"==typeof n)this.top(n);else{let e=[];for(let[t,r]of Object.entries(n)){let n=l.from(t,r);e.push(n.computeDeclaration())}this.top(e.join("\n")),function(n){for(let[e,t]of Object.entries(n)){let n=l.from(e,t);if(e in s.uniforms){if(n.value!==s.uniforms[e].value)throw Error("Shader redefinition! (Uniform values are not equal)")}else s.uniforms[e]=n}}(n)}return d}clean(){return s[this.type]=h(s[this.type]),d}printFinalCode(){return console.log(s[this.type].replace(/#include <(.*)>/g,(n,e)=>{let t=a.ShaderChunk[e];if(!t)throw Error('Shader chunk "'.concat(e,'" not found'));return t})),d}constructor(n){this.type=n}}let _=new g("fragmentShader"),v=new g("vertexShader"),d=Object.assign(function(n){return n&&f(n),d},{shaderName:function(n){return s.shaderName="".concat(n," (ShaderForge)"),d},defines:function(n){return s.defines?Object.assign(s.defines,n):s.defines=n,d},uniforms:function(n){return v.uniforms(n),_.uniforms(n),d},varying:function(n){let e="";if("string"==typeof n)e=n;else{let t=[];for(let[e,r]of Object.entries(n))t.push("varying ".concat(r," ").concat(e,";"));e=t.join("\n")}return v.top(e),_.top(e),d},vertex:v,fragment:_,header:function(n){return _.header(n),v.header(n),d},clean:function(){return _.clean(),v.clean(),d},with:f,wrap:(n,e)=>(n.onBeforeCompile=n=>{s=n},n)}),x=new a.Color;function b(n){let{r:e,g:t,b:r}=x.set(n);return"vec3(".concat(e.toFixed(3),", ").concat(t.toFixed(3),", ").concat(r.toFixed(3),")")}},34310:function(n,e,t){t.d(e,{$4:function(){return o},bB:function(){return a}});var r=t(74985);function a(n,e,t){return e.add(n),(0,r.N)(n,t),n}function o(n,e){return function(n,e){let t=n;for(;t.parent;){if(t.parent===e)return!0;t=t.parent}return!1}(e,n)}},74985:function(n,e,t){t.d(e,{N:function(){return i}});var r=t(64740),a=t(73437);new r.Vector3(0,0,0),new r.Euler(0,0,0,"XYZ"),new r.Vector3(1,1,1);let o={x:0,y:0,z:0,rotationX:0,rotationY:0,rotationZ:0,rotationOrder:"XYZ",rotationUnit:"rad",scaleX:1,scaleY:1,scaleZ:1,scaleScalar:1,visible:!0};function i(n,e){let{x:t,y:i,z:l,position:c=new r.Vector3(t,i,l),rotationX:s,rotationY:f,rotationZ:u,rotationOrder:m,rotationUnit:p,rotation:h,scaleX:g,scaleY:_,scaleZ:v,scaleScalar:d,scale:x=new r.Vector3(g,_,v).multiplyScalar(d),visible:b}={...o,...e};return(0,a.Q7)(c,n.position),(0,a.Gg)(null!=h?h:[s,f,u,p,m],n.rotation),(0,a.Q7)(x,n.scale),n.visible=b,n}},18647:function(n,e,t){t.d(e,{C:function(){return a}});let r={vecX:["float","vec2","vec3","vec4"]},a=(n,e)=>{let t=[],a=Array.isArray(n)?n:[n].map(n=>n in r?r[n]:n).flat();if("function"==typeof e)for(let n of a)t.push(e(n).replaceAll(/\bT\b/g,n));else for(let n of a)t.push(e.replaceAll(/\bT\b/g,n));return t.join("\n")}},68392:function(n,e,t){t.d(e,{U:function(){return o}});var r=t(85692),a=t(18647);let o="\n  ".concat(r.l,"\n\n  float sin01(float x) {\n    return 0.5 + 0.5 * sin(x * 6.283185307179586);\n  }\n\n  vec2 scaleAround(vec2 p, vec2 c, float s) {\n    return c + (p - c) / s;\n  }\n\n  // Same as mix, but clamped.\n  ").concat((0,a.C)("vecX","\n    T lerp(in T a, in T b, in float x) {\n      return mix(a, b, clamp01(x));\n    }\n  "),"\n\n  float inverseLerpUnclamped(in float a, in float b, float x) {\n    return (x - a) / (b - a);\n  }\n\n  float inverseLerp(in float a, in float b, float x) {\n    return clamp01((x - a) / (b - a));\n  }\n\n  float threshold(in float x, in float thresholdValue) {\n    return x < thresholdValue ? 0. : 1.;\n  }\n\n  float threshold(in float x, in float thresholdValue, in float width) {\n    return width < 1e-9 \n      ? (x < thresholdValue ? 0. : 1.)\n      : clamp01((x - thresholdValue + width * .5) / width);\n  }\n\n  mat3 extractRotation(mat4 matrix) {\n    return mat3(matrix[0].xyz, matrix[1].xyz, matrix[2].xyz);\n  }\n\n  vec2 rotate(vec2 p, float a) {\n    float c = cos(a);\n    float s = sin(a);\n    float x = c * p.x + s * p.y;\n    float y = -s * p.x + c * p.y;\n    return vec2(x, y);\n  }\n\n  vec2 rotateAround(vec2 p, float a, vec2 c) {\n    return c + rotate(p - c, a);\n  }\n\n  vec2 rotateScaleAround(vec2 p, float a, float s, vec2 c) {\n    return c + rotate((p - c) / s, a);\n  }\n  \n  float positiveModulo(float x) {\n    x = mod(x, 1.0);\n    return x < 0.0 ? x + 1.0 : x;\n  }\n\n  float positiveModulo(float x, float modulo) {\n    x = mod(x, modulo);\n    return x < 0.0 ? x + modulo : x;\n  }\n\n  // Limit a value to a maximum that the function tends to reach when x -> ∞\n  // https://www.desmos.com/calculator/0vewkbnscu\n  float limited(float x, float maxValue) {\n    return x <= 0.0 ? x : maxValue * x / (maxValue + x);\n  }\n\n  // https://www.desmos.com/calculator/0vewkbnscu\n  float limited(float x, float minValue, float maxValue) {\n    float d = maxValue - minValue;\n    float xd = x - minValue;\n    return x <= minValue ? x : minValue + d * xd / (d + xd);\n  }\n\n  float sqLength(in vec2 p) {\n    return p.x * p.x + p.y * p.y;\n  }\n\n  float sqLength(in vec3 p) {\n    return p.x * p.x + p.y * p.y + p.z * p.z;\n  }\n\n  float pcurve(float x, float a, float b) {\n    float k = pow(a + b, a + b) / (pow(a, a) * pow(b, b));\n    return k * pow(x, a) * pow(1.0 - x, b);\n  }\n\n  ").concat((0,a.C)("vecX","\n    T min3(in T a, in T b, in T c) {\n      return min(min(a, b), c);\n    }\n  "),"\n\n  ").concat((0,a.C)("vecX","\n    T min4(in T a, in T b, in T c, in T d) {\n      return min(min(a, b), min(c, d));\n    }\n  "),"\n")}}]);