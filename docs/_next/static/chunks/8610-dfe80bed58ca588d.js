"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8610],{1029:(e,t,n)=>{n.d(t,{N:()=>o});let a={vecX:["float","vec2","vec3","vec4"]},o=(e,t)=>{let n=[],o=Array.isArray(e)?e:[e].map(e=>e in a?a[e]:e).flat();if("function"==typeof t)for(let e of o)n.push(t(e).replaceAll(/\bT\b/g,e));else for(let e of o)n.push(t.replaceAll(/\bT\b/g,e));return n.join("\n")}},8144:(e,t,n)=>{n.d(t,{H:()=>r});var a=n(65927),o=n(1029);let r="\n".concat(a.S,"\n\n#ifndef GLSL_UTILS\n#define GLSL_UTILS\n\nfloat sin01(float x) {\n  return 0.5 + 0.5 * sin(x * 6.283185307179586);\n}\n\nvec2 scaleAround(vec2 p, vec2 c, float s) {\n  return c + (p - c) / s;\n}\n\n// Same as mix, but clamped.\n").concat((0,o.N)("vecX","\n  T lerp(in T a, in T b, in float x) {\n    return mix(a, b, clamp01(x));\n  }\n"),"\n\nfloat inverseLerpUnclamped(in float a, in float b, float x) {\n  return (x - a) / (b - a);\n}\n\nfloat inverseLerp(in float a, in float b, float x) {\n  return clamp01((x - a) / (b - a));\n}\n\nfloat remap(in float x, in float a, in float b, in float c, in float d) {\n  return c + (d - c) * inverseLerp(a, b, x);\n}\n\n// Remap from [-1, 1] to [0, 1]\nfloat remap1101(in float x) {\n  return clamp01(0.5 + 0.5 * x);\n}\n\n").concat((0,o.N)("vecX","\n  T oneMinus(in T x) {\n    return 1.0 - x;\n  }\n"),"\n\n// Returns x^p, but handles negative x values correctly.\nfloat spow(in float x, in float p) {\n  return x >= 0.0 ? pow(x, p) : -pow(-x, p);\n}\n\nfloat threshold(in float x, in float thresholdValue) {\n  return x < thresholdValue ? 0. : 1.;\n}\n\nfloat threshold(in float x, in float thresholdValue, in float width) {\n  return width < 1e-9 \n    ? (x < thresholdValue ? 0. : 1.)\n    : clamp01((x - thresholdValue + width * .5) / width);\n}\n\nmat3 extractRotation(mat4 matrix) {\n  return mat3(matrix[0].xyz, matrix[1].xyz, matrix[2].xyz);\n}\n\nvec2 rotate(vec2 p, float a) {\n  float c = cos(a);\n  float s = sin(a);\n  float x = c * p.x + s * p.y;\n  float y = -s * p.x + c * p.y;\n  return vec2(x, y);\n}\n\nvec2 rotateAround(vec2 p, float a, vec2 c) {\n  return c + rotate(p - c, a);\n}\n\nvec2 rotateScaleAround(vec2 p, float a, float s, vec2 c) {\n  return c + rotate((p - c) / s, a);\n}\n\nfloat positiveModulo(float x) {\n  x = mod(x, 1.0);\n  return x < 0.0 ? x + 1.0 : x;\n}\n\n// Modulo that keeps the result in the range [0, modulo]\nfloat positiveModulo(float x, float modulo) {\n  x = mod(x, modulo);\n  return x < 0.0 ? x + modulo : x;\n}\n\n// Modulo that keeps the result in the range [-m/2, m/2]\nfloat middleModulo(float x, float modulo) {\n  x = mod(x, modulo);\n  return x < -modulo / 2.0 ? x + modulo : x > modulo / 2.0 ? x - modulo : x;\n}\n\n// Limit a value to a maximum that the function tends to reach when x -> ∞\n// https://www.desmos.com/calculator/0vewkbnscu\nfloat limited(float x, float maxValue) {\n  return x <= 0.0 ? x : maxValue * x / (maxValue + x);\n}\n\n// Symmetric version of limited\n// \n// Limit a value to a maximum that the function tends to reach when x -> ∞\n// and a minimum (-maximum) that the function tends to reach when x -> -∞\n// https://www.desmos.com/calculator/0vewkbnscu\nfloat slimited(float x, float maxValue) {\n  return x <= 0.0\n    ? -limited(-x, maxValue)\n    : limited(x, maxValue);\n}\n\n// https://www.desmos.com/calculator/0vewkbnscu\nfloat limited(float x, float minValue, float maxValue) {\n  float d = maxValue - minValue;\n  float xd = x - minValue;\n  return x <= minValue ? x : minValue + d * xd / (d + xd);\n}\n\n// Symmetric version of limited\nfloat slimited(float x, float minValue, float maxValue) {\n  return x <= 0.0\n    ? -limited(-x, maxValue, minValue)\n    : limited(x, minValue, maxValue);\n}\n\nfloat sqLength(in vec2 p) {\n  return p.x * p.x + p.y * p.y;\n}\n\nfloat sqLength(in vec3 p) {\n  return p.x * p.x + p.y * p.y + p.z * p.z;\n}\n\nfloat pcurve(float x, float a, float b) {\n  float k = pow(a + b, a + b) / (pow(a, a) * pow(b, b));\n  return k * pow(x, a) * pow(1.0 - x, b);\n}\n\nfloat hash(float p) {\n  return fract(sin(p * 12.9898) * 43758.5453);\n}\n\nfloat hash(vec2 p) {\n  return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat hash(vec3 p) {\n  return fract(sin(dot(p, vec3(12.9898, 78.233, 45.164))) * 43758.5453);\n}\n\nfloat hash(vec4 p) {\n  return fract(sin(dot(p, vec4(12.9898, 78.233, 45.164, 94.673))) * 43758.5453);\n}\n\nvec2 hash2(float p) {\n  return vec2(hash(p), hash(p + 1.0));\n}\n\nvec2 hash2(vec2 p) {\n  return vec2(hash(p.x), hash(p.y));\n}\n\nvec2 hash2(vec3 p) {\n  return vec2(hash(p.xy), hash(p.yz));\n}\n\nvec2 hash2(vec4 p) {\n  return vec2(hash(p.xyz), hash(p.yzw));\n}\n\nvec3 hash3(float p) {\n  return vec3(hash2(p),  hash(p + 2.0));\n}\n\nvec3 hash3(vec2 p) {\n  return vec3(hash2(p), hash(p));\n}\n\nvec3 hash3(vec3 p) {\n  return vec3(hash(p.x), hash(p.y), hash(p.z));\n}\n\nvec3 hash3(vec4 p) {\n  return vec3(hash(p.xy), hash(p.yz), hash(p.zw));\n}\n\nfloat hash_alt(float p) {\n  return fract(sin(p * 127.1) * 311.7);\n}\n\nfloat hash_alt(vec2 p) {\n  return fract(sin(dot(p, vec2(127.1, 311.7))) * 269.5);\n}\n\nfloat hash_alt(vec3 p) {\n  return fract(sin(dot(p, vec3(127.1, 311.7, 74.7))) * 269.5);\n}\n\nfloat hash_alt(vec4 p) {\n  return fract(sin(dot(p, vec4(127.1, 311.7, 74.7, 113.5))) * 269.5);\n}\n\n").concat((0,o.N)("vecX","\n  T min3(in T a, in T b, in T c) {\n    return min(min(a, b), c);\n  }\n"),"\n\n").concat((0,o.N)("vecX","\n  T min4(in T a, in T b, in T c, in T d) {\n    return min(min(a, b), min(c, d));\n  }\n"),"\n\n#endif // GLSL_UTILS\n")},8610:(e,t,n)=>{n.d(t,{Main:()=>W});var a=n(70691),o=n(49797),r=n(84306),i=n(63106),l=n(99332),s=n(31763),c=n(36508),h=n(35375),u=n(28737);function p(){return(0,r.yk)(function*(e){Object.assign(window,{three:e,Ticker:c.Rv})},[]),null}var f=n(15931),d=n(79911),m=n(48181),x=n(7147),v=n(22899),w=n(8144),y=n(79285),g=n(17099);let b=JSON.parse('[{"phi":1.7045171372513754,"theta":0.9426432714835036},{"phi":1.2138204764190186,"theta":0.5877279735536564},{"phi":2.018280663352346,"theta":0.4225774045053551},{"phi":1.58623960126316,"theta":0.11530620356664824},{"phi":1.4858931296682674,"theta":0.09988610745985425},{"phi":1.370250993061531,"theta":-0.6152078487213142},{"phi":0.9459811008591165,"theta":-0.4116473816238604},{"phi":1.06660504904375,"theta":-0.22199053344895067},{"phi":2.675243191552906,"theta":-0.6045343364962831},{"phi":2.5901332086293296,"theta":-0.45113353839646375},{"phi":3.0820510158643644,"theta":-0.20059237206688585},{"phi":2.920796326794876,"theta":-0.3506750512589778},{"phi":2.707382312980871,"theta":0.025009035614594027},{"phi":-2.771515207166003,"theta":0.43045560632597474},{"phi":-3.068326429226437,"theta":0.6129817652939101},{"phi":3.1105233820660763,"theta":0.7241618779795415},{"phi":-2.5251632895865317,"theta":0.6535499652931851},{"phi":-3.015091410598426,"theta":0.8642317265005449},{"phi":3.0788690924417255,"theta":0.8159956971859744},{"phi":-2.370767607902747,"theta":0.787316008336757},{"phi":-2.5030942996270586,"theta":0.7163689975296974},{"phi":-0.28189011450089596,"theta":0.6816391217572154},{"phi":-0.2988148637926313,"theta":0.5717768908896973},{"phi":-0.1772652581758269,"theta":0.4716751222011235},{"phi":-0.05544012907477782,"theta":-0.028486000516249495},{"phi":-0.06314162733968252,"theta":0.061655565733329316},{"phi":-0.8760666510861576,"theta":-0.6838346154783156},{"phi":-0.7161612255722236,"theta":-0.11386479380967202},{"phi":-0.5032773150049611,"theta":-0.5860256589964206},{"phi":1.7599491315598337,"theta":1.0140201131361222},{"phi":1.555598726738203,"theta":1.0275620052067571},{"phi":1.5867188262212921,"theta":1.091601234052012},{"phi":1.5622775626534053,"theta":1.1451634884556725},{"phi":1.8064000451323763,"theta":0.8291516658764525},{"phi":1.7711742769485577,"theta":0.8002332318072503},{"phi":1.5274585527636149,"theta":0.838434437058171},{"phi":1.3559514207428152,"theta":0.7754675571543634},{"phi":1.1792807716216012,"theta":0.7682476175679409},{"phi":1.3076110196152615,"theta":0.9387650274681301},{"phi":1.4565810952604292,"theta":1.0264229286514035}]'),S=new o.Tap;function M(){let{theta:e=0,phi:t=0,radius:n=1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=arguments.length>1?arguments[1]:void 0;return null!=a||(a=new o.Pq0),a.x=n*Math.cos(e)*Math.cos(t),a.y=n*Math.sin(e),a.z=n*Math.cos(e)*Math.sin(t),a}class P extends o.N1A{constructor(e,{color:t="white"}={}){let n=new o.LoY().setFromPoints(e),a=new o.Fvt({color:t}),r=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:512,t=new Uint8Array(4*e),n=0;for(;n<e;){let a=g.c.int(10,20);n+a>e&&(a=e-n);for(let e=0;e<a;e++)t[4*(n+e)]=255;n+=a,n+=g.c.int(1,80)}for(let n=0;n<e;n+=2)t[4*n+1]=255;let a=new o.GYF(t,e,1,o.GWd);return a.minFilter=a.magFilter=o.hxR,a.wrapS=a.wrapT=o.GJx,a.needsUpdate=!0,a}(),i={uTime:c.Rv.get("three").uTime,uTextureLengthRatio:{value:40},uScale:{value:1},uTexture:{value:r},uLineLength:{value:-1}};a.onBeforeCompile=e=>x.bI.with(e).uniforms(i).varying({vWorldPosition2:"vec3"}).vertex.mainAfterAll("\n        vWorldPosition2 = (modelMatrix * vec4(position, 1.0)).xyz;\n      ").fragment.top("\n        float hash(vec3 p) {\n          // Combine the components of the vec3 using dot products\n          vec3 k = vec3(127.1, 311.7, 74.7); // Large primes to create randomness\n          return fract(sin(dot(p, k)) * 43758.5453123); // Sine and fract create pseudo-randomness\n        }\n      ").fragment.replace(/if .* {\s*discard;\s*}/,"\n        float alpha = vLineDistance / uLineLength;\n        alpha = pow(alpha, 1.0 / 2.0);\n        float x = mod(uLineLength * alpha / uTextureLengthRatio + uTime * -0.05, 1.0);\n        vec4 texel = texture2D(uTexture, vec2(x, 0.5));\n        float outHash = fract(hash(vWorldPosition2) + uTime * 10.0) + mix(5.0, -1.0, alpha);\n        if (texel.r * outHash < 0.5) {\n          discard;\n        }\n      "),super(n,a),this.computeLineDistances(),i.uLineLength.value=this.geometry.attributes.lineDistance.array.at(-1)}}class z extends o.YJl{constructor(e,{pointsPerCurve:t=80,curveSubdivisions:n=256}={}){super();let a=e.length*t,r=new o.LoY,i=new Float32Array(3*a);r.setAttribute("position",new o.THS(i,3));let l=new Float32Array(4*a);g.c.seed(987632);for(let e=0;e<l.length;e++)l[e]=g.c.random();r.setAttribute("random",new o.THS(l,4));let s=new Float32Array(e.length*n*4),h=new Float32Array(e.length*n*4);for(let a=0;a<e.length;a++){for(let e=0;e<t;e++){let n=a*t+e;i[3*n]=e,i[3*n+1]=a,i[3*n+2]=0}let o=e[a].nurbsCurve;if(!o)throw Error("NURBS curve not set.");for(let e=0;e<n;e++){let t=e/n,r=o.getPoint(t),i=o.getTangent(t),l=a*n+e;s[4*l]=r.x,s[4*l+1]=r.y,s[4*l+2]=r.z,h[4*l]=i.x,h[4*l+1]=i.y,h[4*l+2]=i.z}}let u=t=>{let a=new o.GYF(t,n,e.length,o.GWd,o.RQf,o.UTZ,o.ghU,o.ghU,o.hxR,o.hxR);return a.generateMipmaps=!1,a.needsUpdate=!0,a},p=u(s),f=u(h);g.c.seed(5678492);let d={uTime:c.Rv.get("three").uTime,uPointsPerCurve:{value:t},uCurvesMapSize:{value:new o.I9Y(n,e.length)},uCurvesPositionMap:{value:p},uCurvesTangentMap:{value:f},uColors:{value:e.map(e=>e.color)},uCurveRandom:{value:e.map(()=>g.c.random())},uMaskMaps:{value:[S.load("textures/rounded-square.png"),S.load("textures/rounded-plus.png"),S.load("textures/rounded-rhomb.png")]}},m=new o.BH$({vertexColors:!0,size:.5});m.onBeforeCompile=e=>x.bI.with(e).uniforms(d).varying({vRandom:"vec4"}).vertex.top(v.I).vertex.top("\n        attribute vec4 random;\n      ").vertex.replace("begin_vertex","\n        int j = gl_VertexID / int(uPointsPerCurve);\n        int i = gl_VertexID - j * int(uPointsPerCurve);\n        float r = uCurveRandom[j]; // Curve random value\n\n        vColor = uColors[j] * mix(0.8, 1.2, random.x);\n\n        float curveFraction = 0.2;\n        float curveSpeed = 0.0125;\n        float curveInnerSpeed = 0.05;\n\n        float t3 = fract(position.x / uPointsPerCurve + uTime * curveInnerSpeed);\n        float t0 = fract(curveFraction * t3 + r + uTime * curveSpeed);\n        t0 = easeIn2(t0);\n\n        float x = t0;\n        float y = position.y / uCurvesMapSize.y;\n        float xMax = uCurvesMapSize.x - 1.0; // one less because of linear interpolation (x0 -> x1)\n        float xT = fract(x * xMax);\n        float x0 = floor(x * xMax) / xMax;\n        float x1 = floor(x * xMax + 1.0) / xMax;\n        \n        vec3 p0 = texture(uCurvesPositionMap, vec2(x0, y)).xyz;\n        vec3 p1 = texture(uCurvesPositionMap, vec2(x1, y)).xyz;\n        vec3 p = mix(p0, p1, xT);\n\n        vec3 tangent0 = texture(uCurvesTangentMap, vec2(x0, y)).xyz;\n        vec3 tangent1 = texture(uCurvesTangentMap, vec2(x1, y)).xyz;\n        vec3 tangent = mix(tangent0, tangent1, xT);\n\n        vec3 normal = normalize(cross(tangent, vec3(0.0, 1.0, 0.0)));\n        vec3 binormal = normalize(cross(normal, tangent));\n\n        float t1 = sin(random.x * PI2 + uTime * mix(0.5, 1.0, random.z));\n        float t2 = sin(random.y * PI2 + uTime * mix(0.5, 1.0, random.w));\n        float dispersion = mix(0.005, 0.2, easeOut8(t0));\n        vec3 transformed = p \n          + normal * (random.z - 0.5) * dispersion * t1 \n          + binormal * (random.w - 0.5) * dispersion * t2;\n      ").vertex.mainAfterAll("\n        gl_PointSize *= mix(0.2, 1.0, easeInThenOut(t0, 16.0))\n          * mix(0.25, 1.0, easeInThenOut(t3, 6.0))\n          * mix(0.25, 1.0, random.z);\n\n        vRandom = random;\n      ").fragment.mainAfterAll("\n        if (vRandom.x < 0.5) {\n          if (texture2D(uMaskMaps[0], gl_PointCoord).r < 0.5) discard;\n        } else if (vRandom.y < 0.2) {\n          if (texture2D(uMaskMaps[1], gl_PointCoord).r < 0.5) discard;\n        } else {\n          if (texture2D(uMaskMaps[2], gl_PointCoord).r < 0.5) discard;\n        }\n      ");let w=new o.ONl(r,m);this.add(w)}}function k(e,t,n){let a=n.length-e-1;if(t>=n[a])return a-1;if(t<=n[e])return e;let o=e,r=a,i=Math.floor((o+r)/2);for(;t<n[i]||t>=n[i+1];)t<n[i]?r=i:o=i,i=Math.floor((o+r)/2);return i}class C extends o.Ipv{constructor(e,t,n,a,r){super();let i=t?t.length-1:0,l=n?n.length:0;this.degree=e,this.knots=t,this.controlPoints=[],this.startKnot=a||0,this.endKnot=r||i;for(let e=0;e<l;++e){let t=n[e];this.controlPoints[e]=new o.IUQ(t.x,t.y,t.z,t.w)}}getPoint(e,t=new o.Pq0){let n=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),a=function(e,t,n,a){let r=k(e,a,t),i=function(e,t,n,a){let o=[],r=[],i=[];o[0]=1;for(let l=1;l<=n;++l){r[l]=t-a[e+1-l],i[l]=a[e+l]-t;let n=0;for(let e=0;e<l;++e){let t=i[e+1],a=r[l-e],s=o[e]/(t+a);o[e]=n+t*s,n=a*s}o[l]=n}return o}(r,a,e,t),l=new o.IUQ(0,0,0,0);for(let t=0;t<=e;++t){let a=n[r-e+t],o=i[t],s=a.w*o;l.x+=a.x*s,l.y+=a.y*s,l.z+=a.z*s,l.w+=a.w*o}return l}(this.degree,this.knots,this.controlPoints,n);return 1!==a.w&&a.divideScalar(a.w),t.set(a.x,a.y,a.z)}getTangent(e,t=new o.Pq0){var n,a,r;let i=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),l=(n=this.degree,a=this.knots,r=this.controlPoints,function(e){let t=e.length,n=[],a=[];for(let r=0;r<t;++r){let t=e[r];n[r]=new o.Pq0(t.x,t.y,t.z),a[r]=t.w}let r=[];for(let e=0;e<t;++e){let t=n[e].clone();for(let n=1;n<=e;++n)t.sub(r[e-n].clone().multiplyScalar(function(e,t){let n=1;for(let t=2;t<=e;++t)n*=t;let a=1;for(let e=2;e<=t;++e)a*=e;for(let n=2;n<=e-t;++n)a*=n;return n/a}(e,n)*a[n]));r[e]=t.divideScalar(a[0])}return r}(function(e,t,n,a,r){let i=1<e?r:e,l=[],s=k(e,a,t),c=function(e,t,n,a,o){let r=[];for(let e=0;e<=n;++e)r[e]=0;let i=[];for(let e=0;e<=a;++e)i[e]=r.slice(0);let l=[];for(let e=0;e<=n;++e)l[e]=r.slice(0);l[0][0]=1;let s=r.slice(0),c=r.slice(0);for(let a=1;a<=n;++a){s[a]=t-o[e+1-a],c[a]=o[e+a]-t;let n=0;for(let e=0;e<a;++e){let t=c[e+1],o=s[a-e];l[a][e]=t+o;let r=l[e][a-1]/l[a][e];l[e][a]=n+t*r,n=o*r}l[a][a]=n}for(let e=0;e<=n;++e)i[0][e]=l[e][n];for(let e=0;e<=n;++e){let t=0,o=1,s=[];for(let e=0;e<=n;++e)s[e]=r.slice(0);s[0][0]=1;for(let r=1;r<=a;++r){let a=0,c=e-r,h=n-r;e>=r&&(s[o][0]=s[t][0]/l[h+1][c],a=s[o][0]*l[c][h]);let u=c>=-1?1:-c,p=e-1<=h?r-1:n-e;for(let e=u;e<=p;++e)s[o][e]=(s[t][e]-s[t][e-1])/l[h+1][c+e],a+=s[o][e]*l[c+e][h];e<=h&&(s[o][r]=-s[t][r-1]/l[h+1][e],a+=s[o][r]*l[e][h]),i[r][e]=a;let f=t;t=o,o=f}}let h=n;for(let e=1;e<=a;++e){for(let t=0;t<=n;++t)i[e][t]*=h;h*=n-e}return i}(s,a,e,i,t),h=[];for(let e=0;e<n.length;++e){let t=n[e].clone(),a=t.w;t.x*=a,t.y*=a,t.z*=a,h[e]=t}for(let t=0;t<=i;++t){let n=h[s-e].clone().multiplyScalar(c[t][0]);for(let a=1;a<=e;++a)n.add(h[s-e+a].clone().multiplyScalar(c[t][a]));l[t]=n}for(let e=i+1;e<=r+1;++e)l[e]=new o.IUQ(0,0,0);return l}(n,a,r,i,1)));return t.copy(l[1]).normalize(),t}toJSON(){let e=super.toJSON();return e.degree=this.degree,e.knots=[...this.knots],e.controlPoints=this.controlPoints.map(e=>e.toArray()),e.startKnot=this.startKnot,e.endKnot=this.endKnot,e}fromJSON(e){return super.fromJSON(e),this.degree=e.degree,this.knots=[...e.knots],this.controlPoints=e.controlPoints.map(e=>new o.IUQ(e[0],e[1],e[2],e[3])),this.startKnot=e.startKnot,this.endKnot=e.endKnot,this}}var T=n(93432);class L extends o.YJl{setControlPoints(e){let{curveSubdivisions:t=512}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{degree:n,color:a}=this,r=e.map(e=>e instanceof o.Pq0?new o.IUQ(e.x,e.y,e.z,1):e),i=[],l=r.length;for(let e=0;e<=n;e++)i.push(0);for(let e=1;e<=l-n;e++)i.push(e);for(let e=0;e<n;e++)i.push(l-n);let s=new C(n,i,r),c=s.getSpacedPoints(t),h=new o.LoY().setFromPoints(c),u=new o.N1A(h,new o.mrM({color:a}));this.add(u);let p=new o.ZLX(L.instancedGeometry,new o.V9B({color:a}),r.length);this.add(p);let f=new o.kn4;for(let[e,t]of r.entries()){let{x:n,y:a,z:o,w:r}=t;p.setMatrixAt(e,(0,T.vl)({x:n,y:a,z:o,scaleScalar:r},f))}this.controlPoints=r,this.nurbsCurve=s,this.points=c}constructor(...e){super(...e),this.degree=8,this.color=new o.Q1f(0xff0000),this.nurbsCurve=null,this.controlPoints=[],this.points=[]}}L.instancedGeometry=new o.WBB(.005,12);let A=["#3366ff","#009a27","#00943b","#2512cf","#bb1d81","#67cd6c","#fed801","#ff1f02"];class I extends o.YJl{addSpot(e,t){let{x:n,y:a,z:o}=e,{matrix:r,color:i}=I.shared;this.instancedMesh.setMatrixAt(this.index,r.makeTranslation(n,a,o)),this.instancedMesh.setColorAt(this.index,i.set(t)),this.index++}constructor({sizeBase:e=400}={}){super(),this.index=0;let{geometry:t,material:n,matrix:a,color:r}=I.shared;this.instancedMesh=new o.ZLX(t,n,e),this.add(this.instancedMesh),a.makeScale(0,0,0),r.set("white");for(let t=0;t<e;t++)this.instancedMesh.setMatrixAt(t,a),this.instancedMesh.setColorAt(t,r)}}I.shared={geometry:new o.WBB(.005,12),material:new o.V9B,matrix:new o.kn4().makeScale(0,0,0),color:new o.Q1f("white")};class j extends o.YJl{onTick(e){}earthRaycast(e){var t;let n=e.clone().applyMatrix4(this.matrixWorld.clone().invert()).intersectSphere(new o.iyt(new o.Pq0,1),new o.Pq0);return null!=(t=null==n?void 0:n.applyMatrix4(this.matrixWorld))?t:null}addSphericalSpot(e){let{phi:t,theta:n,color:a="white"}=e;this.parts.miniSpots.addSpot(M({phi:t,theta:n,radius:1}),a);let o=new L;o.degree=8,o.color.set(a);let r=[M({phi:t,theta:n,radius:1})],i=n,l=t;for(let e=0;e<12;e++){let t=(0,y.lerp)(2,5,e/12);r.push(M({theta:i,phi:l,radius:t})),i=(0,y.lerp)(i,0,.5),l+=-.65}return o.setControlPoints(r),o}constructor(){super(),this.uniforms={uTime:c.Rv.get("three").uTime,uSpherize:{value:1},uSunPosition:{value:new o.Pq0(.5,.7,.3)},uSide:{value:0}},this.userData=function(e,t){for(let[n,a]of Object.entries(t)){let[t,o="value"]=a.bind;Object.defineProperty(e,n,{enumerable:!0,get:()=>t[o],set:e=>t[o]=e}),a.meta&&Object.defineProperty(e,"".concat(n,"_meta"),{enumerable:!0,get:()=>a.meta})}return e}({},{spherize:{bind:[this.uniforms.uSpherize,"value"],meta:"Slider(0, 1)"}}),this.parts={miniSpots:new I,back:null,front:null},this.sphericalSpots=[];let e=S.load("images/blank-world-map-alt.png"),{uniforms:t}=this,n=new o.V9B({map:e,transparent:!0,side:o.$EB,depthWrite:!1});n.onBeforeCompile=e=>x.bI.with(e).uniforms(t).varying({vWorldNormal:"vec3",vWorldPosition2:"vec3"}).vertex.replace("begin_vertex","\n        float tx = position.x;\n        float ty = position.y;\n\n        vec3 transformed;\n        vec3 normal;\n        if (uSpherize < 0.001) {\n          transformed = vec3(tx * 2.0, ty, 0.0) * PI;\n          normal = vec3(0.0, 0.0, 1.0);\n        } else {\n          float r = 1.0 / uSpherize;\n          float phi = tx * PI * 2.0 * uSpherize - PI * 0.5;\n          float theta = ty * PI * uSpherize;\n          float x = cos(theta) * cos(phi);\n          float z = cos(theta) * -sin(phi);\n          float y = sin(theta);\n          transformed = vec3(x, y, z - 1.0) * r + vec3(0.0, 0.0, uSpherize);\n          normal = vec3(x, y, z);\n        }\n        vWorldNormal = normalize(mat3(modelMatrix) * normal);\n        vWorldPosition2 = (modelMatrix * vec4(transformed, 1.0)).xyz;\n      ").vertex.mainAfterAll("\n      ").fragment.top(w.H,v.I).fragment.mainBeforeAll("\n        vec3 lightDirection = normalize(uSunPosition);\n        float light = dot(vWorldNormal, lightDirection) * 0.5 + 0.5;\n        light = pow(light, 2.0);\n\n        vec3 viewDir = normalize(cameraPosition - vWorldPosition2);\n        float cosTheta = dot(normalize(vWorldNormal * uSide), viewDir);\n        float fresnelBias = 0.1;\n        float fresnelPower = 3.0;\n        float fresnel = fresnelBias + (1.0 - fresnelBias) * pow(1.0 - cosTheta, fresnelPower);\n      ").fragment.replace("map_fragment","\n        #ifdef USE_MAP\n          vec2 uv = vMapUv;\n          float r = uv.y * 2.0;\n          if (r > 1.0) r = 2.0 - r;\n          r = 1.0 - r;          \n\n          float a = 0.0;\n          a += pow(r, 2.4) * 0.205;\n          a += pow(r, 10.0) * 0.03;\n          float x = uv.x;\n          \n          float padding = 0.005;\n          uv.x = mix(padding + a, 1.0 - padding - a, x);\n          // uv.x = 1.0 - uv.x;\n          vec4 sampledDiffuseColor = texture2D(map, uv);\n\n          diffuseColor.rgb *= vec3(mix(0.75, 1.0, light));\n          float alpha = (sampledDiffuseColor.r + sampledDiffuseColor.g + sampledDiffuseColor.b) > 0.1 ? 1.0 : 0.0;\n          diffuseColor.a *= alpha + fresnel * 1.2;\n          // diffuseColor.rgb = vec3(fresnel);\n          // diffuseColor.rgb = vWorldNormal;\n          // diffuseColor.a = 1.0;\n        #endif\n      ");let a=new o.bdM(1,1,256,128);(0,d.mj)(this,{name:"earth"});let r=(0,d.mj)(new o.eaF(a,n),{parent:this,name:"back"});r.onBeforeRender=()=>{t.uSide.value=-1,n.color.set("#cdcdcd"),n.side=o.hsX,n.needsUpdate=!0},this.parts.back=r;let i=(0,d.mj)(new o.eaF(a,n),{parent:this,name:"front"});i.onBeforeRender=()=>{t.uSide.value=1,n.color.set("#ffffff"),n.side=o.hB5,n.needsUpdate=!0},this.parts.front=i,(0,d.mj)(new o.eaF(new o.bdM,n),{parent:this,y:-1.5,scaleX:3,visible:!1}),(0,d.mj)(new m.R,{parent:this}).circle({radius:1.04}).draw(),g.c.seed(123);let l=[...b.map(e=>this.addSphericalSpot({...e,color:g.c.pick(A)})),...b.filter(()=>g.c.chance(.8)).map(e=>{let{phi:t,theta:n}=e;return t+=.04*g.c.around(),n+=.04*g.c.around(),this.addSphericalSpot({phi:t,theta:n,color:g.c.pick(A)})})];this.add(...l.map(e=>new P(e.points,{color:e.color})));let s=new z(l);this.add(s),this.add(this.parts.miniSpots)}}j.sphericalCoordinates={paris:{theta:.9426432714835036,phi:1.7045171372513754}};class B extends o.eaF{constructor(){let e=new o.V9B({color:"#cccccc",side:o.hsX}),t={uResolution:{value:new o.I9Y}};e.onBeforeCompile=e=>x.bI.with(e).uniforms(t).fragment.replace("map_fragment","\n        vec2 p = gl_FragCoord.xy / uResolution * 2.0 - 1.0;\n        float aspect = uResolution.x / uResolution.y;\n        p *= aspect > 1.0 ? vec2(1.0, 1.0 / aspect) : vec2(aspect, 1.0);\n        float alpha = 1.0 - length(p);\n        diffuseColor.rgb *= mix(0.8, 1.4, alpha);\n      "),super(new o.WBB(40,12),e),this.onBeforeRender=e=>{e.getSize(t.uResolution.value).multiplyScalar(e.getPixelRatio())}}}class R extends o.ONl{constructor(e=5e3){let t=new o.LoY,n=new Float32Array(3*e),a=new Float32Array(e),r=new o.Pq0;for(let t=0;t<e;t++)(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new o.Pq0,t=2*Math.random()*Math.PI,n=Math.acos(2*Math.random()-1);return e.x=Math.sin(n)*Math.cos(t),e.y=Math.sin(n)*Math.sin(t),e.z=Math.cos(n),e})(r).multiplyScalar(36).toArray(n,3*t),a[t]=g.c.between(.2,.5);t.setAttribute("position",new o.qtW(n,3)),t.setAttribute("instanceSize",new o.qtW(a,1));let i=new o.BH$({color:"#ffffff"});i.onBeforeCompile=e=>x.bI.with(e).vertex.top("\n        attribute float instanceSize;\n      ").vertex.mainAfterAll("\n        gl_PointSize *= instanceSize;\n      ").fragment.mainBeforeAll("\n        float dist = length(gl_PointCoord - 0.5);\n        if (dist > 0.5) discard;\n      "),super(t,i)}}class V extends o.YJl{constructor(...e){super(...e),this.parts={sphere:(0,d.mj)(new B,this),stars:(0,d.mj)(new R,this)}}}class N extends o.YJl{constructor(...e){super(...e),this.parts={ambient:(0,d.mj)(new o.$p8(0xffffff,1.5),this),directional:(0,d.mj)(new o.ZyN(0xffffff,1.5),this)}}}class D extends o.YJl{constructor(...e){super(...e),this.parts={sky:(0,d.mj)(new V,this),earth:(0,d.mj)(new j,this),lights:(0,d.mj)(new N,this),grid:(0,d.mj)(new f.P({size:[20,20]}),{parent:this,visible:!1})}}}class _{initialize(e,t){return this.initialized?console.warn("Pointer already initialized."):(this.initialized=!0,this.destroyables.push(...this.doInitialize(e,t))),this}*doInitialize(e,t){yield(0,l.s)(e,{onChange:n=>{this.screen.position.copy(n.position);let a=e.getBoundingClientRect(),{x:o,y:r}=n.position;o-=a.left,r-=a.top,o/=a.width,r/=a.height,o=2*o-1,r=-(2*r-1),this.ndc.position.set(o,r),this.raycaster.setFromCamera(this.ndc.position,t)},onDown:()=>{this.screen.positionDown.copy(this.screen.position),this.ndc.positionDown.copy(this.ndc.position)}})}constructor(){this.screen={position:new o.I9Y,positionDown:new o.I9Y},this.ndc={position:new o.I9Y,positionDown:new o.I9Y},this.raycaster=new o.tBo,this.destroyables=[],this.initialized=!1}}function F(){return(0,r.yk)(function*(e){let t=new D;e.scene.add(t),yield()=>{t.clear().removeFromParent()},e.ticker.set({minActiveDuration:100});let n=new _;n.initialize(e.renderer.domElement,e.camera);let a=new s.n({perspective:.25,size:4});a.start(e.renderer.domElement),yield(0,c.xy)("three",()=>{a.update(e.camera,e.aspect)}),yield(0,l.s)(e.renderer.domElement,{onTap:()=>{let e=t.parts.earth.earthRaycast(n.raycaster.ray);if(e){let{x:n,y:a,z:o}=e,r=Math.atan2(a,Math.sqrt(n**2+o**2)),i=Math.atan2(o,n);t.parts.earth.addSphericalSpot({theta:r,phi:i})}}}),yield(0,i.a)([[{code:"Space",modifiers:"shift"},()=>{document.body.requestFullscreen()}]]),Object.assign(window,{poc1:t,three:e,controls:a})},"always"),null}function Y(){return(0,r.yk)(function*(e){(0,u.O)(e),S.setPath(h.$.assets()),console.log("Assets config.assetsPath: ".concat(h.$.assets()))},[]),null}function W(){return(0,a.jsxs)("div",{className:"layer thru",children:[(0,a.jsxs)(r.uB,{children:[(0,a.jsx)(Y,{}),(0,a.jsx)(p,{}),(0,a.jsx)(F,{})]}),(0,a.jsx)("header",{className:"absolute thru w-full top-0 p-8",children:(0,a.jsx)("img",{width:100,src:h.$.assets("images/acme-logo.png"),alt:""})}),(0,a.jsx)("footer",{className:"absolute thru w-full bottom-0 p-12 flex flex-row justify-center"}),(0,a.jsx)("div",{className:"layer thru",children:(0,a.jsx)("div",{className:"absolute left-0 top-0 w-[300px] h-full"})})]})}},15931:(e,t,n)=>{n.d(t,{P:()=>i});var a=n(49797),o=n(93432);let r={color:"white",opacity:.5,plane:"XY",size:[8,8],step:1,frame:!0};class i extends a.DXC{set(e){let{color:t,opacity:n,size:i,step:l,frame:s,plane:c}={...r,...e},h=(0,o.wX)(i),u=(0,o.wX)(null!=l?l:h),p=[],f=(e,t)=>p.push(new a.Pq0(e,t,0));s&&(f(-h.x/2,h.y/2),f(h.x/2,h.y/2),f(h.x/2,h.y/2),f(h.x/2,-h.y/2),f(h.x/2,-h.y/2),f(-h.x/2,-h.y/2),f(-h.x/2,-h.y/2),f(-h.x/2,h.y/2));let d=Math.ceil(-h.x/2/u.x)*u.x;d===-h.x/2&&(d+=u.x);do f(d,-h.y/2),f(d,h.y/2),d+=u.x;while(d<h.x/2);let m=Math.ceil(-h.y/2/u.y)*u.y;m===-h.y/2&&(m+=u.y);do f(-h.x/2,m),f(h.x/2,m),m+=u.y;while(m<h.y/2);switch(this.geometry.setFromPoints(p),c){case"XZ":this.geometry.rotateX(Math.PI/2);break;case"YZ":this.geometry.rotateY(Math.PI/2)}return this.material.color.set(t),this.material.opacity=n,this.material.transparent=n<1,this}constructor(e){super(),this.set(null!=e?e:r)}}},28737:(e,t,n)=>{n.d(t,{Leak:()=>u,O:()=>h});var a={};n.r(a),n.d(a,{distribute:()=>r.mn,every:()=>r.Si,findMaxBy:()=>r.vj,pairwise:()=>r.Ju,recordBy:()=>r.VY,some:()=>r.zN,split:()=>r.mn,uniqueBy:()=>r.pD});var o=n(30158),r=n(43107),i=n(38062),l=n(85795),s=n(17099),c=n(96122);function h(e){Object.assign(window,{...o,...l,...a,...e,PRNG:s.c,waveform:i.o,dedent:c.T})}function u(e){return h(e),null}},35375:(e,t,n)=>{n.d(t,{$:()=>o});let a="/three-xp/assets/",o={development:!1,assetsPath:a,assets:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return"".concat(a).concat(e)}}},38062:(e,t,n)=>{n.d(t,{o:()=>a});let a={triangle:function(e){let{frequency:t=1,phase:n=0,f:a=t,p:o=n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=e*a+o,i=2*r-Math.floor(2*r);return r-Math.floor(r)<.5?i:1-i}}},63106:(e,t,n)=>{function a(e,t){return"*"===t||("string"==typeof t?t===e:t instanceof RegExp?t.test(e):"function"==typeof t&&t(e))}n.d(t,{a:()=>l});let o={preventDefault:!1,strictTarget:void 0},r={key:"*",keyCaseInsensitive:!0,code:"*",noModifiers:!1,modifiers:"",phase:"down"},i=0;function l(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];let l=i++,[s,c,h]=1===t.length?[document.body,{},t[0]]:2===t.length?[t[0],{},t[1]]:t,{preventDefault:u}={...o,...c},p=null,f=e=>{var t;if((null!=(t=c.strictTarget)?!!t:s===document.body)&&e.target!==s)return;"keydown"===e.type&&(p=e);let{ctrlKey:n=!1,altKey:o=!1,shiftKey:i=!1,metaKey:f=!1}=null!=p?p:{},d={id:l,event:e,downEvent:p,modifiers:{ctrl:n,alt:o,shift:i,meta:f}};for(let t=0,l=h.length;t<l;t++){let[l,s]=h[t],{key:c,keyCaseInsensitive:m,code:x,noModifiers:v,modifiers:w,phase:y="down"}=function(e){let t="string"==typeof e?{...r,key:e}:{...r,...e};return t.keyCaseInsensitive&&"string"==typeof t.key&&(t.key=t.key.toLowerCase()),t}(l);switch(e.type){case"keydown":if("down"!==y)continue;break;case"keyup":if("up"!==y)continue}Object.values({key:a(m?e.key.toLowerCase():e.key,c),code:a(e.code,x),noModifiers:!v||!1===n&&!1===o&&!1===i&&!1===f,modifiers:function(e,t){let{ctrlKey:n,altKey:a,shiftKey:o,metaKey:r}=e;if("function"==typeof t)return t({ctrl:n,alt:a,shift:o,meta:r});let{ctrl:i=!1,alt:l=!1,shift:s=!1,meta:c=!1}=Object.fromEntries(t.split("-").map(e=>[e,!0]));return i===n&&l===a&&s===o&&c===r}(p,w)}).every(Boolean)&&(u&&e.preventDefault(),s(d))}};return s.addEventListener("keydown",f,{passive:!1}),s.addEventListener("keyup",f,{passive:!1}),{destroy:()=>{s.removeEventListener("keydown",f),s.removeEventListener("keyup",f)}}}},65927:(e,t,n)=>{n.d(t,{S:()=>a});let a="\n#ifndef GLSL_BASIC\n#define GLSL_BASIC\n\nfloat clamp01(float x) {\n  return x < 0.0 ? 0.0 : x > 1.0 ? 1.0 : x;\n}\n\nvec2 clamp01(vec2 x) {\n  return vec2(clamp01(x.x), clamp01(x.y));\n}\n\nvec3 clamp01(vec3 x) {\n  return vec3(clamp01(x.x), clamp01(x.y), clamp01(x.z));\n}\n\nvec4 clamp01(vec4 x) {\n  return vec4(clamp01(x.x), clamp01(x.y), clamp01(x.z), clamp01(x.w));\n}\n\n#endif\n"},96122:(e,t,n)=>{n.d(t,{T:()=>a});function a(e){let t=e.split("\n"),n=0;for(let e of t){let t=e.match(/^(\s*)\S/);if(t){n=t[1].length;break}}return t.map(e=>e.slice(Math.min(e.length,n))).join("\n")}}}]);